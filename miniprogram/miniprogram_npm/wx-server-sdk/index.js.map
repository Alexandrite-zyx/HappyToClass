{"version":3,"sources":["index.js","package.json"],"names":[],"mappingsfile":"index.js","sourcesContent":["module.exports =\r\n/******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"./src/api/cloud/index.ts\":\r\n/*!********************************!*\\\r\n  !*** ./src/api/cloud/index.ts ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst provider_1 = __webpack_require__(/*! ./provider */ \"./src/api/cloud/provider/index.ts\");\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst type_1 = __webpack_require__(/*! utils/type */ \"./src/utils/type.ts\");\r\nconst index_1 = __webpack_require__(/*! ../index */ \"./src/api/index.ts\");\r\n// @ts-ignore\r\nconst { version } = require('./package.json');\r\nclass Cloud {\r\n    constructor() {\r\n        this.inited = false;\r\n        this.services = {};\r\n        this.debug = false;\r\n        this.instanceForEnv = new Map;\r\n        this.wrapCommonAPICheck = (func) => {\r\n            return (...args) => {\r\n                if (!this.inited) {\r\n                    throw new error_1.CloudSDKError({\r\n                        errMsg: 'Cloud API isn\\'t enabled, please call init first\\n' +\r\n                            '请先调用 init 完成初始化后再调用其他云 API。init 方法可传入一个对象用于设置默认配置，详见文档。'\r\n                    });\r\n                }\r\n                return func.apply(this, args);\r\n            };\r\n        };\r\n        const that = this;\r\n        this.exportAPI = {\r\n            version,\r\n            get DYNAMIC_CURRENT_ENV() {\r\n                const env = process.env.TCB_ENV || process.env.SCF_NAMESPACE;\r\n                if (env === 'local' && process.env.TENCENTCLOUD_RUNENV === 'WX_LOCAL_SCF') {\r\n                    console.group('环境提示');\r\n                    console.log('在本地调试中使用 DYNAMIC_CURRENT_ENV 相当于使用默认环境（第一个创建的环境）');\r\n                    console.groupEnd();\r\n                    return undefined;\r\n                }\r\n                return that.provider.DYNAMIC_CURRENT_ENV;\r\n            },\r\n            // @ts-ignore\r\n            init: this.init.bind(this),\r\n            // @ts-ignore\r\n            updateConfig: this.updateConfig.bind(this),\r\n            registerService: (serviceProvider) => {\r\n                this.registerService(serviceProvider.createService(this));\r\n            },\r\n            // @ts-ignore\r\n            createNewInstance: (config) => {\r\n                const instance = new Cloud();\r\n                instance.init(config);\r\n                return instance.exportAPI;\r\n            }\r\n        };\r\n        index_1.registerServices(this);\r\n        this.meta = {\r\n            session_id: (+new Date).toString()\r\n        };\r\n        this.config = {\r\n            env: {},\r\n        };\r\n        this.provider = provider_1.default();\r\n    }\r\n    getMetaData() {\r\n        return this.meta;\r\n    }\r\n    getAPIs() {\r\n        return Object.assign({}, this.exportAPI);\r\n    }\r\n    init(config = {}) {\r\n        if (this.inited)\r\n            return;\r\n        this.inited = true;\r\n        this.instance = this.provider.init(this.getProviderInitOptions(config));\r\n        const _config = Object.assign(Object.assign({}, config), { env: type_1.isObject(config.env) ? config.env : { default: config.env } });\r\n        this.config = _config;\r\n        this.exportAPI.logger = this.instance.logger.bind(this.instance);\r\n    }\r\n    getProviderInitOptions(config = {}) {\r\n        return Object.assign(Object.assign({ throwOnCode: false }, config), { version: `wx-server-sdk/${version}`, isHttp: process.env.TENCENTCLOUD_RUNENV === 'WX_LOCAL_SCF' });\r\n    }\r\n    getInstanceForEnv(env) {\r\n        // aggressive mode\r\n        return this.provider.init(this.getProviderInitOptions(Object.assign(Object.assign({}, this.config), { env })));\r\n        /*\r\n        if (!env) {\r\n          return this.instance\r\n        }\r\n    \r\n        if (this.instanceForEnv.has(env)) {\r\n          return this.instanceForEnv.get(env)\r\n        }\r\n    \r\n        const instance = this.provider.init(this.getProviderInitOptions({\r\n          ...this.config,\r\n          env,\r\n        }))\r\n    \r\n        this.instanceForEnv.set(env, instance)\r\n    \r\n        return instance\r\n        */\r\n    }\r\n    updateConfig(config = {}) {\r\n        this.provider.init(Object.assign(Object.assign({ throwOnCode: false }, config), { version: `wx-server-sdk/${version}` }));\r\n        const _config = Object.assign(Object.assign({}, config), { env: type_1.isObject(config.env) ? config.env : { default: config.env } });\r\n        this.config = _config;\r\n    }\r\n    registerService(service) {\r\n        this.services[service.name] = service;\r\n        if (service.getAPIs) {\r\n            const functions = service.getAPIs();\r\n            for (const name in functions) {\r\n                this.registerFunction(name, functions[name], service.initRequired);\r\n            }\r\n        }\r\n        else if (service.getNamespace) {\r\n            const { namespace, apis } = service.getNamespace();\r\n            this.exportAPI[namespace] = apis;\r\n        }\r\n    }\r\n    registerFunction(name, func, initRequired) {\r\n        this.exportAPI[name] = initRequired === false ? func : this.wrapCommonAPICheck(func);\r\n    }\r\n}\r\nexports.Cloud = Cloud;\r\nconst cloud = new Cloud();\r\nexports.default = cloud;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/cloud/provider/index.ts\":\r\n/*!*****************************************!*\\\r\n  !*** ./src/api/cloud/provider/index.ts ***!\r\n  \\*****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tcb_1 = __webpack_require__(/*! ./tcb */ \"./src/api/cloud/provider/tcb/index.ts\");\r\nvar PROVIDER;\r\n(function (PROVIDER) {\r\n    PROVIDER[PROVIDER[\"TCB\"] = 0] = \"TCB\";\r\n})(PROVIDER = exports.PROVIDER || (exports.PROVIDER = {}));\r\nfunction getProvider(provider = PROVIDER.TCB) {\r\n    switch (provider) {\r\n        default: {\r\n            return tcb_1.default;\r\n        }\r\n    }\r\n}\r\nexports.default = getProvider;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/cloud/provider/tcb/api/callFunction.ts\":\r\n/*!********************************************************!*\\\r\n  !*** ./src/api/cloud/provider/tcb/api/callFunction.ts ***!\r\n  \\********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst error_config_1 = __webpack_require__(/*! ../config/error.config */ \"./src/api/cloud/provider/tcb/config/error.config.ts\");\r\nasync function callFunction(options, config) {\r\n    const tcbInstance = config.instance;\r\n    const res = await tcbInstance.callFunction(options);\r\n    if (res.code && error_config_1.TCB_ERR_CODE[res.code] !== 0) {\r\n        throw {\r\n            errCode: error_config_1.TCB_ERR_CODE[res.code] || error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n            errMsg: `requestID ${res.requestId}, ${res.message}`,\r\n            requestId: res.requestId,\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            result: res.result,\r\n            requestId: res.requestId,\r\n        };\r\n    }\r\n}\r\nexports.callFunction = callFunction;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/cloud/provider/tcb/api/callOpenAPI.ts\":\r\n/*!*******************************************************!*\\\r\n  !*** ./src/api/cloud/provider/tcb/api/callOpenAPI.ts ***!\r\n  \\*******************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\n// DEPRECATED\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst error_config_1 = __webpack_require__(/*! ../config/error.config */ \"./src/api/cloud/provider/tcb/config/error.config.ts\");\r\nconst sleep = (ms = 0) => new Promise(resolve => setTimeout(resolve, ms));\r\nasync function callOpenAPI(options, config) {\r\n    await sleep();\r\n    // console.log('wx-server-sdk tcb.callWxOpenApi options: ', options)\r\n    const tcbInstance = config.instance;\r\n    const res = await tcbInstance.callWxOpenApi({\r\n        apiName: options.api,\r\n        requestData: options.data,\r\n        event: options.event,\r\n    });\r\n    // console.log('wx-server-sdk tcb.callWxOpenApi res: ', res)\r\n    if (res.code && error_config_1.TCB_ERR_CODE[res.code] !== 0) {\r\n        throw {\r\n            errCode: error_config_1.TCB_ERR_CODE[res.code] || error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n            errMsg: res.message,\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            result: res.result,\r\n        };\r\n    }\r\n}\r\nexports.callOpenAPI = callOpenAPI;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/cloud/provider/tcb/api/callWXOpenAPI.ts\":\r\n/*!*********************************************************!*\\\r\n  !*** ./src/api/cloud/provider/tcb/api/callWXOpenAPI.ts ***!\r\n  \\*********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst error_config_1 = __webpack_require__(/*! ../config/error.config */ \"./src/api/cloud/provider/tcb/config/error.config.ts\");\r\nconst error_config_2 = __webpack_require__(/*! ../../../../../config/error.config */ \"./src/config/error.config.ts\");\r\nconst error_1 = __webpack_require__(/*! ../../../../../utils/error */ \"./src/utils/error.ts\");\r\nconst msg_1 = __webpack_require__(/*! ../../../../../utils/msg */ \"./src/utils/msg.ts\");\r\nconst openapi_1 = __webpack_require__(/*! ../../../../../protobuf/openapi */ \"./src/protobuf/openapi.js\");\r\nconst sleep = (ms = 0) => new Promise(resolve => setTimeout(resolve, ms));\r\nasync function callGeneralOpenAPI(method, options, config) {\r\n    await sleep();\r\n    let res;\r\n    try {\r\n        // console.log('wx-server-sdk tcb.callWxOpenApi options: ', options)\r\n        const tcbInstance = config.instance;\r\n        if (method === 'callWxPayApi') {\r\n            res = await tcbInstance.callWxPayApi({\r\n                apiName: options.api,\r\n                requestData: options.data,\r\n            });\r\n        }\r\n        else {\r\n            res = await tcbInstance.callCompatibleWxOpenApi({\r\n                apiName: options.api,\r\n                requestData: options.data,\r\n            });\r\n        }\r\n    }\r\n    catch (err) {\r\n        throw {\r\n            errCode: (err && err.code && error_config_1.TCB_ERR_CODE[err.code]) || error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n            errMsg: (err && err.message) || err || 'empty error message',\r\n        };\r\n    }\r\n    if (!Buffer.isBuffer(res)) {\r\n        // is object\r\n        // must be error\r\n        // tcb must not return object\r\n        if (res.code && res.hasOwnProperty('message')) {\r\n            // tcb error\r\n            throw new error_1.CloudSDKError({\r\n                errCode: error_config_1.TCB_ERR_CODE[res.code] || error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n                errMsg: msg_1.apiFailMsg(options.api, res.message)\r\n            });\r\n        }\r\n        if (res.errcode) {\r\n            // wx error\r\n            throw new error_1.CloudSDKError({\r\n                errCode: res.errcode,\r\n                errMsg: msg_1.apiFailMsg(options.api, res.errmsg),\r\n            });\r\n        }\r\n        if (res.byteLength === 0) {\r\n            throw new error_1.CloudSDKError({\r\n                errCode: error_config_2.ERR_CODE.WX_SYSTEM_ERROR,\r\n                errMsg: msg_1.apiFailMsg(options.api, `empty response`)\r\n            });\r\n        }\r\n        throw new error_1.CloudSDKError({\r\n            errCode: error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n            errMsg: msg_1.apiFailMsg(options.api, `unknown response ${res}`)\r\n        });\r\n    }\r\n    else {\r\n        // is buffer\r\n        if (method === 'callCompatibleWxOpenApi') {\r\n            let wxResp;\r\n            try {\r\n                wxResp = openapi_1.CommOpenApiResp.decode(res);\r\n            }\r\n            catch (decodeError) {\r\n                // fail to parse pb, may well be tcb error\r\n                let jsonParseResult;\r\n                try {\r\n                    jsonParseResult = JSON.parse(res.toString());\r\n                }\r\n                catch (parseTCBRespError) {\r\n                    // unknown error\r\n                    throw new error_1.CloudSDKError({\r\n                        errCode: error_config_2.ERR_CODE.WX_SYSTEM_ERROR,\r\n                        errMsg: msg_1.apiFailMsg(options.api, `unknown wx response received: ${decodeError}`)\r\n                    });\r\n                }\r\n                if (jsonParseResult.code && jsonParseResult.hasOwnProperty('message')) {\r\n                    // tcb error\r\n                    throw new error_1.CloudSDKError({\r\n                        errCode: error_config_1.TCB_ERR_CODE[jsonParseResult.code] || error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n                        errMsg: msg_1.apiFailMsg(options.api, jsonParseResult.message)\r\n                    });\r\n                }\r\n                else {\r\n                    // unknown tcb error\r\n                    throw new error_1.CloudSDKError({\r\n                        errCode: error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n                        errMsg: msg_1.apiFailMsg(options.api, JSON.stringify(jsonParseResult)),\r\n                    });\r\n                }\r\n            }\r\n            if (wxResp) {\r\n                if (wxResp.errorCode) {\r\n                    // wx system error, for example: no permission\r\n                    throw new error_1.CloudSDKError({\r\n                        errCode: error_config_2.ERR_CODE[error_config_2.ERR_CODE[wxResp.errorCode]] || wxResp.errorCode,\r\n                        errMsg: `${error_config_2.ERR_CODE[error_config_2.ERR_CODE.WX_SYSTEM_ERROR]}: error code: ${wxResp.errorCode}`\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                throw new error_1.CloudSDKError({\r\n                    errCode: error_config_2.ERR_CODE.WX_SYSTEM_ERROR,\r\n                    errMsg: msg_1.apiFailMsg(options.api, `empty wx response buffer`)\r\n                });\r\n            }\r\n            return wxResp;\r\n        }\r\n        else {\r\n            // callWxPayApi\r\n            let jsonParseResult;\r\n            try {\r\n                jsonParseResult = JSON.parse(res.toString());\r\n            }\r\n            catch (parseTCBRespError) {\r\n                return res;\r\n                // // unknown error\r\n                // throw new CloudSDKError({\r\n                //   errCode: ERR_CODE.WX_SYSTEM_ERROR as number,\r\n                //   errMsg: apiFailMsg(options.api, `unknown wx response received: ${res.toString()}`)\r\n                // })\r\n            }\r\n            if (jsonParseResult.code && jsonParseResult.hasOwnProperty('message')) {\r\n                // tcb error\r\n                throw new error_1.CloudSDKError({\r\n                    errCode: error_config_1.TCB_ERR_CODE[jsonParseResult.code] || error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n                    errMsg: msg_1.apiFailMsg(options.api, jsonParseResult.message)\r\n                });\r\n            }\r\n            return jsonParseResult;\r\n        }\r\n    }\r\n}\r\nexports.callGeneralOpenAPI = callGeneralOpenAPI;\r\nasync function callWXOpenAPI(options, config) {\r\n    return callGeneralOpenAPI('callCompatibleWxOpenApi', options, config);\r\n}\r\nexports.callWXOpenAPI = callWXOpenAPI;\r\nasync function callWXPayAPI(options, config) {\r\n    return callGeneralOpenAPI('callWxPayApi', options, config);\r\n}\r\nexports.callWXPayAPI = callWXPayAPI;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/cloud/provider/tcb/api/deleteFile.ts\":\r\n/*!******************************************************!*\\\r\n  !*** ./src/api/cloud/provider/tcb/api/deleteFile.ts ***!\r\n  \\******************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst error_config_1 = __webpack_require__(/*! ../config/error.config */ \"./src/api/cloud/provider/tcb/config/error.config.ts\");\r\nconst error_config_2 = __webpack_require__(/*! ../../../../../config/error.config */ \"./src/config/error.config.ts\");\r\nconst sleep = (ms = 0) => new Promise(resolve => setTimeout(resolve, ms));\r\nasync function deleteFile(options, config) {\r\n    await sleep();\r\n    const tcbInstance = config.instance;\r\n    const res = await tcbInstance.deleteFile({\r\n        fileList: options.fileList\r\n    });\r\n    if (res.code && error_config_1.TCB_ERR_CODE[res.code] !== 0) {\r\n        throw {\r\n            errCode: error_config_1.TCB_ERR_CODE[res.code] || error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n            errMsg: res.message,\r\n        };\r\n    }\r\n    else {\r\n        const fileList = (res.fileList || []).filter((s) => Boolean(s)).map((f) => {\r\n            if (f.code && error_config_1.TCB_ERR_CODE[f.code] !== 0) {\r\n                const code = error_config_1.TCB_ERR_CODE[f.code] || error_config_1.TCB_ERR_CODE.SYS_ERR;\r\n                return {\r\n                    fileID: f.fileID,\r\n                    status: error_config_1.TCB_ERR_CODE[f.code] || error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n                    errMsg: error_config_2.ERR_CODE[code]\r\n                };\r\n            }\r\n            return {\r\n                fileID: f.fileID,\r\n                status: 0,\r\n                errMsg: 'ok',\r\n            };\r\n        });\r\n        //@ts-ignore\r\n        return {\r\n            fileList: fileList,\r\n            requestId: res.requestId,\r\n        };\r\n    }\r\n}\r\nexports.deleteFile = deleteFile;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/cloud/provider/tcb/api/downloadFile.ts\":\r\n/*!********************************************************!*\\\r\n  !*** ./src/api/cloud/provider/tcb/api/downloadFile.ts ***!\r\n  \\********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst error_config_1 = __webpack_require__(/*! ../config/error.config */ \"./src/api/cloud/provider/tcb/config/error.config.ts\");\r\nconst sleep = (ms = 0) => new Promise(resolve => setTimeout(resolve, ms));\r\nasync function downloadFile(options, config) {\r\n    await sleep();\r\n    const statusCode = 200;\r\n    const tcbInstance = config.instance;\r\n    const res = await tcbInstance.downloadFile({\r\n        fileID: options.fileID\r\n    });\r\n    if (res.code && error_config_1.TCB_ERR_CODE[res.code] !== 0) {\r\n        throw {\r\n            errCode: error_config_1.TCB_ERR_CODE[res.code] || error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n            errMsg: res.message,\r\n        };\r\n    }\r\n    return {\r\n        statusCode: statusCode,\r\n        fileContent: res.fileContent,\r\n    };\r\n}\r\nexports.downloadFile = downloadFile;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/cloud/provider/tcb/api/getTempFileURL.ts\":\r\n/*!**********************************************************!*\\\r\n  !*** ./src/api/cloud/provider/tcb/api/getTempFileURL.ts ***!\r\n  \\**********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst error_config_1 = __webpack_require__(/*! ../config/error.config */ \"./src/api/cloud/provider/tcb/config/error.config.ts\");\r\nconst error_config_2 = __webpack_require__(/*! ../../../../../config/error.config */ \"./src/config/error.config.ts\");\r\nconst sleep = (ms = 0) => new Promise(resolve => setTimeout(resolve, ms));\r\nasync function getTempFileURL(options, config) {\r\n    await sleep();\r\n    const tcbInstance = config.instance;\r\n    const res = await tcbInstance.getTempFileURL({\r\n        fileList: options.fileList,\r\n    });\r\n    if (res.code && error_config_1.TCB_ERR_CODE[res.code] !== 0) {\r\n        throw {\r\n            errCode: error_config_1.TCB_ERR_CODE[res.code] || error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n            errMsg: res.message,\r\n        };\r\n    }\r\n    else {\r\n        const fileList = (res.fileList || []).filter((s) => Boolean(s)).map((f, i) => {\r\n            if (f.code && error_config_1.TCB_ERR_CODE[f.code] !== 0) {\r\n                const code = error_config_1.TCB_ERR_CODE[f.code] || error_config_1.TCB_ERR_CODE.SYS_ERR;\r\n                return {\r\n                    fileID: f.fileID,\r\n                    status: error_config_1.TCB_ERR_CODE[f.code] || error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n                    errMsg: error_config_2.ERR_CODE[code],\r\n                    maxAge: f.maxAge,\r\n                    tempFileURL: '',\r\n                };\r\n            }\r\n            return {\r\n                fileID: f.fileID,\r\n                status: 0,\r\n                errMsg: 'ok',\r\n                maxAge: f.maxAge,\r\n                tempFileURL: f.tempFileURL,\r\n            };\r\n        });\r\n        return {\r\n            fileList: fileList,\r\n            requestId: res.requestId,\r\n        };\r\n    }\r\n}\r\nexports.getTempFileURL = getTempFileURL;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/cloud/provider/tcb/api/uploadFile.ts\":\r\n/*!******************************************************!*\\\r\n  !*** ./src/api/cloud/provider/tcb/api/uploadFile.ts ***!\r\n  \\******************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst error_config_1 = __webpack_require__(/*! ../config/error.config */ \"./src/api/cloud/provider/tcb/config/error.config.ts\");\r\nconst sleep = (ms = 0) => new Promise(resolve => setTimeout(resolve, ms));\r\nasync function uploadFile(options, config) {\r\n    await sleep();\r\n    let statusCode = -1;\r\n    const tcbInstance = config.instance;\r\n    const res = await tcbInstance.uploadFile({\r\n        cloudPath: options.cloudPath,\r\n        fileContent: options.fileContent,\r\n    }, {\r\n        onResponseReceived(resp) {\r\n            statusCode = resp ? resp.statusCode : statusCode;\r\n        }\r\n    });\r\n    if (res.code && error_config_1.TCB_ERR_CODE[res.code] !== 0) {\r\n        throw {\r\n            errCode: error_config_1.TCB_ERR_CODE[res.code] || error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n            errMsg: res.message,\r\n        };\r\n    }\r\n    else {\r\n        //@ts-ignore\r\n        return {\r\n            fileID: res.fileID,\r\n            requestId: res.requestId,\r\n            statusCode,\r\n        };\r\n    }\r\n}\r\nexports.uploadFile = uploadFile;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/cloud/provider/tcb/config/error.config.ts\":\r\n/*!***********************************************************!*\\\r\n  !*** ./src/api/cloud/provider/tcb/config/error.config.ts ***!\r\n  \\***********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\n// provider should also register the error codes in src/config/error.config.ts\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TCB_ERR_CODE = {\r\n    // 通用\r\n    SUCCESS: 0,\r\n    SYS_ERR: -501001,\r\n    SERVER_TIMEOUT: -501002,\r\n    EXCEED_REQUEST_LIMIT: -501003,\r\n    EXCEED_CONCURRENT_REQUEST_LIMIT: -501004,\r\n    INVALIID_ENV: -501005,\r\n    INVALID_COMMON_PARAM: -501006,\r\n    INVALID_PARAM: -501007,\r\n    INVALID_REQUEST_SOURCE: -501008,\r\n    RESOURCE_NOT_INITIAL: -501009,\r\n    // 数据库\r\n    DATABASE_REQUEST_FAILED: -502001,\r\n    DATABASE_INVALID_OPERRATOR: -502002,\r\n    DATABASE_PERMISSION_DENIED: -502003,\r\n    DATABASE_COLLECTION_EXCEED_LIMIT: -502004,\r\n    DATABASE_COLLECTION_NOT_EXIST: -502005,\r\n    // 文件\r\n    STORAGE_REQUEST_FAIL: -503001,\r\n    STORAGE_EXCEED_AUTHORITY: -503002,\r\n    STORAGE_FILE_NONEXIST: -503003,\r\n    STORAGE_SIGN_PARAM_INVALID: -503004,\r\n    // 云函数\r\n    FUNCTIONS_REQUEST_FAIL: -504001,\r\n    FUNCTIONS_EXECUTE_FAIL: -504002,\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/cloud/provider/tcb/index.ts\":\r\n/*!*********************************************!*\\\r\n  !*** ./src/api/cloud/provider/tcb/index.ts ***!\r\n  \\*********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// import tcb = require('tcb-admin-node')\r\nconst tcb = __webpack_require__(/*! @cloudbase/node-sdk */ \"@cloudbase/node-sdk\");\r\n// import { addDocument, queryDocument, updateDocument, removeDocument, countDocument } from './api/database'\r\nconst callFunction_1 = __webpack_require__(/*! ./api/callFunction */ \"./src/api/cloud/provider/tcb/api/callFunction.ts\");\r\nconst downloadFile_1 = __webpack_require__(/*! ./api/downloadFile */ \"./src/api/cloud/provider/tcb/api/downloadFile.ts\");\r\nconst uploadFile_1 = __webpack_require__(/*! ./api/uploadFile */ \"./src/api/cloud/provider/tcb/api/uploadFile.ts\");\r\nconst deleteFile_1 = __webpack_require__(/*! ./api/deleteFile */ \"./src/api/cloud/provider/tcb/api/deleteFile.ts\");\r\nconst getTempFileURL_1 = __webpack_require__(/*! ./api/getTempFileURL */ \"./src/api/cloud/provider/tcb/api/getTempFileURL.ts\");\r\nconst callOpenAPI_1 = __webpack_require__(/*! ./api/callOpenAPI */ \"./src/api/cloud/provider/tcb/api/callOpenAPI.ts\");\r\nconst callWXOpenAPI_1 = __webpack_require__(/*! ./api/callWXOpenAPI */ \"./src/api/cloud/provider/tcb/api/callWXOpenAPI.ts\");\r\nconst provider = {\r\n    // init\r\n    init: (config) => {\r\n        return tcb.init(Object.assign(Object.assign({}, config), { isHttp: process.env.TENCENTCLOUD_RUNENV === 'WX_LOCAL_SCF' }));\r\n    },\r\n    get DYNAMIC_CURRENT_ENV() {\r\n        return tcb.SYMBOL_CURRENT_ENV;\r\n    },\r\n    // api\r\n    api: {\r\n        callFunction: callFunction_1.callFunction,\r\n        downloadFile: downloadFile_1.downloadFile,\r\n        uploadFile: uploadFile_1.uploadFile,\r\n        deleteFile: deleteFile_1.deleteFile,\r\n        getTempFileURL: getTempFileURL_1.getTempFileURL,\r\n        callOpenAPI: callOpenAPI_1.callOpenAPI,\r\n        callWXOpenAPI: callWXOpenAPI_1.callWXOpenAPI,\r\n        callWXPayAPI: callWXOpenAPI_1.callWXPayAPI,\r\n    }\r\n};\r\nexports.default = provider;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/cloudpay/index.ts\":\r\n/*!***********************************!*\\\r\n  !*** ./src/api/cloudpay/index.ts ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst namespace_1 = __webpack_require__(/*! ./namespace */ \"./src/api/cloudpay/namespace/index.ts\");\r\nexports.CLOUDPAY_SERVICE_NAME = 'cloudPay';\r\nexports.CLOUDPAY_SERVICE_NAMESPACE_NAME = 'cloudPay';\r\nfunction createStorageService(cloud) {\r\n    return {\r\n        name: exports.CLOUDPAY_SERVICE_NAME,\r\n        getNamespace: () => {\r\n            return {\r\n                namespace: exports.CLOUDPAY_SERVICE_NAMESPACE_NAME,\r\n                apis: namespace_1.getAPIs(cloud),\r\n            };\r\n        },\r\n    };\r\n}\r\nfunction registerService(cloud) {\r\n    cloud.registerService(createStorageService(cloud));\r\n}\r\nexports.registerService = registerService;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/cloudpay/namespace/generic.ts\":\r\n/*!***********************************************!*\\\r\n  !*** ./src/api/cloudpay/namespace/generic.ts ***!\r\n  \\***********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst msg_1 = __webpack_require__(/*! utils/msg */ \"./src/utils/msg.ts\");\r\nconst utils_1 = __webpack_require__(/*! utils/utils */ \"./src/utils/utils.ts\");\r\nconst generic_fn_1 = __webpack_require__(/*! utils/generic-fn */ \"./src/utils/generic-fn.ts\");\r\nconst type_1 = __webpack_require__(/*! utils/type */ \"./src/utils/type.ts\");\r\nconst error_config_1 = __webpack_require__(/*! config/error.config */ \"./src/config/error.config.ts\");\r\nfunction getCloudPayAPIs(cloud) {\r\n    const callable = (innerContext, data) => {\r\n        if (cloud.debug) {\r\n            console.log(`cloudPay.${innerContext.paths.join('.')} called with data:`, data);\r\n        }\r\n        const api = innerContext.paths.join('.');\r\n        return callCloudPayAPI({\r\n            api,\r\n            data,\r\n        });\r\n    };\r\n    return generic_fn_1.getProxyObject({\r\n        callable: cloud.wrapCommonAPICheck(callable),\r\n        paths: [],\r\n    });\r\n    async function callCloudPayAPI(options) {\r\n        const displayAPIName = `cloudPay.${options.api}`;\r\n        if (!options) {\r\n            throw error_1.returnAsFinalCloudSDKError({\r\n                errMsg: `Params for ${displayAPIName} must be an object instead of ` + typeof options,\r\n            }, displayAPIName);\r\n        }\r\n        // convert camel case to snake case\r\n        const data = utils_1.convertCase(options.data, {\r\n            from: 'camelcase',\r\n            to: 'snakecase',\r\n            recursive: true,\r\n        });\r\n        try {\r\n            const wxResp = await cloud.provider.api.callWXPayAPI({\r\n                api: options.api,\r\n                data: Buffer.from(JSON.stringify(data)),\r\n            }, {\r\n                instance: cloud.instance,\r\n            });\r\n            let result;\r\n            if (type_1.isBuffer(wxResp)) {\r\n                if (options.api === 'downloadBill') {\r\n                    if (data.tar_type === 'GZIP') {\r\n                        result = {\r\n                            data: wxResp,\r\n                        };\r\n                    }\r\n                    else {\r\n                        result = {\r\n                            data: wxResp.toString(),\r\n                        };\r\n                    }\r\n                }\r\n                else {\r\n                    throw new error_1.CloudSDKError({\r\n                        errCode: error_config_1.ERR_CODE.WX_SYSTEM_ERROR,\r\n                        errMsg: msg_1.apiFailMsg(options.api, `unknown wx response received: ${wxResp.toString()}`)\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                // convert snake case to camel case\r\n                result = utils_1.convertCase(wxResp, {\r\n                    from: 'snakecase',\r\n                    to: 'camelcase',\r\n                    recursive: true,\r\n                });\r\n            }\r\n            return Object.assign(Object.assign({}, result), { errCode: 0, errMsg: `${displayAPIName}:ok` });\r\n        }\r\n        catch (e) {\r\n            throw error_1.returnAsFinalCloudSDKError(e, displayAPIName);\r\n        }\r\n    }\r\n}\r\nexports.default = getCloudPayAPIs;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/cloudpay/namespace/index.ts\":\r\n/*!*********************************************!*\\\r\n  !*** ./src/api/cloudpay/namespace/index.ts ***!\r\n  \\*********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst generic_1 = __webpack_require__(/*! ./generic */ \"./src/api/cloudpay/namespace/generic.ts\");\r\nfunction getAPIs(cloud) {\r\n    return generic_1.default(cloud);\r\n}\r\nexports.getAPIs = getAPIs;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/database/api/api.ts\":\r\n/*!*************************************!*\\\r\n  !*** ./src/api/database/api/api.ts ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst database_1 = __webpack_require__(/*! ./database */ \"./src/api/database/api/database.ts\");\r\nfunction getAPIs(cloud) {\r\n    return {\r\n        database: database_1.default.bind(null, cloud),\r\n    };\r\n}\r\nexports.getAPIs = getAPIs;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/database/api/database.ts\":\r\n/*!******************************************!*\\\r\n  !*** ./src/api/database/api/database.ts ***!\r\n  \\******************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst collection_1 = __webpack_require__(/*! ./database/collection */ \"./src/api/database/api/database/collection.ts\");\r\nconst transaction_1 = __webpack_require__(/*! ./database/transaction/transaction */ \"./src/api/database/api/database/transaction/transaction.ts\");\r\nconst geo_1 = __webpack_require__(/*! ./database/geo/geo */ \"./src/api/database/api/database/geo/geo.ts\");\r\nconst msg_1 = __webpack_require__(/*! utils/msg */ \"./src/utils/msg.ts\");\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst error_checker_1 = __webpack_require__(/*! ./database/helper/error-checker */ \"./src/api/database/api/database/helper/error-checker.ts\");\r\nfunction getDatabase(cloud, config) {\r\n    const Database = getDatabaseClass(cloud);\r\n    return new Database(config);\r\n}\r\nexports.default = getDatabase;\r\nconst getDatabaseClass = (cloud) => {\r\n    return class Database {\r\n        constructor(config = {}) {\r\n            this.runTransaction = (run, retryTimes) => {\r\n                return transaction_1.runTransaction.call(this, run, retryTimes);\r\n            };\r\n            this.cloud = cloud;\r\n            this.config = config;\r\n            // if (config.env) {\r\n            //   assertType(config.env, 'string')\r\n            // } else if (cloud.config.env) {\r\n            //   if (cloud.config.env === SYMBOL_DYNAMIC_CURRENT_ENV) {\r\n            //     config.env = SYMBOL_DYNAMIC_CURRENT_ENV\r\n            //   } else if (cloud.config.env.database === SYMBOL_DYNAMIC_CURRENT_ENV) {\r\n            //     config.env = SYMBOL_DYNAMIC_CURRENT_ENV\r\n            //   } else if (!cloud.config.env.database && cloud.config.env.default === SYMBOL_DYNAMIC_CURRENT_ENV) {\r\n            //     config.env = SYMBOL_DYNAMIC_CURRENT_ENV\r\n            //   }\r\n            // }\r\n            // this._instance = getInstance({\r\n            //   ...getServiceConfigFromDefaultConfig(cloud.config, 'database'),\r\n            //   ...config,\r\n            // })\r\n            // this._db = this._instance.database()\r\n            if (config.env) {\r\n                this._db = cloud.getInstanceForEnv(config.env).database();\r\n            }\r\n            else {\r\n                this._db = cloud.instance.database();\r\n            }\r\n            this.command = this._db.command;\r\n            this.Geo = geo_1.initGeo(this._db.Geo);\r\n            this.serverDate = this._db.serverDate;\r\n            this.RegExp = this._db.RegExp;\r\n        }\r\n        collection(collectionName) {\r\n            return new collection_1.CollectionReference(this._db.collection(collectionName), collectionName, this);\r\n        }\r\n        startTransaction() {\r\n            return transaction_1.startTransaction.call(this);\r\n        }\r\n        async createCollection(collectionName) {\r\n            const apiName = 'createCollection';\r\n            try {\r\n                const result = await this._db.createCollection(collectionName);\r\n                error_checker_1.checkError(result);\r\n                return {\r\n                    errMsg: msg_1.apiSuccessMsg(apiName),\r\n                    requestId: result.requestId,\r\n                };\r\n            }\r\n            catch (e) {\r\n                throw error_1.returnAsFinalCloudSDKError(e, apiName);\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/database/api/database/aggregate.ts\":\r\n/*!****************************************************!*\\\r\n  !*** ./src/api/database/api/database/aggregate.ts ***!\r\n  \\****************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst msg_1 = __webpack_require__(/*! utils/msg */ \"./src/utils/msg.ts\");\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst error_checker_1 = __webpack_require__(/*! ./helper/error-checker */ \"./src/api/database/api/database/helper/error-checker.ts\");\r\nvar ORDER_DIRECTION;\r\n(function (ORDER_DIRECTION) {\r\n    ORDER_DIRECTION[\"ASC\"] = \"asc\";\r\n    ORDER_DIRECTION[\"DESC\"] = \"desc\";\r\n})(ORDER_DIRECTION = exports.ORDER_DIRECTION || (exports.ORDER_DIRECTION = {}));\r\nclass Aggregate {\r\n    constructor(_aggregate, collectionName, database) {\r\n        this._aggregate = _aggregate;\r\n        this.collectionName = collectionName;\r\n        this.database = database;\r\n    }\r\n    pushStage(stage, val) {\r\n        return new Aggregate(this._aggregate[stage](val), this.collectionName, this.database);\r\n    }\r\n    addFields(val) {\r\n        return this.pushStage('addFields', val);\r\n    }\r\n    bucket(val) {\r\n        return this.pushStage('bucket', val);\r\n    }\r\n    bucketAuto(val) {\r\n        return this.pushStage('bucketAuto', val);\r\n    }\r\n    collStats(val) {\r\n        return this.pushStage('collStats', val);\r\n    }\r\n    count(val) {\r\n        return this.pushStage('count', val);\r\n    }\r\n    facet(val) {\r\n        return this.pushStage('facet', val);\r\n    }\r\n    geoNear(val) {\r\n        return this.pushStage('geoNear', val);\r\n    }\r\n    graphLookup(val) {\r\n        return this.pushStage('graphLookup', val);\r\n    }\r\n    group(val) {\r\n        return this.pushStage('group', val);\r\n    }\r\n    indexStats() {\r\n        return this.pushStage('indexStats', {});\r\n    }\r\n    limit(val) {\r\n        return this.pushStage('limit', val);\r\n    }\r\n    lookup(val) {\r\n        return this.pushStage('lookup', val);\r\n    }\r\n    match(val) {\r\n        return this.pushStage('match', val);\r\n    }\r\n    out(val) {\r\n        return this.pushStage('out', val);\r\n    }\r\n    project(val) {\r\n        return this.pushStage('project', val);\r\n    }\r\n    redact(val) {\r\n        return this.pushStage('redact', val);\r\n    }\r\n    replaceRoot(val) {\r\n        return this.pushStage('replaceRoot', val);\r\n    }\r\n    sample(val) {\r\n        return this.pushStage('sample', val);\r\n    }\r\n    skip(val) {\r\n        return this.pushStage('skip', val);\r\n    }\r\n    sort(val) {\r\n        return this.pushStage('sort', val);\r\n    }\r\n    sortByCount(val) {\r\n        return this.pushStage('sortByCount', val);\r\n    }\r\n    unwind(val) {\r\n        return this.pushStage('unwind', val);\r\n    }\r\n    end() {\r\n        const apiName = 'collection.aggregate';\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await this._aggregate.end();\r\n                error_checker_1.checkError(result);\r\n                resolve({\r\n                    list: result.data,\r\n                    errMsg: msg_1.apiSuccessMsg(apiName),\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(error_1.returnAsFinalCloudSDKError(err, apiName));\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.Aggregate = Aggregate;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/database/api/database/collection.ts\":\r\n/*!*****************************************************!*\\\r\n  !*** ./src/api/database/api/database/collection.ts ***!\r\n  \\*****************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst query_1 = __webpack_require__(/*! ./query */ \"./src/api/database/api/database/query.ts\");\r\nconst document_1 = __webpack_require__(/*! ./document */ \"./src/api/database/api/database/document.ts\");\r\nconst msg_1 = __webpack_require__(/*! utils/msg */ \"./src/utils/msg.ts\");\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst error_checker_1 = __webpack_require__(/*! ./helper/error-checker */ \"./src/api/database/api/database/helper/error-checker.ts\");\r\nconst aggregate_1 = __webpack_require__(/*! ./aggregate */ \"./src/api/database/api/database/aggregate.ts\");\r\nclass CollectionReference extends query_1.Query {\r\n    constructor(_collection, collectionName, database) {\r\n        super(_collection, collectionName, database);\r\n        this._collection = _collection;\r\n        this.collectionName = collectionName;\r\n        this.database = database;\r\n    }\r\n    doc(docId) {\r\n        return new document_1.DocumentReference(this._collection.doc(docId), this, docId, this.database);\r\n    }\r\n    add(options) {\r\n        const apiName = 'collection.add';\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const addResult = await this._collection.add(options.data);\r\n                error_checker_1.checkError(addResult);\r\n                if (addResult.ids) {\r\n                    resolve({\r\n                        _ids: addResult.ids,\r\n                        errMsg: msg_1.apiSuccessMsg(apiName),\r\n                    });\r\n                }\r\n                else {\r\n                    resolve({\r\n                        _id: addResult.id,\r\n                        errMsg: msg_1.apiSuccessMsg(apiName),\r\n                    });\r\n                }\r\n            }\r\n            catch (err) {\r\n                reject(error_1.returnAsFinalCloudSDKError(error_checker_1.maybeTransformError(err), apiName));\r\n            }\r\n        });\r\n    }\r\n    aggregate() {\r\n        return new aggregate_1.Aggregate(this._collection.aggregate(), this.collectionName, this.database);\r\n    }\r\n}\r\nexports.CollectionReference = CollectionReference;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/database/api/database/document.ts\":\r\n/*!***************************************************!*\\\r\n  !*** ./src/api/database/api/database/document.ts ***!\r\n  \\***************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst msg_1 = __webpack_require__(/*! utils/msg */ \"./src/utils/msg.ts\");\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst assert_1 = __webpack_require__(/*! utils/assert */ \"./src/utils/assert.ts\");\r\nconst error_checker_1 = __webpack_require__(/*! ./helper/error-checker */ \"./src/api/database/api/database/helper/error-checker.ts\");\r\nconst GET_API_NAME = 'document.get';\r\nconst UPDATE_API_NAME = 'document.update';\r\nconst SET_API_NAME = 'document.set';\r\nconst REMOVE_API_NAME = 'document.remove';\r\nclass DocumentReference {\r\n    constructor(_document, collection, docId, database) {\r\n        this._document = _document;\r\n        this.collection = collection;\r\n        this.database = database;\r\n        this._id = docId;\r\n    }\r\n    field(object) {\r\n        assert_1.assertRequiredParam(object, 'object', 'field');\r\n        assert_1.assertType(object, 'object', 'field');\r\n        return new DocumentReference(this._document.field(object), this.collection, this._id, this.database);\r\n    }\r\n    get() {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const throwOnNotFound = this.database.config.hasOwnProperty('throwOnNotFound') ? Boolean(this.database.config.throwOnNotFound) : true;\r\n                const _id = this._id;\r\n                const queryResult = await this._document.get();\r\n                error_checker_1.checkError(queryResult);\r\n                // in normal doc.get, queryResult.data is array, in transaction, it is object instead\r\n                if (!queryResult.data || (Array.isArray(queryResult.data) && !queryResult.data.length)) {\r\n                    if (throwOnNotFound) {\r\n                        throw `document with _id ${_id} does not exist`;\r\n                    }\r\n                    else {\r\n                        resolve({\r\n                            data: null,\r\n                            errMsg: msg_1.apiSuccessMsg(GET_API_NAME),\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    resolve({\r\n                        data: Array.isArray(queryResult.data) ? queryResult.data[0] : queryResult.data,\r\n                        errMsg: msg_1.apiSuccessMsg(GET_API_NAME),\r\n                    });\r\n                }\r\n            }\r\n            catch (err) {\r\n                reject(error_1.returnAsFinalCloudSDKError(error_checker_1.maybeTransformError(err), GET_API_NAME));\r\n            }\r\n        });\r\n    }\r\n    set(options) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                assert_1.assertType(options, {\r\n                    data: 'object',\r\n                });\r\n                assert_1.assertObjectNotEmpty({\r\n                    name: 'options.data',\r\n                    target: options.data,\r\n                });\r\n                const _id = this._id;\r\n                const setResult = await this._document.set(options.data);\r\n                error_checker_1.checkError(setResult);\r\n                resolve({\r\n                    _id,\r\n                    errMsg: msg_1.apiSuccessMsg(SET_API_NAME),\r\n                    stats: {\r\n                        updated: setResult.updated,\r\n                        created: setResult.upsertedId ? 1 : 0,\r\n                    }\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(error_1.returnAsFinalCloudSDKError(error_checker_1.maybeTransformError(err), SET_API_NAME));\r\n            }\r\n        });\r\n    }\r\n    update(options) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                assert_1.assertType(options, {\r\n                    data: 'object',\r\n                });\r\n                assert_1.assertObjectNotEmpty({\r\n                    name: 'options.data',\r\n                    target: options.data,\r\n                });\r\n                const updateResult = await this._document.update(options.data);\r\n                error_checker_1.checkError(updateResult);\r\n                resolve({\r\n                    stats: {\r\n                        updated: updateResult.updated,\r\n                    },\r\n                    errMsg: msg_1.apiSuccessMsg(UPDATE_API_NAME),\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(error_1.returnAsFinalCloudSDKError(error_checker_1.maybeTransformError(err), UPDATE_API_NAME));\r\n            }\r\n        });\r\n    }\r\n    remove(options) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                // normal doc.remove -> _doc.remove\r\n                // transaction doc.remove -> _doc.delete\r\n                const removeResult = await (this._document.remove ? this._document.remove() : this._document.delete());\r\n                error_checker_1.checkError(removeResult);\r\n                resolve({\r\n                    stats: {\r\n                        removed: removeResult.deleted || 0,\r\n                    },\r\n                    errMsg: msg_1.apiSuccessMsg(REMOVE_API_NAME),\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(error_1.returnAsFinalCloudSDKError(error_checker_1.maybeTransformError(err), REMOVE_API_NAME));\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.DocumentReference = DocumentReference;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/database/api/database/geo/geo.ts\":\r\n/*!**************************************************!*\\\r\n  !*** ./src/api/database/api/database/geo/geo.ts ***!\r\n  \\**************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initGeo = (_geo) => {\r\n    const Geo = {};\r\n    for (const key in _geo) {\r\n        if (_geo.hasOwnProperty(key)) {\r\n            if (typeof _geo[key] === 'function') {\r\n                Geo[key] = function () {\r\n                    return new _geo[key](...arguments);\r\n                };\r\n            }\r\n            else {\r\n                Geo[key] = _geo[key];\r\n            }\r\n        }\r\n    }\r\n    return Geo;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/database/api/database/helper/error-checker.ts\":\r\n/*!***************************************************************!*\\\r\n  !*** ./src/api/database/api/database/helper/error-checker.ts ***!\r\n  \\***************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst error_config_1 = __webpack_require__(/*! api/cloud/provider/tcb/config/error.config */ \"./src/api/cloud/provider/tcb/config/error.config.ts\");\r\nfunction checkError(tcbResult) {\r\n    if (tcbResult && tcbResult.code) {\r\n        throw error_1.returnAsCloudSDKError({\r\n            errCode: error_config_1.TCB_ERR_CODE[tcbResult.code] || error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n            errMsg: tcbResult.message,\r\n        });\r\n    }\r\n}\r\nexports.checkError = checkError;\r\nfunction maybeTransformError(maybeTcbError) {\r\n    if (maybeTcbError && maybeTcbError.code) {\r\n        return {\r\n            errCode: error_config_1.TCB_ERR_CODE[maybeTcbError.code] || error_config_1.TCB_ERR_CODE.SYS_ERR,\r\n            errMsg: maybeTcbError.message,\r\n        };\r\n    }\r\n    return maybeTcbError;\r\n}\r\nexports.maybeTransformError = maybeTransformError;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/database/api/database/query.ts\":\r\n/*!************************************************!*\\\r\n  !*** ./src/api/database/api/database/query.ts ***!\r\n  \\************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst msg_1 = __webpack_require__(/*! utils/msg */ \"./src/utils/msg.ts\");\r\nconst assert_1 = __webpack_require__(/*! utils/assert */ \"./src/utils/assert.ts\");\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst error_checker_1 = __webpack_require__(/*! ./helper/error-checker */ \"./src/api/database/api/database/helper/error-checker.ts\");\r\nvar ORDER_DIRECTION;\r\n(function (ORDER_DIRECTION) {\r\n    ORDER_DIRECTION[\"ASC\"] = \"asc\";\r\n    ORDER_DIRECTION[\"DESC\"] = \"desc\";\r\n})(ORDER_DIRECTION = exports.ORDER_DIRECTION || (exports.ORDER_DIRECTION = {}));\r\nclass Query {\r\n    constructor(_query, collectionName, database) {\r\n        this._query = _query;\r\n        this.collectionName = collectionName;\r\n        this.database = database;\r\n    }\r\n    field(object) {\r\n        return new Query(this._query.field(object), this.collectionName, this.database);\r\n    }\r\n    where(condition) {\r\n        return new Query(this._query.where(condition), this.collectionName, this.database);\r\n    }\r\n    orderBy(fieldPath, order) {\r\n        return new Query(this._query.orderBy(fieldPath, order), this.collectionName, this.database);\r\n    }\r\n    limit(max) {\r\n        return new Query(this._query.limit(max), this.collectionName, this.database);\r\n    }\r\n    skip(offset) {\r\n        return new Query(this._query.skip(offset), this.collectionName, this.database);\r\n    }\r\n    get(options) {\r\n        const apiName = 'collection.get';\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const queryResult = await this._query.get();\r\n                error_checker_1.checkError(queryResult);\r\n                resolve({\r\n                    data: queryResult.data,\r\n                    errMsg: msg_1.apiSuccessMsg(apiName),\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(error_1.returnAsFinalCloudSDKError(error_checker_1.maybeTransformError(err), apiName));\r\n            }\r\n        });\r\n    }\r\n    update(options) {\r\n        const apiName = 'collection.update';\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                assert_1.assertType(options, {\r\n                    data: 'object',\r\n                });\r\n                assert_1.assertObjectNotEmpty({\r\n                    name: 'options.data',\r\n                    target: options.data,\r\n                });\r\n                let query = this._query;\r\n                if (options.multi === false) {\r\n                    query = this._query.options({\r\n                        multi: false,\r\n                    });\r\n                }\r\n                const updateResult = await query.update(options.data);\r\n                error_checker_1.checkError(updateResult);\r\n                resolve({\r\n                    stats: {\r\n                        updated: updateResult.updated || 0,\r\n                    },\r\n                    errMsg: msg_1.apiSuccessMsg(apiName),\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(error_1.returnAsFinalCloudSDKError(error_checker_1.maybeTransformError(err), apiName));\r\n            }\r\n        });\r\n    }\r\n    remove(options = {}) {\r\n        const apiName = 'collection.remove';\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                let query = this._query;\r\n                if (options.multi === false) {\r\n                    query = this._query.options({\r\n                        multiple: false,\r\n                    });\r\n                }\r\n                const removeResult = await query.remove();\r\n                error_checker_1.checkError(removeResult);\r\n                resolve({\r\n                    stats: {\r\n                        removed: removeResult.deleted,\r\n                    },\r\n                    errMsg: msg_1.apiSuccessMsg(apiName),\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(error_1.returnAsFinalCloudSDKError(error_checker_1.maybeTransformError(err), apiName));\r\n            }\r\n        });\r\n    }\r\n    count(options) {\r\n        const apiName = 'collection.count';\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const queryResult = await this._query.count();\r\n                error_checker_1.checkError(queryResult);\r\n                resolve({\r\n                    total: queryResult.total,\r\n                    errMsg: msg_1.apiSuccessMsg(apiName),\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(error_1.returnAsFinalCloudSDKError(error_checker_1.maybeTransformError(err), apiName));\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.Query = Query;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/database/api/database/transaction/transaction.ts\":\r\n/*!******************************************************************!*\\\r\n  !*** ./src/api/database/api/database/transaction/transaction.ts ***!\r\n  \\******************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst collection_1 = __webpack_require__(/*! ../collection */ \"./src/api/database/api/database/collection.ts\");\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nclass Transaction {\r\n    constructor(transaction, db) {\r\n        this._transaction = transaction;\r\n        this._db = db;\r\n    }\r\n    async init() {\r\n        return this._transaction.init();\r\n    }\r\n    collection(collName) {\r\n        if (!collName) {\r\n            throw new Error('Collection name is required');\r\n        }\r\n        return new collection_1.CollectionReference(this._transaction.collection(collName), collName, this._db);\r\n    }\r\n    async commit() {\r\n        try {\r\n            return this._transaction.commit();\r\n        }\r\n        catch (e) {\r\n            throw error_1.returnAsFinalCloudSDKError(e, `transaction.commit`);\r\n        }\r\n    }\r\n    async rollback(reason) {\r\n        try {\r\n            return this._transaction.rollback(reason);\r\n        }\r\n        catch (e) {\r\n            throw error_1.returnAsFinalCloudSDKError(e, `transaction.rollback`);\r\n        }\r\n    }\r\n}\r\nexports.Transaction = Transaction;\r\nasync function runTransaction(callback, times = 3) {\r\n    return this._db.runTransaction((_transaction) => {\r\n        const transaction = new Transaction(_transaction, this);\r\n        return callback(transaction);\r\n    }, times);\r\n}\r\nexports.runTransaction = runTransaction;\r\nasync function startTransaction() {\r\n    const _transaction = await this._db.startTransaction();\r\n    return new Transaction(_transaction, this);\r\n}\r\nexports.startTransaction = startTransaction;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/database/index.ts\":\r\n/*!***********************************!*\\\r\n  !*** ./src/api/database/index.ts ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst api_1 = __webpack_require__(/*! ./api/api */ \"./src/api/database/api/api.ts\");\r\nexports.DATABASE_SERVICE_NAME = 'database';\r\nfunction createDatabaseService(cloud) {\r\n    return {\r\n        name: exports.DATABASE_SERVICE_NAME,\r\n        getAPIs: api_1.getAPIs.bind(null, cloud),\r\n    };\r\n}\r\nfunction registerService(cloud) {\r\n    cloud.registerService(createDatabaseService(cloud));\r\n}\r\nexports.registerService = registerService;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/functions/api/api.ts\":\r\n/*!**************************************!*\\\r\n  !*** ./src/api/functions/api/api.ts ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst callFunction_1 = __webpack_require__(/*! ./callFunction */ \"./src/api/functions/api/callFunction.ts\");\r\nfunction getAPIs(cloud) {\r\n    return {\r\n        callFunction: callFunction_1.default(cloud),\r\n    };\r\n}\r\nexports.getAPIs = getAPIs;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/functions/api/callFunction.ts\":\r\n/*!***********************************************!*\\\r\n  !*** ./src/api/functions/api/callFunction.ts ***!\r\n  \\***********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst assert_1 = __webpack_require__(/*! utils/assert */ \"./src/utils/assert.ts\");\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst msg_1 = __webpack_require__(/*! utils/msg */ \"./src/utils/msg.ts\");\r\nconst utils_1 = __webpack_require__(/*! utils/utils */ \"./src/utils/utils.ts\");\r\nfunction getCallFunction(cloud) {\r\n    return function callFunction(options) {\r\n        const apiName = 'callFunction';\r\n        return new Promise(async (resolve, reject) => {\r\n            if (!options) {\r\n                return reject(error_1.returnAsFinalCloudSDKError({\r\n                    errMsg: 'Params for callFunction must be an object instead of ' + typeof options,\r\n                }, apiName));\r\n            }\r\n            try {\r\n                assert_1.assertType(options, {\r\n                    name: 'string'\r\n                });\r\n                if (options.hasOwnProperty('data')) {\r\n                    assert_1.assertType(options, {\r\n                        data: 'object'\r\n                    });\r\n                }\r\n            }\r\n            catch (e) {\r\n                return reject(error_1.returnAsFinalCloudSDKError(e, apiName));\r\n            }\r\n            try {\r\n                const result = await cloud.provider.api.callFunction({\r\n                    name: options.name,\r\n                    data: options.data || {},\r\n                }, {\r\n                    instance: cloud.getInstanceForEnv(utils_1.getEnvFromAPIConfig(options.config, cloud.config, 'functions')),\r\n                });\r\n                let parsedResult = result.result;\r\n                try {\r\n                    if (typeof parsedResult === 'string') {\r\n                        parsedResult = JSON.parse(result.result);\r\n                    }\r\n                }\r\n                catch (_) {\r\n                    // no nothing\r\n                }\r\n                return resolve({\r\n                    result: parsedResult,\r\n                    errMsg: msg_1.apiSuccessMsg(apiName),\r\n                    requestID: result.requestId,\r\n                });\r\n            }\r\n            catch (e) {\r\n                const error = error_1.returnAsFinalCloudSDKError(e, apiName);\r\n                // @ts-ignore\r\n                error.requestID = e.requestID;\r\n                return reject(error);\r\n            }\r\n        });\r\n    };\r\n}\r\nexports.default = getCallFunction;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/functions/index.ts\":\r\n/*!************************************!*\\\r\n  !*** ./src/api/functions/index.ts ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst api_1 = __webpack_require__(/*! ./api/api */ \"./src/api/functions/api/api.ts\");\r\nexports.FUNCTIONS_SERVICE_NAME = 'functions';\r\nfunction createFunctionsService(cloud) {\r\n    return {\r\n        name: exports.FUNCTIONS_SERVICE_NAME,\r\n        getAPIs: api_1.getAPIs.bind(null, cloud),\r\n    };\r\n}\r\nfunction registerService(cloud) {\r\n    cloud.registerService(createFunctionsService(cloud));\r\n}\r\nexports.registerService = registerService;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/index.ts\":\r\n/*!**************************!*\\\r\n  !*** ./src/api/index.ts ***!\r\n  \\**************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst database_1 = __webpack_require__(/*! ./database */ \"./src/api/database/index.ts\");\r\nconst storage_1 = __webpack_require__(/*! ./storage */ \"./src/api/storage/index.ts\");\r\nconst functions_1 = __webpack_require__(/*! ./functions */ \"./src/api/functions/index.ts\");\r\nconst open_1 = __webpack_require__(/*! ./open */ \"./src/api/open/index.ts\");\r\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./src/api/utils/index.ts\");\r\nconst openapi_1 = __webpack_require__(/*! ./openapi */ \"./src/api/openapi/index.ts\");\r\nconst cloudpay_1 = __webpack_require__(/*! ./cloudpay */ \"./src/api/cloudpay/index.ts\");\r\nfunction registerServices(cloud) {\r\n    database_1.registerService(cloud);\r\n    storage_1.registerService(cloud);\r\n    functions_1.registerService(cloud);\r\n    open_1.registerService(cloud);\r\n    utils_1.registerService(cloud);\r\n    openapi_1.registerService(cloud);\r\n    cloudpay_1.registerService(cloud);\r\n}\r\nexports.registerServices = registerServices;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/open/api/api.ts\":\r\n/*!*********************************!*\\\r\n  !*** ./src/api/open/api/api.ts ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst callOpenAPI_1 = __webpack_require__(/*! ./callOpenAPI */ \"./src/api/open/api/callOpenAPI.ts\");\r\nconst getOpenData_1 = __webpack_require__(/*! ./getOpenData */ \"./src/api/open/api/getOpenData.ts\");\r\nconst getVoIPSign_1 = __webpack_require__(/*! ./getVoIPSign */ \"./src/api/open/api/getVoIPSign.ts\");\r\nfunction getAPIs(cloud) {\r\n    return {\r\n        callOpenAPI: callOpenAPI_1.default(cloud),\r\n        getOpenData: getOpenData_1.default(cloud),\r\n        getVoIPSign: getVoIPSign_1.default(cloud),\r\n    };\r\n}\r\nexports.getAPIs = getAPIs;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/open/api/callOpenAPI.ts\":\r\n/*!*****************************************!*\\\r\n  !*** ./src/api/open/api/callOpenAPI.ts ***!\r\n  \\*****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\n// THIS IS THE LEGACY CALLOPENAPI, TO BE DEPRECATED\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst assert_1 = __webpack_require__(/*! utils/assert */ \"./src/utils/assert.ts\");\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst msg_1 = __webpack_require__(/*! utils/msg */ \"./src/utils/msg.ts\");\r\nfunction getCallOpenAPI(cloud) {\r\n    return function callOpenAPI(options) {\r\n        const apiName = 'callOpenAPI';\r\n        return new Promise(async (resolve, reject) => {\r\n            if (!options) {\r\n                return reject(error_1.returnAsFinalCloudSDKError({\r\n                    errMsg: 'Params for callOpenAPI must be an object instead of ' + typeof options,\r\n                }, apiName));\r\n            }\r\n            try {\r\n                assert_1.assertType(options, {\r\n                    api: 'string'\r\n                });\r\n                if (options.data) {\r\n                    assert_1.assertType(options, {\r\n                        data: 'object'\r\n                    });\r\n                }\r\n            }\r\n            catch (e) {\r\n                return reject(error_1.returnAsFinalCloudSDKError(e, apiName));\r\n            }\r\n            try {\r\n                const result = await cloud.provider.api.callOpenAPI({\r\n                    api: options.api,\r\n                    data: options.data || {},\r\n                }, {\r\n                    instance: cloud.instance,\r\n                });\r\n                let parsedResult = result.result;\r\n                try {\r\n                    if (typeof parsedResult === 'string') {\r\n                        parsedResult = JSON.parse(result.result);\r\n                    }\r\n                }\r\n                catch (_) {\r\n                    // no nothing\r\n                }\r\n                return resolve({\r\n                    result: parsedResult,\r\n                    errMsg: msg_1.apiSuccessMsg(apiName),\r\n                });\r\n            }\r\n            catch (e) {\r\n                const error = error_1.returnAsFinalCloudSDKError(e, apiName);\r\n                return reject(error);\r\n            }\r\n        });\r\n    };\r\n}\r\nexports.default = getCallOpenAPI;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/open/api/getOpenData.ts\":\r\n/*!*****************************************!*\\\r\n  !*** ./src/api/open/api/getOpenData.ts ***!\r\n  \\*****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst msg_1 = __webpack_require__(/*! utils/msg */ \"./src/utils/msg.ts\");\r\nconst openapi_1 = __webpack_require__(/*! ../../../protobuf/openapi */ \"./src/protobuf/openapi.js\");\r\nconst error_config_1 = __webpack_require__(/*! config/error.config */ \"./src/config/error.config.ts\");\r\nconst API_NAME = 'getOpenData';\r\nfunction getGetOpenData(cloud) {\r\n    return function getOpenData(options) {\r\n        return new Promise(async (resolve, reject) => {\r\n            if (!options) {\r\n                return reject(error_1.returnAsFinalCloudSDKError({\r\n                    errMsg: 'Params for getOpenData must be an object instead of ' + typeof options,\r\n                }, API_NAME));\r\n            }\r\n            try {\r\n                if (!options.list) {\r\n                    throw new Error('list must be provided');\r\n                }\r\n            }\r\n            catch (e) {\r\n                return reject(error_1.returnAsFinalCloudSDKError(e, API_NAME));\r\n            }\r\n            try {\r\n                const getOpenDataReqBuffer = openapi_1.ApiGetOpenDataByCloudIdReq.encode({\r\n                    cloudidList: options.list,\r\n                }).finish();\r\n                const svrkitData = {\r\n                    apiName: 'ApiGetOpenDataByCloudId',\r\n                    reqData: getOpenDataReqBuffer,\r\n                };\r\n                const pbMessage = openapi_1.CommApiData.encode({\r\n                    apiType: openapi_1.CommApiData.ApiType.SVRKIT_API,\r\n                    svrkitData,\r\n                }).finish();\r\n                const wxResp = await cloud.provider.api.callWXOpenAPI({\r\n                    api: 'ApiGetOpenDataByCloudId',\r\n                    data: Buffer.from(pbMessage),\r\n                }, {\r\n                    instance: cloud.instance,\r\n                });\r\n                if (wxResp.svrkitErrorCode !== 0) {\r\n                    throw {\r\n                        errCode: error_config_1.ERR_CODE.WX_SYSTEM_ERROR,\r\n                        errMsg: `internal svrkit error, code ${wxResp.svrkitErrorCode}`,\r\n                    };\r\n                }\r\n                if (!wxResp.respData) {\r\n                    throw {\r\n                        errCode: error_config_1.ERR_CODE.WX_SYSTEM_ERROR,\r\n                        errMsg: `internal svrkit error, empty respData`,\r\n                    };\r\n                }\r\n                const pbRespMsg = openapi_1.ApiGetOpenDataByCloudIdResp.decode(wxResp.respData);\r\n                // const svrkitResponse = GetOpenDataRespMessage.toObject(pbRespMsg, {\r\n                //   longs: String,\r\n                // })\r\n                const openDataList = pbRespMsg.dataList.map(item => {\r\n                    if (!item.json) {\r\n                        throw {\r\n                            errCode: error_config_1.ERR_CODE.WX_SYSTEM_ERROR,\r\n                            errMsg: `internal svrkit error, empty openData json field for ${item.cloudId}`,\r\n                        };\r\n                    }\r\n                    return JSON.parse(item.json);\r\n                });\r\n                resolve({\r\n                    list: openDataList,\r\n                    errMsg: msg_1.apiSuccessMsg(API_NAME),\r\n                    errCode: 0,\r\n                });\r\n            }\r\n            catch (e) {\r\n                const error = error_1.returnAsFinalCloudSDKError(e, API_NAME);\r\n                return reject(error);\r\n            }\r\n        });\r\n    };\r\n}\r\nexports.default = getGetOpenData;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/open/api/getVoIPSign.ts\":\r\n/*!*****************************************!*\\\r\n  !*** ./src/api/open/api/getVoIPSign.ts ***!\r\n  \\*****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst assert_1 = __webpack_require__(/*! utils/assert */ \"./src/utils/assert.ts\");\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst msg_1 = __webpack_require__(/*! utils/msg */ \"./src/utils/msg.ts\");\r\nconst openapi_1 = __webpack_require__(/*! ../../../protobuf/openapi */ \"./src/protobuf/openapi.js\");\r\nconst error_config_1 = __webpack_require__(/*! config/error.config */ \"./src/config/error.config.ts\");\r\nconst API_NAME = 'getVoIPSign';\r\nfunction getGetVoIPSign(cloud) {\r\n    return function getVoIPSign(options) {\r\n        return new Promise(async (resolve, reject) => {\r\n            if (!options) {\r\n                return reject(error_1.returnAsFinalCloudSDKError({\r\n                    errMsg: 'Params for getVoIPSign must be an object instead of ' + typeof options,\r\n                }, API_NAME));\r\n            }\r\n            try {\r\n                assert_1.assertType(options, {\r\n                    groupId: 'string',\r\n                    timestamp: 'number',\r\n                    nonce: 'string',\r\n                });\r\n            }\r\n            catch (e) {\r\n                return reject(error_1.returnAsFinalCloudSDKError(e, API_NAME));\r\n            }\r\n            try {\r\n                const getVoIPSignReqBuffer = openapi_1.ApiVoipSignReq.encode({\r\n                    groupId: options.groupId,\r\n                    timestamp: options.timestamp,\r\n                    nonce: options.nonce,\r\n                }).finish();\r\n                const svrkitData = {\r\n                    apiName: 'ApiVoipSign',\r\n                    reqData: getVoIPSignReqBuffer,\r\n                };\r\n                const pbMessage = openapi_1.CommApiData.encode({\r\n                    apiType: openapi_1.CommApiData.ApiType.SVRKIT_API,\r\n                    svrkitData,\r\n                }).finish();\r\n                const wxResp = await cloud.provider.api.callWXOpenAPI({\r\n                    api: 'ApiVoipSign',\r\n                    data: Buffer.from(pbMessage),\r\n                }, {\r\n                    instance: cloud.instance,\r\n                });\r\n                if (wxResp.svrkitErrorCode !== 0) {\r\n                    throw {\r\n                        errCode: error_config_1.ERR_CODE.WX_SYSTEM_ERROR,\r\n                        errMsg: `internal svrkit error, code ${wxResp.svrkitErrorCode}`,\r\n                    };\r\n                }\r\n                if (!wxResp.respData) {\r\n                    throw {\r\n                        errCode: error_config_1.ERR_CODE.WX_SYSTEM_ERROR,\r\n                        errMsg: `internal svrkit error, empty respData`,\r\n                    };\r\n                }\r\n                const pbRespMsg = openapi_1.ApiVoipSignResp.decode(wxResp.respData);\r\n                resolve({\r\n                    signature: pbRespMsg.signature,\r\n                    errMsg: msg_1.apiSuccessMsg(API_NAME),\r\n                    errCode: 0,\r\n                });\r\n            }\r\n            catch (e) {\r\n                const error = error_1.returnAsFinalCloudSDKError(e, API_NAME);\r\n                return reject(error);\r\n            }\r\n        });\r\n    };\r\n}\r\nexports.default = getGetVoIPSign;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/open/index.ts\":\r\n/*!*******************************!*\\\r\n  !*** ./src/api/open/index.ts ***!\r\n  \\*******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst api_1 = __webpack_require__(/*! ./api/api */ \"./src/api/open/api/api.ts\");\r\nconst OPEN_SERVICE_NAME = 'open';\r\nfunction createOpenService(cloud) {\r\n    return {\r\n        name: OPEN_SERVICE_NAME,\r\n        getAPIs: api_1.getAPIs.bind(null, cloud),\r\n    };\r\n}\r\nfunction registerService(cloud) {\r\n    cloud.registerService(createOpenService(cloud));\r\n}\r\nexports.registerService = registerService;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/openapi/index.ts\":\r\n/*!**********************************!*\\\r\n  !*** ./src/api/openapi/index.ts ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst namespace_1 = __webpack_require__(/*! ./namespace */ \"./src/api/openapi/namespace/index.ts\");\r\nexports.OPENAPI_SERVICE_NAME = 'openapi';\r\nexports.OPENAPI_SERVICE_NAMESPACE_NAME = 'openapi';\r\nfunction createStorageService(cloud) {\r\n    return {\r\n        name: exports.OPENAPI_SERVICE_NAME,\r\n        getNamespace: () => {\r\n            return {\r\n                namespace: exports.OPENAPI_SERVICE_NAMESPACE_NAME,\r\n                apis: namespace_1.getAPIs(cloud),\r\n            };\r\n        },\r\n    };\r\n}\r\nfunction registerService(cloud) {\r\n    cloud.registerService(createStorageService(cloud));\r\n}\r\nexports.registerService = registerService;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/openapi/namespace/generic.ts\":\r\n/*!**********************************************!*\\\r\n  !*** ./src/api/openapi/namespace/generic.ts ***!\r\n  \\**********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst openapi_1 = __webpack_require__(/*! ../../../protobuf/openapi */ \"./src/protobuf/openapi.js\");\r\nconst type_1 = __webpack_require__(/*! ../../../utils/type */ \"./src/utils/type.ts\");\r\nconst error_1 = __webpack_require__(/*! ../../../utils/error */ \"./src/utils/error.ts\");\r\nconst msg_1 = __webpack_require__(/*! ../../../utils/msg */ \"./src/utils/msg.ts\");\r\nconst utils_1 = __webpack_require__(/*! ../../../utils/utils */ \"./src/utils/utils.ts\");\r\nconst mimetype_1 = __webpack_require__(/*! ../../../utils/mimetype */ \"./src/utils/mimetype.ts\");\r\nconst error_config_1 = __webpack_require__(/*! ../../../config/error.config */ \"./src/config/error.config.ts\");\r\nconst functionIntrinsicProperties = new Set(Object.getOwnPropertyNames(Function.prototype));\r\nconst getCallableObject = (options) => {\r\n    const f = function () { };\r\n    return new Proxy(f, {\r\n        get(target, prop) {\r\n            if (functionIntrinsicProperties.has(prop)) {\r\n                // @ts-ignore\r\n                return options.callable[prop];\r\n            }\r\n            else {\r\n                return getCallableObject(Object.assign(Object.assign({}, options), { paths: [...options.paths, prop] }));\r\n            }\r\n        },\r\n        apply(target, thisArg, args) {\r\n            return options.callable.call(thisArg, options, ...args);\r\n        },\r\n    });\r\n};\r\nconst getProxyObject = (options) => {\r\n    const f = () => { };\r\n    const proxy = new Proxy(f, {\r\n        get(target, prop) {\r\n            return getCallableObject(Object.assign(Object.assign({}, options), { paths: [prop] }));\r\n        },\r\n        apply(target, thisArg, args) {\r\n            // set options\r\n            if (!args[0] || !type_1.isObject(args[0])) {\r\n                throw new Error('an options object is expected');\r\n            }\r\n            return getProxyObject(Object.assign(Object.assign({}, args[0]), { \r\n                // some options are not writable\r\n                callable: options.callable, paths: options.paths }));\r\n        }\r\n    });\r\n    return proxy;\r\n};\r\nfunction getGenericOpenAPI(cloud) {\r\n    const callable = (innerContext, data) => {\r\n        if (cloud.debug) {\r\n            console.log(`openapi.${innerContext.paths.join('.')} called with data:`, data);\r\n        }\r\n        const api = innerContext.paths.join('.');\r\n        return callWXOpenAPI({\r\n            api,\r\n            data,\r\n            convertCase: innerContext.convertCase,\r\n        });\r\n    };\r\n    return getProxyObject({\r\n        callable: cloud.wrapCommonAPICheck(callable),\r\n        paths: [],\r\n    });\r\n    async function callWXOpenAPI(options) {\r\n        const displayAPIName = `openapi.${options.api}`;\r\n        const shouldConvertCase = options.convertCase !== false;\r\n        try {\r\n            // convert camel case to snake case\r\n            const data = shouldConvertCase ? utils_1.convertCase(options.data, {\r\n                from: 'camelcase',\r\n                to: 'snakecase',\r\n                recursive: true,\r\n            }) : options.data;\r\n            // convert data to pb buffer\r\n            const pairs = [];\r\n            for (const key in data) {\r\n                const val = data[key];\r\n                // check whether it is a form-data item\r\n                if (type_1.isObject(val) && (val.contentType || val.content_type) && val.value && type_1.isBuffer(val.value)) {\r\n                    const contentType = (val.contentType || val.content_type).toString();\r\n                    const fileExtension = mimetype_1.mimeTypeToFileExtension(contentType);\r\n                    if (!fileExtension) {\r\n                        console.warn(`[${displayAPIName}] the input param ${key}.contentType is not a valid mime type`);\r\n                    }\r\n                    let filename = val.fileName;\r\n                    if (!filename) {\r\n                        filename = `${key}.${fileExtension || 'png'}`;\r\n                    }\r\n                    pairs.push({\r\n                        key,\r\n                        value: val.value,\r\n                        contentType,\r\n                        filename,\r\n                    });\r\n                }\r\n                else {\r\n                    const valStr = JSON.stringify(val);\r\n                    if (valStr !== undefined) {\r\n                        pairs.push({\r\n                            key,\r\n                            value: Buffer.from(valStr),\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            const pbMessage = openapi_1.CommApiData.encode({\r\n                apiType: openapi_1.CommApiData.ApiType.OPEN_API,\r\n                openapiData: {\r\n                    pairs,\r\n                },\r\n            }).finish();\r\n            const wxResp = await cloud.provider.api.callWXOpenAPI({\r\n                api: options.api,\r\n                data: Buffer.from(pbMessage),\r\n            }, {\r\n                instance: cloud.instance,\r\n            });\r\n            let result;\r\n            if (wxResp) {\r\n                if (/(application\\/json)|(text\\/plain)/.test(wxResp.contentType)) {\r\n                    // json response\r\n                    // NOTICE: sometimes the wx sever, for no reason, returns a json with content-type text/plain, and we have to deal with it...\r\n                    try {\r\n                        result = JSON.parse(wxResp.respData.toString());\r\n                    }\r\n                    catch (parseWXRespJSONError) {\r\n                        // wx server says it's a json but instead it is not a valid json\r\n                        // if the content-type is text/plain and is not a valid json, we can safely return the string back\r\n                        if (/text\\/plain/.test(wxResp.contentType)) {\r\n                            result = {\r\n                                result: wxResp.respData.toString()\r\n                            };\r\n                        }\r\n                        else {\r\n                            // internal error\r\n                            throw new error_1.CloudSDKError({\r\n                                errCode: error_config_1.ERR_CODE.WX_SYSTEM_ERROR,\r\n                                errMsg: msg_1.apiFailMsg(displayAPIName, `wechat server internal error, response body is invalid json: ${wxResp.respData.toString()}`)\r\n                            });\r\n                        }\r\n                    }\r\n                    if (result.errcode) {\r\n                        // wx error\r\n                        throw new error_1.CloudSDKError({\r\n                            errCode: result.errcode,\r\n                            errMsg: msg_1.apiFailMsg(displayAPIName, result.errmsg),\r\n                        });\r\n                    }\r\n                    else {\r\n                        delete result.errcode;\r\n                        delete result.errmsg;\r\n                        if (shouldConvertCase) {\r\n                            // convert snake case to camel case\r\n                            result = utils_1.convertCase(result, {\r\n                                from: 'snakecase',\r\n                                to: 'camelcase',\r\n                                recursive: true,\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // buffer response\r\n                    result = {\r\n                        contentType: wxResp.contentType.trim(),\r\n                        buffer: wxResp.respData,\r\n                    };\r\n                }\r\n            }\r\n            else {\r\n                throw {\r\n                    errCode: error_config_1.ERR_CODE.WX_SYSTEM_ERROR,\r\n                    errMsg: `internal server error, empty resp buffer`,\r\n                };\r\n            }\r\n            return Object.assign(Object.assign({}, result), { errMsg: msg_1.apiSuccessMsg(displayAPIName), errCode: 0 });\r\n        }\r\n        catch (e) {\r\n            throw error_1.returnAsFinalCloudSDKError(e, displayAPIName);\r\n        }\r\n    }\r\n}\r\nexports.default = getGenericOpenAPI;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/openapi/namespace/index.ts\":\r\n/*!********************************************!*\\\r\n  !*** ./src/api/openapi/namespace/index.ts ***!\r\n  \\********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst generic_1 = __webpack_require__(/*! ./generic */ \"./src/api/openapi/namespace/generic.ts\");\r\nfunction getAPIs(cloud) {\r\n    return generic_1.default(cloud);\r\n}\r\nexports.getAPIs = getAPIs;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/storage/api/api.ts\":\r\n/*!************************************!*\\\r\n  !*** ./src/api/storage/api/api.ts ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst uploadFile_1 = __webpack_require__(/*! ./uploadFile */ \"./src/api/storage/api/uploadFile.ts\");\r\nconst downloadFile_1 = __webpack_require__(/*! ./downloadFile */ \"./src/api/storage/api/downloadFile.ts\");\r\nconst getTempFileURL_1 = __webpack_require__(/*! ./getTempFileURL */ \"./src/api/storage/api/getTempFileURL.ts\");\r\nconst deleteFile_1 = __webpack_require__(/*! ./deleteFile */ \"./src/api/storage/api/deleteFile.ts\");\r\nfunction getAPIs(cloud) {\r\n    return {\r\n        uploadFile: uploadFile_1.default(cloud),\r\n        downloadFile: downloadFile_1.default(cloud),\r\n        getTempFileURL: getTempFileURL_1.default(cloud),\r\n        deleteFile: deleteFile_1.default(cloud),\r\n    };\r\n}\r\nexports.getAPIs = getAPIs;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/storage/api/deleteFile.ts\":\r\n/*!*******************************************!*\\\r\n  !*** ./src/api/storage/api/deleteFile.ts ***!\r\n  \\*******************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst assert_1 = __webpack_require__(/*! utils/assert */ \"./src/utils/assert.ts\");\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst msg_1 = __webpack_require__(/*! utils/msg */ \"./src/utils/msg.ts\");\r\nconst utils_1 = __webpack_require__(/*! utils/utils */ \"./src/utils/utils.ts\");\r\nfunction getDeleteFile(cloud) {\r\n    return function deleteFile(options) {\r\n        const apiName = 'deleteFile';\r\n        return new Promise(async (resolve, reject) => {\r\n            if (!options) {\r\n                return reject(error_1.returnAsFinalCloudSDKError({\r\n                    errMsg: 'Params for deleteFile must be an object instead of ' + typeof options,\r\n                }, apiName));\r\n            }\r\n            try {\r\n                assert_1.assertType(options, {\r\n                    fileList: 'array'\r\n                });\r\n                options.fileList.forEach((f, i) => {\r\n                    if (typeof f !== 'string') {\r\n                        throw new Error(`Type of fileList[${i}] must be string instead of ${typeof f}`);\r\n                    }\r\n                });\r\n            }\r\n            catch (e) {\r\n                return reject(error_1.returnAsFinalCloudSDKError(e, apiName));\r\n            }\r\n            try {\r\n                const result = await cloud.provider.api.deleteFile({\r\n                    fileList: options.fileList\r\n                }, {\r\n                    instance: cloud.getInstanceForEnv(utils_1.getEnvFromAPIConfig(options.config, cloud.config, 'storage')),\r\n                });\r\n                return resolve({\r\n                    fileList: result.fileList,\r\n                    errMsg: msg_1.apiSuccessMsg(apiName),\r\n                });\r\n            }\r\n            catch (e) {\r\n                return reject(error_1.returnAsFinalCloudSDKError(e, apiName));\r\n            }\r\n        });\r\n    };\r\n}\r\nexports.default = getDeleteFile;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/storage/api/downloadFile.ts\":\r\n/*!*********************************************!*\\\r\n  !*** ./src/api/storage/api/downloadFile.ts ***!\r\n  \\*********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst assert_1 = __webpack_require__(/*! utils/assert */ \"./src/utils/assert.ts\");\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst msg_1 = __webpack_require__(/*! utils/msg */ \"./src/utils/msg.ts\");\r\nconst utils_1 = __webpack_require__(/*! utils/utils */ \"./src/utils/utils.ts\");\r\nfunction getDownloadFile(cloud) {\r\n    return function downloadFile(options) {\r\n        const apiName = 'downloadFile';\r\n        return new Promise(async (resolve, reject) => {\r\n            if (!options) {\r\n                return reject(error_1.returnAsFinalCloudSDKError({\r\n                    errMsg: 'Params for downloadFile must be an object instead of ' + typeof options,\r\n                }, apiName));\r\n            }\r\n            try {\r\n                assert_1.assertType(options, {\r\n                    fileID: 'string',\r\n                });\r\n            }\r\n            catch (e) {\r\n                return reject(error_1.returnAsFinalCloudSDKError(e, apiName));\r\n            }\r\n            try {\r\n                const result = await cloud.provider.api.downloadFile({\r\n                    fileID: options.fileID,\r\n                }, {\r\n                    instance: cloud.getInstanceForEnv(utils_1.getEnvFromAPIConfig(options.config, cloud.config, 'storage')),\r\n                });\r\n                return resolve({\r\n                    fileContent: result.fileContent,\r\n                    statusCode: result.statusCode,\r\n                    errMsg: msg_1.apiSuccessMsg(apiName),\r\n                });\r\n            }\r\n            catch (e) {\r\n                return reject(error_1.returnAsFinalCloudSDKError(e, apiName));\r\n            }\r\n        });\r\n    };\r\n}\r\nexports.default = getDownloadFile;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/storage/api/getTempFileURL.ts\":\r\n/*!***********************************************!*\\\r\n  !*** ./src/api/storage/api/getTempFileURL.ts ***!\r\n  \\***********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst assert_1 = __webpack_require__(/*! utils/assert */ \"./src/utils/assert.ts\");\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst msg_1 = __webpack_require__(/*! utils/msg */ \"./src/utils/msg.ts\");\r\nconst utils_1 = __webpack_require__(/*! utils/utils */ \"./src/utils/utils.ts\");\r\nfunction getGetTempFileURL(cloud) {\r\n    return function getTempFileURL(options) {\r\n        const apiName = 'getTempFileURL';\r\n        return new Promise(async (resolve, reject) => {\r\n            if (!options) {\r\n                return reject(error_1.returnAsFinalCloudSDKError({\r\n                    errMsg: 'Params for getTempFileURL must be an object instead of ' + typeof options,\r\n                }, apiName));\r\n            }\r\n            try {\r\n                assert_1.assertType(options, {\r\n                    fileList: 'array',\r\n                });\r\n            }\r\n            catch (e) {\r\n                return reject(error_1.returnAsFinalCloudSDKError(e, apiName));\r\n            }\r\n            try {\r\n                const result = await cloud.provider.api.getTempFileURL({\r\n                    fileList: options.fileList,\r\n                }, {\r\n                    instance: cloud.getInstanceForEnv(utils_1.getEnvFromAPIConfig(options.config, cloud.config, 'storage')),\r\n                });\r\n                return resolve({\r\n                    fileList: result.fileList,\r\n                    errMsg: msg_1.apiSuccessMsg(apiName),\r\n                });\r\n            }\r\n            catch (e) {\r\n                return reject(error_1.returnAsFinalCloudSDKError(e, apiName));\r\n            }\r\n        });\r\n    };\r\n}\r\nexports.default = getGetTempFileURL;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/storage/api/uploadFile.ts\":\r\n/*!*******************************************!*\\\r\n  !*** ./src/api/storage/api/uploadFile.ts ***!\r\n  \\*******************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst assert_1 = __webpack_require__(/*! utils/assert */ \"./src/utils/assert.ts\");\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst msg_1 = __webpack_require__(/*! utils/msg */ \"./src/utils/msg.ts\");\r\nconst utils_1 = __webpack_require__(/*! utils/utils */ \"./src/utils/utils.ts\");\r\nfunction getUploadFile(cloud) {\r\n    return function uploadFile(options) {\r\n        const apiName = 'uploadFile';\r\n        return new Promise(async (resolve, reject) => {\r\n            if (!options) {\r\n                return reject(error_1.returnAsFinalCloudSDKError({\r\n                    errMsg: 'Params for uploadFile must be an object instead of ' + typeof options,\r\n                }, apiName));\r\n            }\r\n            try {\r\n                assert_1.assertType(options, {\r\n                    cloudPath: 'string',\r\n                });\r\n                if (!options.fileContent) {\r\n                    return reject(error_1.returnAsFinalCloudSDKError(new Error('Type of fileContent must be fs.ReadStream instead of ' + typeof options.fileContent), apiName));\r\n                }\r\n            }\r\n            catch (e) {\r\n                return reject(error_1.returnAsFinalCloudSDKError(e, apiName));\r\n            }\r\n            const header = options.header || {};\r\n            try {\r\n                const result = await cloud.provider.api.uploadFile({\r\n                    fileContent: options.fileContent,\r\n                    cloudPath: options.cloudPath,\r\n                    header,\r\n                }, {\r\n                    instance: cloud.getInstanceForEnv(utils_1.getEnvFromAPIConfig(options.config, cloud.config, 'storage')),\r\n                });\r\n                return resolve({\r\n                    fileID: result.fileID,\r\n                    statusCode: result.statusCode,\r\n                    errMsg: msg_1.apiSuccessMsg(apiName),\r\n                });\r\n            }\r\n            catch (e) {\r\n                return reject(error_1.returnAsFinalCloudSDKError(e, apiName));\r\n            }\r\n        });\r\n    };\r\n}\r\nexports.default = getUploadFile;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/storage/index.ts\":\r\n/*!**********************************!*\\\r\n  !*** ./src/api/storage/index.ts ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst api_1 = __webpack_require__(/*! ./api/api */ \"./src/api/storage/api/api.ts\");\r\nexports.STORAGE_SERVICE_NAME = 'storage';\r\nfunction createStorageService(cloud) {\r\n    return {\r\n        name: exports.STORAGE_SERVICE_NAME,\r\n        getAPIs: api_1.getAPIs.bind(null, cloud),\r\n    };\r\n}\r\nfunction registerService(cloud) {\r\n    cloud.registerService(createStorageService(cloud));\r\n}\r\nexports.registerService = registerService;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/utils/api/api.ts\":\r\n/*!**********************************!*\\\r\n  !*** ./src/api/utils/api/api.ts ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst getWXContext_1 = __webpack_require__(/*! ./getWXContext */ \"./src/api/utils/api/getWXContext.ts\");\r\nfunction getAPIs() {\r\n    return {\r\n        getWXContext: getWXContext_1.default,\r\n    };\r\n}\r\nexports.getAPIs = getAPIs;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/utils/api/getWXContext.ts\":\r\n/*!*******************************************!*\\\r\n  !*** ./src/api/utils/api/getWXContext.ts ***!\r\n  \\*******************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst error_1 = __webpack_require__(/*! utils/error */ \"./src/utils/error.ts\");\r\nconst WX_PREFIX = 'WX_';\r\nconst CONTEXT_KEYS_BLACKLIST = [\r\n    'API_TOKEN',\r\n    'TRIGGER_API_TOKEN_V0',\r\n];\r\nfunction isContextKeyInBlacklist(key) {\r\n    return CONTEXT_KEYS_BLACKLIST.some(v => v === key || (WX_PREFIX + v) === key);\r\n}\r\nexports.isContextKeyInBlacklist = isContextKeyInBlacklist;\r\nfunction isNumber(val) {\r\n    return /^[-]?\\d+$/.test(val);\r\n}\r\nexports.isNumber = isNumber;\r\nfunction getWXContext() {\r\n    const apiName = 'getWXContext';\r\n    const wxContext = {};\r\n    if (!process.env.WX_CONTEXT_KEYS)\r\n        return wxContext;\r\n    try {\r\n        const contextKeys = process.env.WX_CONTEXT_KEYS.split(',');\r\n        for (const key of contextKeys) {\r\n            if (!key)\r\n                continue;\r\n            if (isContextKeyInBlacklist(key))\r\n                continue;\r\n            let val = process.env[key];\r\n            if (val === undefined)\r\n                continue;\r\n            if (isNumber(val)) {\r\n                val = parseInt(val);\r\n            }\r\n            if (key.startsWith(WX_PREFIX) && key.length > 3) {\r\n                wxContext[key.slice(3)] = val;\r\n            }\r\n            else {\r\n                wxContext[key] = val;\r\n            }\r\n        }\r\n        wxContext.ENV = process.env.TCB_ENV || process.env.SCF_NAMESPACE;\r\n        if (process.env.TCB_SOURCE) {\r\n            wxContext.SOURCE = process.env.TCB_SOURCE;\r\n        }\r\n        return wxContext;\r\n    }\r\n    catch (e) {\r\n        const error = error_1.returnAsFinalCloudSDKError(e, apiName);\r\n        throw error;\r\n    }\r\n}\r\nexports.default = getWXContext;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/api/utils/index.ts\":\r\n/*!********************************!*\\\r\n  !*** ./src/api/utils/index.ts ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst api_1 = __webpack_require__(/*! ./api/api */ \"./src/api/utils/api/api.ts\");\r\nconst UTILS_SERVICE_NAME = 'utils';\r\nfunction createUtilsService() {\r\n    return {\r\n        name: UTILS_SERVICE_NAME,\r\n        getAPIs: api_1.getAPIs,\r\n        initRequired: false,\r\n    };\r\n}\r\nfunction registerService(cloud) {\r\n    cloud.registerService(createUtilsService());\r\n}\r\nexports.registerService = registerService;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/config/error.config.ts\":\r\n/*!************************************!*\\\r\n  !*** ./src/config/error.config.ts ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ERR_CODE = {\r\n    '-1': 'unknown error',\r\n    UNKNOWN_ERROR: -1,\r\n    // 以 6 开始的是由微信服务器侧产生的错误码\r\n    // 以 5 开始的是由腾讯云侧产生的错误码\r\n    // 以 4 开始的是本地 SDK 产生的错误\r\n    // 接下来两位表示具体业务类型：01通用，02数据库，03文件，04云函数\r\n    // 最后三位表示具体的错误\r\n    // 小程序 SDK 云函数\r\n    '-404001': 'empty call result',\r\n    SDK_FUNCTIONS_EMPTY_CALL_RESULT: -404001,\r\n    '-404002': 'empty event id',\r\n    SDK_FUNCTIONS_EMPTY_EVENT_ID: -404002,\r\n    '-404003': 'empty poll url',\r\n    SDK_FUNCTIONS_EMPTY_POLL_URL: -404003,\r\n    '-404004': 'empty poll result json',\r\n    SDK_FUNCTIONS_EMPTY_POLL_RESULT_JSON: -404004,\r\n    '-404005': 'exceed max poll retry',\r\n    SDK_FUNCTIONS_EXCEED_MAX_POLL_RETRY: -404005,\r\n    '-404006': 'empty poll result base resp',\r\n    SDK_FUNCTIONS_EMPTY_POLL_RESULT_BASE_RESP: -404006,\r\n    '-404007': 'error while polling for the result, poll result base resp ret %s',\r\n    SDK_FUNCTIONS_POLL_RESULT_BASE_RESP_RET_ABNORMAL: -404007,\r\n    '-404008': 'error while polling for the result, polling server return a status code of %s',\r\n    SDK_FUNCTIONS_POLL_RESULT_STATUS_CODE_ERROR: -404008,\r\n    '-404009': 'error while polling for the result: %s',\r\n    SDK_FUNCTIONS_POLL_ERROR: -404009,\r\n    // 微信服务器\r\n    '-601001': 'system error',\r\n    WX_SYSTEM_ERROR: -601001,\r\n    '-601002': 'system args error',\r\n    WX_SYSTEM_ARGS_ERROR: -601002,\r\n    '-601003': 'system network error',\r\n    WX_SYSTEM_NETWORK_ERROR: -601003,\r\n    '-604100': 'API not found',\r\n    WX_FUNCTIONS_SERVER_OPENAPI_NOT_FOUND: -604100,\r\n    '-604101': 'function has no permission to call this API',\r\n    WX_FUNCTIONS_SERVER_OPENAPI_NO_PERMISSION: -604101,\r\n    '-604102': 'call open API timeout',\r\n    WX_FUNCTIONS_SERVER_OPENAPI_TIMEOUT: -604102,\r\n    '-604103': 'call open API system error',\r\n    WX_FUNCTIONS_SERVER_OPENAPI_SYSTEM_ERROR: -604102,\r\n    // 腾讯云通用\r\n    '-501001': 'resource system error',\r\n    TCB_RESOURCE_SYSTEM_ERROR: -501001,\r\n    '-501002': 'resource server timeout',\r\n    TCB_RESOURCE_SERVER_TIMEOUT: -501002,\r\n    '-501003': 'exceed request limit',\r\n    TCB_EXCEED_REQUEST_LIMIT: -501003,\r\n    '-501004': 'exceed concurrent request limit',\r\n    TCB_EXCEED_CONCURRENT_REQUEST_LIMIT: -501004,\r\n    '-501005': 'invalid env',\r\n    TCB_INVALID_ENV: -501005,\r\n    '-501006': 'invalid common parameters',\r\n    TCB_INVALID_COMMON_PARAM: -501006,\r\n    '-501007': 'invalid parameters',\r\n    TCB_INVALID_PARAM: -501007,\r\n    '-501008': 'invalid request source',\r\n    TCB_INVALID_REQUEST_SOURCE: -501008,\r\n    '-501009': 'resource not initialized',\r\n    TCB_RESOURCE_NOT_INITIALIZED: -501009,\r\n    // 腾讯云数据库\r\n    '-502001': 'database request fail',\r\n    TCB_DB_REQUEST_FAIL: -502001,\r\n    '-502002': 'database invalid command',\r\n    TCB_DB_INVALID_COMMAND: -502002,\r\n    '-502003': 'database permission denied',\r\n    TCB_DB_PERMISSION_DENIED: -502003,\r\n    '-502004': 'database exceed collection limit',\r\n    TCB_DB_EXCEED_COLLECTION_LIMIT: -502004,\r\n    '-502005': 'database collection not exists',\r\n    TCB_DB_COLLECTION_NOT_EXISTS: -502005,\r\n    // 腾讯云文件管理\r\n    '-503001': 'storage request fail',\r\n    TCB_STORAGE_REQUEST_FAIL: -503001,\r\n    '-503002': 'storage permission denied',\r\n    TCB_STORAGE_PERMISSION_DENIED: -503002,\r\n    '-503003': 'storage file not exists',\r\n    TCB_STORAGE_FILE_NOT_EXISTS: -503003,\r\n    '-503004': 'storage invalid sign parameter',\r\n    TCB_STORAGE_INVALID_SIGN_PARAM: -503004,\r\n    // 腾讯云云函数\r\n    '-504001': 'functions request fail',\r\n    TCB_FUNCTIONS_REQUEST_FAIL: -504001,\r\n    '-504002': 'functions execute fail',\r\n    TCB_FUNCTIONS_EXEC_FAIL: -504002,\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/index.ts\":\r\n/*!**********************!*\\\r\n  !*** ./src/index.ts ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nconst cloud_1 = __webpack_require__(/*! ./api/cloud */ \"./src/api/cloud/index.ts\");\r\nmodule.exports = cloud_1.default.exportAPI;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/protobuf/openapi.js\":\r\n/*!*********************************!*\\\r\n  !*** ./src/protobuf/openapi.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\r\n\r\n\r\nvar $protobuf = __webpack_require__(/*! protobufjs/minimal */ \"protobufjs/minimal\");\r\n\r\n// Common aliases\r\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\r\n\r\n// Exported root namespace\r\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\r\n\r\n$root.KeyValuePair = (function() {\r\n\r\n    /**\r\n     * Properties of a KeyValuePair.\r\n     * @exports IKeyValuePair\r\n     * @interface IKeyValuePair\r\n     * @property {string|null} [key] KeyValuePair key\r\n     * @property {Uint8Array|null} [value] KeyValuePair value\r\n     * @property {string|null} [contenttype] KeyValuePair contenttype\r\n     * @property {string|null} [filename] KeyValuePair filename\r\n     */\r\n\r\n    /**\r\n     * Constructs a new KeyValuePair.\r\n     * @exports KeyValuePair\r\n     * @classdesc Represents a KeyValuePair.\r\n     * @implements IKeyValuePair\r\n     * @constructor\r\n     * @param {IKeyValuePair=} [properties] Properties to set\r\n     */\r\n    function KeyValuePair(properties) {\r\n        if (properties)\r\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                if (properties[keys[i]] != null)\r\n                    this[keys[i]] = properties[keys[i]];\r\n    }\r\n\r\n    /**\r\n     * KeyValuePair key.\r\n     * @member {string} key\r\n     * @memberof KeyValuePair\r\n     * @instance\r\n     */\r\n    KeyValuePair.prototype.key = \"\";\r\n\r\n    /**\r\n     * KeyValuePair value.\r\n     * @member {Uint8Array} value\r\n     * @memberof KeyValuePair\r\n     * @instance\r\n     */\r\n    KeyValuePair.prototype.value = $util.newBuffer([]);\r\n\r\n    /**\r\n     * KeyValuePair contenttype.\r\n     * @member {string} contenttype\r\n     * @memberof KeyValuePair\r\n     * @instance\r\n     */\r\n    KeyValuePair.prototype.contenttype = \"\";\r\n\r\n    /**\r\n     * KeyValuePair filename.\r\n     * @member {string} filename\r\n     * @memberof KeyValuePair\r\n     * @instance\r\n     */\r\n    KeyValuePair.prototype.filename = \"\";\r\n\r\n    /**\r\n     * Creates a new KeyValuePair instance using the specified properties.\r\n     * @function create\r\n     * @memberof KeyValuePair\r\n     * @static\r\n     * @param {IKeyValuePair=} [properties] Properties to set\r\n     * @returns {KeyValuePair} KeyValuePair instance\r\n     */\r\n    KeyValuePair.create = function create(properties) {\r\n        return new KeyValuePair(properties);\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified KeyValuePair message. Does not implicitly {@link KeyValuePair.verify|verify} messages.\r\n     * @function encode\r\n     * @memberof KeyValuePair\r\n     * @static\r\n     * @param {IKeyValuePair} message KeyValuePair message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    KeyValuePair.encode = function encode(message, writer) {\r\n        if (!writer)\r\n            writer = $Writer.create();\r\n        if (message.key != null && message.hasOwnProperty(\"key\"))\r\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\r\n        if (message.value != null && message.hasOwnProperty(\"value\"))\r\n            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);\r\n        if (message.contenttype != null && message.hasOwnProperty(\"contenttype\"))\r\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.contenttype);\r\n        if (message.filename != null && message.hasOwnProperty(\"filename\"))\r\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.filename);\r\n        return writer;\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified KeyValuePair message, length delimited. Does not implicitly {@link KeyValuePair.verify|verify} messages.\r\n     * @function encodeDelimited\r\n     * @memberof KeyValuePair\r\n     * @static\r\n     * @param {IKeyValuePair} message KeyValuePair message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    KeyValuePair.encodeDelimited = function encodeDelimited(message, writer) {\r\n        return this.encode(message, writer).ldelim();\r\n    };\r\n\r\n    /**\r\n     * Decodes a KeyValuePair message from the specified reader or buffer.\r\n     * @function decode\r\n     * @memberof KeyValuePair\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @param {number} [length] Message length if known beforehand\r\n     * @returns {KeyValuePair} KeyValuePair\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    KeyValuePair.decode = function decode(reader, length) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = $Reader.create(reader);\r\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.KeyValuePair();\r\n        while (reader.pos < end) {\r\n            var tag = reader.uint32();\r\n            switch (tag >>> 3) {\r\n            case 1:\r\n                message.key = reader.string();\r\n                break;\r\n            case 2:\r\n                message.value = reader.bytes();\r\n                break;\r\n            case 3:\r\n                message.contenttype = reader.string();\r\n                break;\r\n            case 4:\r\n                message.filename = reader.string();\r\n                break;\r\n            default:\r\n                reader.skipType(tag & 7);\r\n                break;\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Decodes a KeyValuePair message from the specified reader or buffer, length delimited.\r\n     * @function decodeDelimited\r\n     * @memberof KeyValuePair\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @returns {KeyValuePair} KeyValuePair\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    KeyValuePair.decodeDelimited = function decodeDelimited(reader) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = new $Reader(reader);\r\n        return this.decode(reader, reader.uint32());\r\n    };\r\n\r\n    /**\r\n     * Verifies a KeyValuePair message.\r\n     * @function verify\r\n     * @memberof KeyValuePair\r\n     * @static\r\n     * @param {Object.<string,*>} message Plain object to verify\r\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n     */\r\n    KeyValuePair.verify = function verify(message) {\r\n        if (typeof message !== \"object\" || message === null)\r\n            return \"object expected\";\r\n        if (message.key != null && message.hasOwnProperty(\"key\"))\r\n            if (!$util.isString(message.key))\r\n                return \"key: string expected\";\r\n        if (message.value != null && message.hasOwnProperty(\"value\"))\r\n            if (!(message.value && typeof message.value.length === \"number\" || $util.isString(message.value)))\r\n                return \"value: buffer expected\";\r\n        if (message.contenttype != null && message.hasOwnProperty(\"contenttype\"))\r\n            if (!$util.isString(message.contenttype))\r\n                return \"contenttype: string expected\";\r\n        if (message.filename != null && message.hasOwnProperty(\"filename\"))\r\n            if (!$util.isString(message.filename))\r\n                return \"filename: string expected\";\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Creates a KeyValuePair message from a plain object. Also converts values to their respective internal types.\r\n     * @function fromObject\r\n     * @memberof KeyValuePair\r\n     * @static\r\n     * @param {Object.<string,*>} object Plain object\r\n     * @returns {KeyValuePair} KeyValuePair\r\n     */\r\n    KeyValuePair.fromObject = function fromObject(object) {\r\n        if (object instanceof $root.KeyValuePair)\r\n            return object;\r\n        var message = new $root.KeyValuePair();\r\n        if (object.key != null)\r\n            message.key = String(object.key);\r\n        if (object.value != null)\r\n            if (typeof object.value === \"string\")\r\n                $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);\r\n            else if (object.value.length)\r\n                message.value = object.value;\r\n        if (object.contenttype != null)\r\n            message.contenttype = String(object.contenttype);\r\n        if (object.filename != null)\r\n            message.filename = String(object.filename);\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Creates a plain object from a KeyValuePair message. Also converts values to other types if specified.\r\n     * @function toObject\r\n     * @memberof KeyValuePair\r\n     * @static\r\n     * @param {KeyValuePair} message KeyValuePair\r\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n     * @returns {Object.<string,*>} Plain object\r\n     */\r\n    KeyValuePair.toObject = function toObject(message, options) {\r\n        if (!options)\r\n            options = {};\r\n        var object = {};\r\n        if (options.defaults) {\r\n            object.key = \"\";\r\n            if (options.bytes === String)\r\n                object.value = \"\";\r\n            else {\r\n                object.value = [];\r\n                if (options.bytes !== Array)\r\n                    object.value = $util.newBuffer(object.value);\r\n            }\r\n            object.contenttype = \"\";\r\n            object.filename = \"\";\r\n        }\r\n        if (message.key != null && message.hasOwnProperty(\"key\"))\r\n            object.key = message.key;\r\n        if (message.value != null && message.hasOwnProperty(\"value\"))\r\n            object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;\r\n        if (message.contenttype != null && message.hasOwnProperty(\"contenttype\"))\r\n            object.contenttype = message.contenttype;\r\n        if (message.filename != null && message.hasOwnProperty(\"filename\"))\r\n            object.filename = message.filename;\r\n        return object;\r\n    };\r\n\r\n    /**\r\n     * Converts this KeyValuePair to JSON.\r\n     * @function toJSON\r\n     * @memberof KeyValuePair\r\n     * @instance\r\n     * @returns {Object.<string,*>} JSON object\r\n     */\r\n    KeyValuePair.prototype.toJSON = function toJSON() {\r\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n    };\r\n\r\n    return KeyValuePair;\r\n})();\r\n\r\n$root.OpenApiData = (function() {\r\n\r\n    /**\r\n     * Properties of an OpenApiData.\r\n     * @exports IOpenApiData\r\n     * @interface IOpenApiData\r\n     * @property {Array.<IKeyValuePair>|null} [pairs] OpenApiData pairs\r\n     */\r\n\r\n    /**\r\n     * Constructs a new OpenApiData.\r\n     * @exports OpenApiData\r\n     * @classdesc Represents an OpenApiData.\r\n     * @implements IOpenApiData\r\n     * @constructor\r\n     * @param {IOpenApiData=} [properties] Properties to set\r\n     */\r\n    function OpenApiData(properties) {\r\n        this.pairs = [];\r\n        if (properties)\r\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                if (properties[keys[i]] != null)\r\n                    this[keys[i]] = properties[keys[i]];\r\n    }\r\n\r\n    /**\r\n     * OpenApiData pairs.\r\n     * @member {Array.<IKeyValuePair>} pairs\r\n     * @memberof OpenApiData\r\n     * @instance\r\n     */\r\n    OpenApiData.prototype.pairs = $util.emptyArray;\r\n\r\n    /**\r\n     * Creates a new OpenApiData instance using the specified properties.\r\n     * @function create\r\n     * @memberof OpenApiData\r\n     * @static\r\n     * @param {IOpenApiData=} [properties] Properties to set\r\n     * @returns {OpenApiData} OpenApiData instance\r\n     */\r\n    OpenApiData.create = function create(properties) {\r\n        return new OpenApiData(properties);\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified OpenApiData message. Does not implicitly {@link OpenApiData.verify|verify} messages.\r\n     * @function encode\r\n     * @memberof OpenApiData\r\n     * @static\r\n     * @param {IOpenApiData} message OpenApiData message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    OpenApiData.encode = function encode(message, writer) {\r\n        if (!writer)\r\n            writer = $Writer.create();\r\n        if (message.pairs != null && message.pairs.length)\r\n            for (var i = 0; i < message.pairs.length; ++i)\r\n                $root.KeyValuePair.encode(message.pairs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\r\n        return writer;\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified OpenApiData message, length delimited. Does not implicitly {@link OpenApiData.verify|verify} messages.\r\n     * @function encodeDelimited\r\n     * @memberof OpenApiData\r\n     * @static\r\n     * @param {IOpenApiData} message OpenApiData message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    OpenApiData.encodeDelimited = function encodeDelimited(message, writer) {\r\n        return this.encode(message, writer).ldelim();\r\n    };\r\n\r\n    /**\r\n     * Decodes an OpenApiData message from the specified reader or buffer.\r\n     * @function decode\r\n     * @memberof OpenApiData\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @param {number} [length] Message length if known beforehand\r\n     * @returns {OpenApiData} OpenApiData\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    OpenApiData.decode = function decode(reader, length) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = $Reader.create(reader);\r\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.OpenApiData();\r\n        while (reader.pos < end) {\r\n            var tag = reader.uint32();\r\n            switch (tag >>> 3) {\r\n            case 1:\r\n                if (!(message.pairs && message.pairs.length))\r\n                    message.pairs = [];\r\n                message.pairs.push($root.KeyValuePair.decode(reader, reader.uint32()));\r\n                break;\r\n            default:\r\n                reader.skipType(tag & 7);\r\n                break;\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Decodes an OpenApiData message from the specified reader or buffer, length delimited.\r\n     * @function decodeDelimited\r\n     * @memberof OpenApiData\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @returns {OpenApiData} OpenApiData\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    OpenApiData.decodeDelimited = function decodeDelimited(reader) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = new $Reader(reader);\r\n        return this.decode(reader, reader.uint32());\r\n    };\r\n\r\n    /**\r\n     * Verifies an OpenApiData message.\r\n     * @function verify\r\n     * @memberof OpenApiData\r\n     * @static\r\n     * @param {Object.<string,*>} message Plain object to verify\r\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n     */\r\n    OpenApiData.verify = function verify(message) {\r\n        if (typeof message !== \"object\" || message === null)\r\n            return \"object expected\";\r\n        if (message.pairs != null && message.hasOwnProperty(\"pairs\")) {\r\n            if (!Array.isArray(message.pairs))\r\n                return \"pairs: array expected\";\r\n            for (var i = 0; i < message.pairs.length; ++i) {\r\n                var error = $root.KeyValuePair.verify(message.pairs[i]);\r\n                if (error)\r\n                    return \"pairs.\" + error;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Creates an OpenApiData message from a plain object. Also converts values to their respective internal types.\r\n     * @function fromObject\r\n     * @memberof OpenApiData\r\n     * @static\r\n     * @param {Object.<string,*>} object Plain object\r\n     * @returns {OpenApiData} OpenApiData\r\n     */\r\n    OpenApiData.fromObject = function fromObject(object) {\r\n        if (object instanceof $root.OpenApiData)\r\n            return object;\r\n        var message = new $root.OpenApiData();\r\n        if (object.pairs) {\r\n            if (!Array.isArray(object.pairs))\r\n                throw TypeError(\".OpenApiData.pairs: array expected\");\r\n            message.pairs = [];\r\n            for (var i = 0; i < object.pairs.length; ++i) {\r\n                if (typeof object.pairs[i] !== \"object\")\r\n                    throw TypeError(\".OpenApiData.pairs: object expected\");\r\n                message.pairs[i] = $root.KeyValuePair.fromObject(object.pairs[i]);\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Creates a plain object from an OpenApiData message. Also converts values to other types if specified.\r\n     * @function toObject\r\n     * @memberof OpenApiData\r\n     * @static\r\n     * @param {OpenApiData} message OpenApiData\r\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n     * @returns {Object.<string,*>} Plain object\r\n     */\r\n    OpenApiData.toObject = function toObject(message, options) {\r\n        if (!options)\r\n            options = {};\r\n        var object = {};\r\n        if (options.arrays || options.defaults)\r\n            object.pairs = [];\r\n        if (message.pairs && message.pairs.length) {\r\n            object.pairs = [];\r\n            for (var j = 0; j < message.pairs.length; ++j)\r\n                object.pairs[j] = $root.KeyValuePair.toObject(message.pairs[j], options);\r\n        }\r\n        return object;\r\n    };\r\n\r\n    /**\r\n     * Converts this OpenApiData to JSON.\r\n     * @function toJSON\r\n     * @memberof OpenApiData\r\n     * @instance\r\n     * @returns {Object.<string,*>} JSON object\r\n     */\r\n    OpenApiData.prototype.toJSON = function toJSON() {\r\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n    };\r\n\r\n    return OpenApiData;\r\n})();\r\n\r\n$root.CommApiData = (function() {\r\n\r\n    /**\r\n     * Properties of a CommApiData.\r\n     * @exports ICommApiData\r\n     * @interface ICommApiData\r\n     * @property {CommApiData.ApiType|null} [apiType] CommApiData apiType\r\n     * @property {IOpenApiData|null} [openapiData] CommApiData openapiData\r\n     * @property {IInnerApiData|null} [innerData] CommApiData innerData\r\n     * @property {ISvrkitApiData|null} [svrkitData] CommApiData svrkitData\r\n     */\r\n\r\n    /**\r\n     * Constructs a new CommApiData.\r\n     * @exports CommApiData\r\n     * @classdesc Represents a CommApiData.\r\n     * @implements ICommApiData\r\n     * @constructor\r\n     * @param {ICommApiData=} [properties] Properties to set\r\n     */\r\n    function CommApiData(properties) {\r\n        if (properties)\r\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                if (properties[keys[i]] != null)\r\n                    this[keys[i]] = properties[keys[i]];\r\n    }\r\n\r\n    /**\r\n     * CommApiData apiType.\r\n     * @member {CommApiData.ApiType} apiType\r\n     * @memberof CommApiData\r\n     * @instance\r\n     */\r\n    CommApiData.prototype.apiType = 0;\r\n\r\n    /**\r\n     * CommApiData openapiData.\r\n     * @member {IOpenApiData|null|undefined} openapiData\r\n     * @memberof CommApiData\r\n     * @instance\r\n     */\r\n    CommApiData.prototype.openapiData = null;\r\n\r\n    /**\r\n     * CommApiData innerData.\r\n     * @member {IInnerApiData|null|undefined} innerData\r\n     * @memberof CommApiData\r\n     * @instance\r\n     */\r\n    CommApiData.prototype.innerData = null;\r\n\r\n    /**\r\n     * CommApiData svrkitData.\r\n     * @member {ISvrkitApiData|null|undefined} svrkitData\r\n     * @memberof CommApiData\r\n     * @instance\r\n     */\r\n    CommApiData.prototype.svrkitData = null;\r\n\r\n    /**\r\n     * Creates a new CommApiData instance using the specified properties.\r\n     * @function create\r\n     * @memberof CommApiData\r\n     * @static\r\n     * @param {ICommApiData=} [properties] Properties to set\r\n     * @returns {CommApiData} CommApiData instance\r\n     */\r\n    CommApiData.create = function create(properties) {\r\n        return new CommApiData(properties);\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified CommApiData message. Does not implicitly {@link CommApiData.verify|verify} messages.\r\n     * @function encode\r\n     * @memberof CommApiData\r\n     * @static\r\n     * @param {ICommApiData} message CommApiData message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    CommApiData.encode = function encode(message, writer) {\r\n        if (!writer)\r\n            writer = $Writer.create();\r\n        if (message.apiType != null && message.hasOwnProperty(\"apiType\"))\r\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.apiType);\r\n        if (message.openapiData != null && message.hasOwnProperty(\"openapiData\"))\r\n            $root.OpenApiData.encode(message.openapiData, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\r\n        if (message.innerData != null && message.hasOwnProperty(\"innerData\"))\r\n            $root.InnerApiData.encode(message.innerData, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\r\n        if (message.svrkitData != null && message.hasOwnProperty(\"svrkitData\"))\r\n            $root.SvrkitApiData.encode(message.svrkitData, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\r\n        return writer;\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified CommApiData message, length delimited. Does not implicitly {@link CommApiData.verify|verify} messages.\r\n     * @function encodeDelimited\r\n     * @memberof CommApiData\r\n     * @static\r\n     * @param {ICommApiData} message CommApiData message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    CommApiData.encodeDelimited = function encodeDelimited(message, writer) {\r\n        return this.encode(message, writer).ldelim();\r\n    };\r\n\r\n    /**\r\n     * Decodes a CommApiData message from the specified reader or buffer.\r\n     * @function decode\r\n     * @memberof CommApiData\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @param {number} [length] Message length if known beforehand\r\n     * @returns {CommApiData} CommApiData\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    CommApiData.decode = function decode(reader, length) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = $Reader.create(reader);\r\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CommApiData();\r\n        while (reader.pos < end) {\r\n            var tag = reader.uint32();\r\n            switch (tag >>> 3) {\r\n            case 1:\r\n                message.apiType = reader.int32();\r\n                break;\r\n            case 2:\r\n                message.openapiData = $root.OpenApiData.decode(reader, reader.uint32());\r\n                break;\r\n            case 3:\r\n                message.innerData = $root.InnerApiData.decode(reader, reader.uint32());\r\n                break;\r\n            case 4:\r\n                message.svrkitData = $root.SvrkitApiData.decode(reader, reader.uint32());\r\n                break;\r\n            default:\r\n                reader.skipType(tag & 7);\r\n                break;\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Decodes a CommApiData message from the specified reader or buffer, length delimited.\r\n     * @function decodeDelimited\r\n     * @memberof CommApiData\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @returns {CommApiData} CommApiData\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    CommApiData.decodeDelimited = function decodeDelimited(reader) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = new $Reader(reader);\r\n        return this.decode(reader, reader.uint32());\r\n    };\r\n\r\n    /**\r\n     * Verifies a CommApiData message.\r\n     * @function verify\r\n     * @memberof CommApiData\r\n     * @static\r\n     * @param {Object.<string,*>} message Plain object to verify\r\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n     */\r\n    CommApiData.verify = function verify(message) {\r\n        if (typeof message !== \"object\" || message === null)\r\n            return \"object expected\";\r\n        if (message.apiType != null && message.hasOwnProperty(\"apiType\"))\r\n            switch (message.apiType) {\r\n            default:\r\n                return \"apiType: enum value expected\";\r\n            case 0:\r\n            case 1:\r\n            case 2:\r\n                break;\r\n            }\r\n        if (message.openapiData != null && message.hasOwnProperty(\"openapiData\")) {\r\n            var error = $root.OpenApiData.verify(message.openapiData);\r\n            if (error)\r\n                return \"openapiData.\" + error;\r\n        }\r\n        if (message.innerData != null && message.hasOwnProperty(\"innerData\")) {\r\n            var error = $root.InnerApiData.verify(message.innerData);\r\n            if (error)\r\n                return \"innerData.\" + error;\r\n        }\r\n        if (message.svrkitData != null && message.hasOwnProperty(\"svrkitData\")) {\r\n            var error = $root.SvrkitApiData.verify(message.svrkitData);\r\n            if (error)\r\n                return \"svrkitData.\" + error;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Creates a CommApiData message from a plain object. Also converts values to their respective internal types.\r\n     * @function fromObject\r\n     * @memberof CommApiData\r\n     * @static\r\n     * @param {Object.<string,*>} object Plain object\r\n     * @returns {CommApiData} CommApiData\r\n     */\r\n    CommApiData.fromObject = function fromObject(object) {\r\n        if (object instanceof $root.CommApiData)\r\n            return object;\r\n        var message = new $root.CommApiData();\r\n        switch (object.apiType) {\r\n        case \"OPEN_API\":\r\n        case 0:\r\n            message.apiType = 0;\r\n            break;\r\n        case \"INNER_API\":\r\n        case 1:\r\n            message.apiType = 1;\r\n            break;\r\n        case \"SVRKIT_API\":\r\n        case 2:\r\n            message.apiType = 2;\r\n            break;\r\n        }\r\n        if (object.openapiData != null) {\r\n            if (typeof object.openapiData !== \"object\")\r\n                throw TypeError(\".CommApiData.openapiData: object expected\");\r\n            message.openapiData = $root.OpenApiData.fromObject(object.openapiData);\r\n        }\r\n        if (object.innerData != null) {\r\n            if (typeof object.innerData !== \"object\")\r\n                throw TypeError(\".CommApiData.innerData: object expected\");\r\n            message.innerData = $root.InnerApiData.fromObject(object.innerData);\r\n        }\r\n        if (object.svrkitData != null) {\r\n            if (typeof object.svrkitData !== \"object\")\r\n                throw TypeError(\".CommApiData.svrkitData: object expected\");\r\n            message.svrkitData = $root.SvrkitApiData.fromObject(object.svrkitData);\r\n        }\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Creates a plain object from a CommApiData message. Also converts values to other types if specified.\r\n     * @function toObject\r\n     * @memberof CommApiData\r\n     * @static\r\n     * @param {CommApiData} message CommApiData\r\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n     * @returns {Object.<string,*>} Plain object\r\n     */\r\n    CommApiData.toObject = function toObject(message, options) {\r\n        if (!options)\r\n            options = {};\r\n        var object = {};\r\n        if (options.defaults) {\r\n            object.apiType = options.enums === String ? \"OPEN_API\" : 0;\r\n            object.openapiData = null;\r\n            object.innerData = null;\r\n            object.svrkitData = null;\r\n        }\r\n        if (message.apiType != null && message.hasOwnProperty(\"apiType\"))\r\n            object.apiType = options.enums === String ? $root.CommApiData.ApiType[message.apiType] : message.apiType;\r\n        if (message.openapiData != null && message.hasOwnProperty(\"openapiData\"))\r\n            object.openapiData = $root.OpenApiData.toObject(message.openapiData, options);\r\n        if (message.innerData != null && message.hasOwnProperty(\"innerData\"))\r\n            object.innerData = $root.InnerApiData.toObject(message.innerData, options);\r\n        if (message.svrkitData != null && message.hasOwnProperty(\"svrkitData\"))\r\n            object.svrkitData = $root.SvrkitApiData.toObject(message.svrkitData, options);\r\n        return object;\r\n    };\r\n\r\n    /**\r\n     * Converts this CommApiData to JSON.\r\n     * @function toJSON\r\n     * @memberof CommApiData\r\n     * @instance\r\n     * @returns {Object.<string,*>} JSON object\r\n     */\r\n    CommApiData.prototype.toJSON = function toJSON() {\r\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n    };\r\n\r\n    /**\r\n     * ApiType enum.\r\n     * @name CommApiData.ApiType\r\n     * @enum {string}\r\n     * @property {number} OPEN_API=0 OPEN_API value\r\n     * @property {number} INNER_API=1 INNER_API value\r\n     * @property {number} SVRKIT_API=2 SVRKIT_API value\r\n     */\r\n    CommApiData.ApiType = (function() {\r\n        var valuesById = {}, values = Object.create(valuesById);\r\n        values[valuesById[0] = \"OPEN_API\"] = 0;\r\n        values[valuesById[1] = \"INNER_API\"] = 1;\r\n        values[valuesById[2] = \"SVRKIT_API\"] = 2;\r\n        return values;\r\n    })();\r\n\r\n    return CommApiData;\r\n})();\r\n\r\n$root.CommOpenApiResp = (function() {\r\n\r\n    /**\r\n     * Properties of a CommOpenApiResp.\r\n     * @exports ICommOpenApiResp\r\n     * @interface ICommOpenApiResp\r\n     * @property {Uint8Array|null} [respData] CommOpenApiResp respData\r\n     * @property {string|null} [contentType] CommOpenApiResp contentType\r\n     * @property {number|null} [errorCode] CommOpenApiResp errorCode\r\n     * @property {number|null} [httpCode] CommOpenApiResp httpCode\r\n     * @property {Array.<IHttpHeader>|null} [headers] CommOpenApiResp headers\r\n     * @property {number|null} [svrkitErrorCode] CommOpenApiResp svrkitErrorCode\r\n     */\r\n\r\n    /**\r\n     * Constructs a new CommOpenApiResp.\r\n     * @exports CommOpenApiResp\r\n     * @classdesc Represents a CommOpenApiResp.\r\n     * @implements ICommOpenApiResp\r\n     * @constructor\r\n     * @param {ICommOpenApiResp=} [properties] Properties to set\r\n     */\r\n    function CommOpenApiResp(properties) {\r\n        this.headers = [];\r\n        if (properties)\r\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                if (properties[keys[i]] != null)\r\n                    this[keys[i]] = properties[keys[i]];\r\n    }\r\n\r\n    /**\r\n     * CommOpenApiResp respData.\r\n     * @member {Uint8Array} respData\r\n     * @memberof CommOpenApiResp\r\n     * @instance\r\n     */\r\n    CommOpenApiResp.prototype.respData = $util.newBuffer([]);\r\n\r\n    /**\r\n     * CommOpenApiResp contentType.\r\n     * @member {string} contentType\r\n     * @memberof CommOpenApiResp\r\n     * @instance\r\n     */\r\n    CommOpenApiResp.prototype.contentType = \"\";\r\n\r\n    /**\r\n     * CommOpenApiResp errorCode.\r\n     * @member {number} errorCode\r\n     * @memberof CommOpenApiResp\r\n     * @instance\r\n     */\r\n    CommOpenApiResp.prototype.errorCode = 0;\r\n\r\n    /**\r\n     * CommOpenApiResp httpCode.\r\n     * @member {number} httpCode\r\n     * @memberof CommOpenApiResp\r\n     * @instance\r\n     */\r\n    CommOpenApiResp.prototype.httpCode = 0;\r\n\r\n    /**\r\n     * CommOpenApiResp headers.\r\n     * @member {Array.<IHttpHeader>} headers\r\n     * @memberof CommOpenApiResp\r\n     * @instance\r\n     */\r\n    CommOpenApiResp.prototype.headers = $util.emptyArray;\r\n\r\n    /**\r\n     * CommOpenApiResp svrkitErrorCode.\r\n     * @member {number} svrkitErrorCode\r\n     * @memberof CommOpenApiResp\r\n     * @instance\r\n     */\r\n    CommOpenApiResp.prototype.svrkitErrorCode = 0;\r\n\r\n    /**\r\n     * Creates a new CommOpenApiResp instance using the specified properties.\r\n     * @function create\r\n     * @memberof CommOpenApiResp\r\n     * @static\r\n     * @param {ICommOpenApiResp=} [properties] Properties to set\r\n     * @returns {CommOpenApiResp} CommOpenApiResp instance\r\n     */\r\n    CommOpenApiResp.create = function create(properties) {\r\n        return new CommOpenApiResp(properties);\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified CommOpenApiResp message. Does not implicitly {@link CommOpenApiResp.verify|verify} messages.\r\n     * @function encode\r\n     * @memberof CommOpenApiResp\r\n     * @static\r\n     * @param {ICommOpenApiResp} message CommOpenApiResp message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    CommOpenApiResp.encode = function encode(message, writer) {\r\n        if (!writer)\r\n            writer = $Writer.create();\r\n        if (message.respData != null && message.hasOwnProperty(\"respData\"))\r\n            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.respData);\r\n        if (message.contentType != null && message.hasOwnProperty(\"contentType\"))\r\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.contentType);\r\n        if (message.errorCode != null && message.hasOwnProperty(\"errorCode\"))\r\n            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.errorCode);\r\n        if (message.httpCode != null && message.hasOwnProperty(\"httpCode\"))\r\n            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.httpCode);\r\n        if (message.headers != null && message.headers.length)\r\n            for (var i = 0; i < message.headers.length; ++i)\r\n                $root.HttpHeader.encode(message.headers[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\r\n        if (message.svrkitErrorCode != null && message.hasOwnProperty(\"svrkitErrorCode\"))\r\n            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.svrkitErrorCode);\r\n        return writer;\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified CommOpenApiResp message, length delimited. Does not implicitly {@link CommOpenApiResp.verify|verify} messages.\r\n     * @function encodeDelimited\r\n     * @memberof CommOpenApiResp\r\n     * @static\r\n     * @param {ICommOpenApiResp} message CommOpenApiResp message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    CommOpenApiResp.encodeDelimited = function encodeDelimited(message, writer) {\r\n        return this.encode(message, writer).ldelim();\r\n    };\r\n\r\n    /**\r\n     * Decodes a CommOpenApiResp message from the specified reader or buffer.\r\n     * @function decode\r\n     * @memberof CommOpenApiResp\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @param {number} [length] Message length if known beforehand\r\n     * @returns {CommOpenApiResp} CommOpenApiResp\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    CommOpenApiResp.decode = function decode(reader, length) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = $Reader.create(reader);\r\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CommOpenApiResp();\r\n        while (reader.pos < end) {\r\n            var tag = reader.uint32();\r\n            switch (tag >>> 3) {\r\n            case 1:\r\n                message.respData = reader.bytes();\r\n                break;\r\n            case 2:\r\n                message.contentType = reader.string();\r\n                break;\r\n            case 3:\r\n                message.errorCode = reader.int32();\r\n                break;\r\n            case 4:\r\n                message.httpCode = reader.uint32();\r\n                break;\r\n            case 5:\r\n                if (!(message.headers && message.headers.length))\r\n                    message.headers = [];\r\n                message.headers.push($root.HttpHeader.decode(reader, reader.uint32()));\r\n                break;\r\n            case 6:\r\n                message.svrkitErrorCode = reader.int32();\r\n                break;\r\n            default:\r\n                reader.skipType(tag & 7);\r\n                break;\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Decodes a CommOpenApiResp message from the specified reader or buffer, length delimited.\r\n     * @function decodeDelimited\r\n     * @memberof CommOpenApiResp\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @returns {CommOpenApiResp} CommOpenApiResp\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    CommOpenApiResp.decodeDelimited = function decodeDelimited(reader) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = new $Reader(reader);\r\n        return this.decode(reader, reader.uint32());\r\n    };\r\n\r\n    /**\r\n     * Verifies a CommOpenApiResp message.\r\n     * @function verify\r\n     * @memberof CommOpenApiResp\r\n     * @static\r\n     * @param {Object.<string,*>} message Plain object to verify\r\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n     */\r\n    CommOpenApiResp.verify = function verify(message) {\r\n        if (typeof message !== \"object\" || message === null)\r\n            return \"object expected\";\r\n        if (message.respData != null && message.hasOwnProperty(\"respData\"))\r\n            if (!(message.respData && typeof message.respData.length === \"number\" || $util.isString(message.respData)))\r\n                return \"respData: buffer expected\";\r\n        if (message.contentType != null && message.hasOwnProperty(\"contentType\"))\r\n            if (!$util.isString(message.contentType))\r\n                return \"contentType: string expected\";\r\n        if (message.errorCode != null && message.hasOwnProperty(\"errorCode\"))\r\n            if (!$util.isInteger(message.errorCode))\r\n                return \"errorCode: integer expected\";\r\n        if (message.httpCode != null && message.hasOwnProperty(\"httpCode\"))\r\n            if (!$util.isInteger(message.httpCode))\r\n                return \"httpCode: integer expected\";\r\n        if (message.headers != null && message.hasOwnProperty(\"headers\")) {\r\n            if (!Array.isArray(message.headers))\r\n                return \"headers: array expected\";\r\n            for (var i = 0; i < message.headers.length; ++i) {\r\n                var error = $root.HttpHeader.verify(message.headers[i]);\r\n                if (error)\r\n                    return \"headers.\" + error;\r\n            }\r\n        }\r\n        if (message.svrkitErrorCode != null && message.hasOwnProperty(\"svrkitErrorCode\"))\r\n            if (!$util.isInteger(message.svrkitErrorCode))\r\n                return \"svrkitErrorCode: integer expected\";\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Creates a CommOpenApiResp message from a plain object. Also converts values to their respective internal types.\r\n     * @function fromObject\r\n     * @memberof CommOpenApiResp\r\n     * @static\r\n     * @param {Object.<string,*>} object Plain object\r\n     * @returns {CommOpenApiResp} CommOpenApiResp\r\n     */\r\n    CommOpenApiResp.fromObject = function fromObject(object) {\r\n        if (object instanceof $root.CommOpenApiResp)\r\n            return object;\r\n        var message = new $root.CommOpenApiResp();\r\n        if (object.respData != null)\r\n            if (typeof object.respData === \"string\")\r\n                $util.base64.decode(object.respData, message.respData = $util.newBuffer($util.base64.length(object.respData)), 0);\r\n            else if (object.respData.length)\r\n                message.respData = object.respData;\r\n        if (object.contentType != null)\r\n            message.contentType = String(object.contentType);\r\n        if (object.errorCode != null)\r\n            message.errorCode = object.errorCode | 0;\r\n        if (object.httpCode != null)\r\n            message.httpCode = object.httpCode >>> 0;\r\n        if (object.headers) {\r\n            if (!Array.isArray(object.headers))\r\n                throw TypeError(\".CommOpenApiResp.headers: array expected\");\r\n            message.headers = [];\r\n            for (var i = 0; i < object.headers.length; ++i) {\r\n                if (typeof object.headers[i] !== \"object\")\r\n                    throw TypeError(\".CommOpenApiResp.headers: object expected\");\r\n                message.headers[i] = $root.HttpHeader.fromObject(object.headers[i]);\r\n            }\r\n        }\r\n        if (object.svrkitErrorCode != null)\r\n            message.svrkitErrorCode = object.svrkitErrorCode | 0;\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Creates a plain object from a CommOpenApiResp message. Also converts values to other types if specified.\r\n     * @function toObject\r\n     * @memberof CommOpenApiResp\r\n     * @static\r\n     * @param {CommOpenApiResp} message CommOpenApiResp\r\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n     * @returns {Object.<string,*>} Plain object\r\n     */\r\n    CommOpenApiResp.toObject = function toObject(message, options) {\r\n        if (!options)\r\n            options = {};\r\n        var object = {};\r\n        if (options.arrays || options.defaults)\r\n            object.headers = [];\r\n        if (options.defaults) {\r\n            if (options.bytes === String)\r\n                object.respData = \"\";\r\n            else {\r\n                object.respData = [];\r\n                if (options.bytes !== Array)\r\n                    object.respData = $util.newBuffer(object.respData);\r\n            }\r\n            object.contentType = \"\";\r\n            object.errorCode = 0;\r\n            object.httpCode = 0;\r\n            object.svrkitErrorCode = 0;\r\n        }\r\n        if (message.respData != null && message.hasOwnProperty(\"respData\"))\r\n            object.respData = options.bytes === String ? $util.base64.encode(message.respData, 0, message.respData.length) : options.bytes === Array ? Array.prototype.slice.call(message.respData) : message.respData;\r\n        if (message.contentType != null && message.hasOwnProperty(\"contentType\"))\r\n            object.contentType = message.contentType;\r\n        if (message.errorCode != null && message.hasOwnProperty(\"errorCode\"))\r\n            object.errorCode = message.errorCode;\r\n        if (message.httpCode != null && message.hasOwnProperty(\"httpCode\"))\r\n            object.httpCode = message.httpCode;\r\n        if (message.headers && message.headers.length) {\r\n            object.headers = [];\r\n            for (var j = 0; j < message.headers.length; ++j)\r\n                object.headers[j] = $root.HttpHeader.toObject(message.headers[j], options);\r\n        }\r\n        if (message.svrkitErrorCode != null && message.hasOwnProperty(\"svrkitErrorCode\"))\r\n            object.svrkitErrorCode = message.svrkitErrorCode;\r\n        return object;\r\n    };\r\n\r\n    /**\r\n     * Converts this CommOpenApiResp to JSON.\r\n     * @function toJSON\r\n     * @memberof CommOpenApiResp\r\n     * @instance\r\n     * @returns {Object.<string,*>} JSON object\r\n     */\r\n    CommOpenApiResp.prototype.toJSON = function toJSON() {\r\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n    };\r\n\r\n    return CommOpenApiResp;\r\n})();\r\n\r\n$root.InnerApiData = (function() {\r\n\r\n    /**\r\n     * Properties of an InnerApiData.\r\n     * @exports IInnerApiData\r\n     * @interface IInnerApiData\r\n     * @property {number|null} [modid] InnerApiData modid\r\n     * @property {number|null} [cmdid] InnerApiData cmdid\r\n     * @property {string|null} [url] InnerApiData url\r\n     * @property {boolean|null} [useHttps] InnerApiData useHttps\r\n     * @property {HTTP_METHODS|null} [method] InnerApiData method\r\n     * @property {Array.<string>|null} [headers] InnerApiData headers\r\n     * @property {Uint8Array|null} [body] InnerApiData body\r\n     */\r\n\r\n    /**\r\n     * Constructs a new InnerApiData.\r\n     * @exports InnerApiData\r\n     * @classdesc Represents an InnerApiData.\r\n     * @implements IInnerApiData\r\n     * @constructor\r\n     * @param {IInnerApiData=} [properties] Properties to set\r\n     */\r\n    function InnerApiData(properties) {\r\n        this.headers = [];\r\n        if (properties)\r\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                if (properties[keys[i]] != null)\r\n                    this[keys[i]] = properties[keys[i]];\r\n    }\r\n\r\n    /**\r\n     * InnerApiData modid.\r\n     * @member {number} modid\r\n     * @memberof InnerApiData\r\n     * @instance\r\n     */\r\n    InnerApiData.prototype.modid = 0;\r\n\r\n    /**\r\n     * InnerApiData cmdid.\r\n     * @member {number} cmdid\r\n     * @memberof InnerApiData\r\n     * @instance\r\n     */\r\n    InnerApiData.prototype.cmdid = 0;\r\n\r\n    /**\r\n     * InnerApiData url.\r\n     * @member {string} url\r\n     * @memberof InnerApiData\r\n     * @instance\r\n     */\r\n    InnerApiData.prototype.url = \"\";\r\n\r\n    /**\r\n     * InnerApiData useHttps.\r\n     * @member {boolean} useHttps\r\n     * @memberof InnerApiData\r\n     * @instance\r\n     */\r\n    InnerApiData.prototype.useHttps = false;\r\n\r\n    /**\r\n     * InnerApiData method.\r\n     * @member {HTTP_METHODS} method\r\n     * @memberof InnerApiData\r\n     * @instance\r\n     */\r\n    InnerApiData.prototype.method = 1;\r\n\r\n    /**\r\n     * InnerApiData headers.\r\n     * @member {Array.<string>} headers\r\n     * @memberof InnerApiData\r\n     * @instance\r\n     */\r\n    InnerApiData.prototype.headers = $util.emptyArray;\r\n\r\n    /**\r\n     * InnerApiData body.\r\n     * @member {Uint8Array} body\r\n     * @memberof InnerApiData\r\n     * @instance\r\n     */\r\n    InnerApiData.prototype.body = $util.newBuffer([]);\r\n\r\n    /**\r\n     * Creates a new InnerApiData instance using the specified properties.\r\n     * @function create\r\n     * @memberof InnerApiData\r\n     * @static\r\n     * @param {IInnerApiData=} [properties] Properties to set\r\n     * @returns {InnerApiData} InnerApiData instance\r\n     */\r\n    InnerApiData.create = function create(properties) {\r\n        return new InnerApiData(properties);\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified InnerApiData message. Does not implicitly {@link InnerApiData.verify|verify} messages.\r\n     * @function encode\r\n     * @memberof InnerApiData\r\n     * @static\r\n     * @param {IInnerApiData} message InnerApiData message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    InnerApiData.encode = function encode(message, writer) {\r\n        if (!writer)\r\n            writer = $Writer.create();\r\n        if (message.modid != null && message.hasOwnProperty(\"modid\"))\r\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.modid);\r\n        if (message.cmdid != null && message.hasOwnProperty(\"cmdid\"))\r\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cmdid);\r\n        if (message.url != null && message.hasOwnProperty(\"url\"))\r\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.url);\r\n        if (message.useHttps != null && message.hasOwnProperty(\"useHttps\"))\r\n            writer.uint32(/* id 4, wireType 0 =*/32).bool(message.useHttps);\r\n        if (message.method != null && message.hasOwnProperty(\"method\"))\r\n            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.method);\r\n        if (message.headers != null && message.headers.length)\r\n            for (var i = 0; i < message.headers.length; ++i)\r\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.headers[i]);\r\n        if (message.body != null && message.hasOwnProperty(\"body\"))\r\n            writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.body);\r\n        return writer;\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified InnerApiData message, length delimited. Does not implicitly {@link InnerApiData.verify|verify} messages.\r\n     * @function encodeDelimited\r\n     * @memberof InnerApiData\r\n     * @static\r\n     * @param {IInnerApiData} message InnerApiData message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    InnerApiData.encodeDelimited = function encodeDelimited(message, writer) {\r\n        return this.encode(message, writer).ldelim();\r\n    };\r\n\r\n    /**\r\n     * Decodes an InnerApiData message from the specified reader or buffer.\r\n     * @function decode\r\n     * @memberof InnerApiData\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @param {number} [length] Message length if known beforehand\r\n     * @returns {InnerApiData} InnerApiData\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    InnerApiData.decode = function decode(reader, length) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = $Reader.create(reader);\r\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.InnerApiData();\r\n        while (reader.pos < end) {\r\n            var tag = reader.uint32();\r\n            switch (tag >>> 3) {\r\n            case 1:\r\n                message.modid = reader.uint32();\r\n                break;\r\n            case 2:\r\n                message.cmdid = reader.uint32();\r\n                break;\r\n            case 3:\r\n                message.url = reader.string();\r\n                break;\r\n            case 4:\r\n                message.useHttps = reader.bool();\r\n                break;\r\n            case 5:\r\n                message.method = reader.int32();\r\n                break;\r\n            case 6:\r\n                if (!(message.headers && message.headers.length))\r\n                    message.headers = [];\r\n                message.headers.push(reader.string());\r\n                break;\r\n            case 7:\r\n                message.body = reader.bytes();\r\n                break;\r\n            default:\r\n                reader.skipType(tag & 7);\r\n                break;\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Decodes an InnerApiData message from the specified reader or buffer, length delimited.\r\n     * @function decodeDelimited\r\n     * @memberof InnerApiData\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @returns {InnerApiData} InnerApiData\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    InnerApiData.decodeDelimited = function decodeDelimited(reader) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = new $Reader(reader);\r\n        return this.decode(reader, reader.uint32());\r\n    };\r\n\r\n    /**\r\n     * Verifies an InnerApiData message.\r\n     * @function verify\r\n     * @memberof InnerApiData\r\n     * @static\r\n     * @param {Object.<string,*>} message Plain object to verify\r\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n     */\r\n    InnerApiData.verify = function verify(message) {\r\n        if (typeof message !== \"object\" || message === null)\r\n            return \"object expected\";\r\n        if (message.modid != null && message.hasOwnProperty(\"modid\"))\r\n            if (!$util.isInteger(message.modid))\r\n                return \"modid: integer expected\";\r\n        if (message.cmdid != null && message.hasOwnProperty(\"cmdid\"))\r\n            if (!$util.isInteger(message.cmdid))\r\n                return \"cmdid: integer expected\";\r\n        if (message.url != null && message.hasOwnProperty(\"url\"))\r\n            if (!$util.isString(message.url))\r\n                return \"url: string expected\";\r\n        if (message.useHttps != null && message.hasOwnProperty(\"useHttps\"))\r\n            if (typeof message.useHttps !== \"boolean\")\r\n                return \"useHttps: boolean expected\";\r\n        if (message.method != null && message.hasOwnProperty(\"method\"))\r\n            switch (message.method) {\r\n            default:\r\n                return \"method: enum value expected\";\r\n            case 1:\r\n            case 2:\r\n            case 3:\r\n            case 4:\r\n            case 5:\r\n            case 6:\r\n                break;\r\n            }\r\n        if (message.headers != null && message.hasOwnProperty(\"headers\")) {\r\n            if (!Array.isArray(message.headers))\r\n                return \"headers: array expected\";\r\n            for (var i = 0; i < message.headers.length; ++i)\r\n                if (!$util.isString(message.headers[i]))\r\n                    return \"headers: string[] expected\";\r\n        }\r\n        if (message.body != null && message.hasOwnProperty(\"body\"))\r\n            if (!(message.body && typeof message.body.length === \"number\" || $util.isString(message.body)))\r\n                return \"body: buffer expected\";\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Creates an InnerApiData message from a plain object. Also converts values to their respective internal types.\r\n     * @function fromObject\r\n     * @memberof InnerApiData\r\n     * @static\r\n     * @param {Object.<string,*>} object Plain object\r\n     * @returns {InnerApiData} InnerApiData\r\n     */\r\n    InnerApiData.fromObject = function fromObject(object) {\r\n        if (object instanceof $root.InnerApiData)\r\n            return object;\r\n        var message = new $root.InnerApiData();\r\n        if (object.modid != null)\r\n            message.modid = object.modid >>> 0;\r\n        if (object.cmdid != null)\r\n            message.cmdid = object.cmdid >>> 0;\r\n        if (object.url != null)\r\n            message.url = String(object.url);\r\n        if (object.useHttps != null)\r\n            message.useHttps = Boolean(object.useHttps);\r\n        switch (object.method) {\r\n        case \"HTTP_GET\":\r\n        case 1:\r\n            message.method = 1;\r\n            break;\r\n        case \"HTTP_POST\":\r\n        case 2:\r\n            message.method = 2;\r\n            break;\r\n        case \"HTTP_PUT\":\r\n        case 3:\r\n            message.method = 3;\r\n            break;\r\n        case \"HTTP_DELETE\":\r\n        case 4:\r\n            message.method = 4;\r\n            break;\r\n        case \"HTTP_HEAD\":\r\n        case 5:\r\n            message.method = 5;\r\n            break;\r\n        case \"HTTP_PATCH\":\r\n        case 6:\r\n            message.method = 6;\r\n            break;\r\n        }\r\n        if (object.headers) {\r\n            if (!Array.isArray(object.headers))\r\n                throw TypeError(\".InnerApiData.headers: array expected\");\r\n            message.headers = [];\r\n            for (var i = 0; i < object.headers.length; ++i)\r\n                message.headers[i] = String(object.headers[i]);\r\n        }\r\n        if (object.body != null)\r\n            if (typeof object.body === \"string\")\r\n                $util.base64.decode(object.body, message.body = $util.newBuffer($util.base64.length(object.body)), 0);\r\n            else if (object.body.length)\r\n                message.body = object.body;\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Creates a plain object from an InnerApiData message. Also converts values to other types if specified.\r\n     * @function toObject\r\n     * @memberof InnerApiData\r\n     * @static\r\n     * @param {InnerApiData} message InnerApiData\r\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n     * @returns {Object.<string,*>} Plain object\r\n     */\r\n    InnerApiData.toObject = function toObject(message, options) {\r\n        if (!options)\r\n            options = {};\r\n        var object = {};\r\n        if (options.arrays || options.defaults)\r\n            object.headers = [];\r\n        if (options.defaults) {\r\n            object.modid = 0;\r\n            object.cmdid = 0;\r\n            object.url = \"\";\r\n            object.useHttps = false;\r\n            object.method = options.enums === String ? \"HTTP_GET\" : 1;\r\n            if (options.bytes === String)\r\n                object.body = \"\";\r\n            else {\r\n                object.body = [];\r\n                if (options.bytes !== Array)\r\n                    object.body = $util.newBuffer(object.body);\r\n            }\r\n        }\r\n        if (message.modid != null && message.hasOwnProperty(\"modid\"))\r\n            object.modid = message.modid;\r\n        if (message.cmdid != null && message.hasOwnProperty(\"cmdid\"))\r\n            object.cmdid = message.cmdid;\r\n        if (message.url != null && message.hasOwnProperty(\"url\"))\r\n            object.url = message.url;\r\n        if (message.useHttps != null && message.hasOwnProperty(\"useHttps\"))\r\n            object.useHttps = message.useHttps;\r\n        if (message.method != null && message.hasOwnProperty(\"method\"))\r\n            object.method = options.enums === String ? $root.HTTP_METHODS[message.method] : message.method;\r\n        if (message.headers && message.headers.length) {\r\n            object.headers = [];\r\n            for (var j = 0; j < message.headers.length; ++j)\r\n                object.headers[j] = message.headers[j];\r\n        }\r\n        if (message.body != null && message.hasOwnProperty(\"body\"))\r\n            object.body = options.bytes === String ? $util.base64.encode(message.body, 0, message.body.length) : options.bytes === Array ? Array.prototype.slice.call(message.body) : message.body;\r\n        return object;\r\n    };\r\n\r\n    /**\r\n     * Converts this InnerApiData to JSON.\r\n     * @function toJSON\r\n     * @memberof InnerApiData\r\n     * @instance\r\n     * @returns {Object.<string,*>} JSON object\r\n     */\r\n    InnerApiData.prototype.toJSON = function toJSON() {\r\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n    };\r\n\r\n    return InnerApiData;\r\n})();\r\n\r\n$root.SvrkitApiData = (function() {\r\n\r\n    /**\r\n     * Properties of a SvrkitApiData.\r\n     * @exports ISvrkitApiData\r\n     * @interface ISvrkitApiData\r\n     * @property {string|null} [apiName] SvrkitApiData apiName\r\n     * @property {Uint8Array|null} [reqData] SvrkitApiData reqData\r\n     */\r\n\r\n    /**\r\n     * Constructs a new SvrkitApiData.\r\n     * @exports SvrkitApiData\r\n     * @classdesc Represents a SvrkitApiData.\r\n     * @implements ISvrkitApiData\r\n     * @constructor\r\n     * @param {ISvrkitApiData=} [properties] Properties to set\r\n     */\r\n    function SvrkitApiData(properties) {\r\n        if (properties)\r\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                if (properties[keys[i]] != null)\r\n                    this[keys[i]] = properties[keys[i]];\r\n    }\r\n\r\n    /**\r\n     * SvrkitApiData apiName.\r\n     * @member {string} apiName\r\n     * @memberof SvrkitApiData\r\n     * @instance\r\n     */\r\n    SvrkitApiData.prototype.apiName = \"\";\r\n\r\n    /**\r\n     * SvrkitApiData reqData.\r\n     * @member {Uint8Array} reqData\r\n     * @memberof SvrkitApiData\r\n     * @instance\r\n     */\r\n    SvrkitApiData.prototype.reqData = $util.newBuffer([]);\r\n\r\n    /**\r\n     * Creates a new SvrkitApiData instance using the specified properties.\r\n     * @function create\r\n     * @memberof SvrkitApiData\r\n     * @static\r\n     * @param {ISvrkitApiData=} [properties] Properties to set\r\n     * @returns {SvrkitApiData} SvrkitApiData instance\r\n     */\r\n    SvrkitApiData.create = function create(properties) {\r\n        return new SvrkitApiData(properties);\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified SvrkitApiData message. Does not implicitly {@link SvrkitApiData.verify|verify} messages.\r\n     * @function encode\r\n     * @memberof SvrkitApiData\r\n     * @static\r\n     * @param {ISvrkitApiData} message SvrkitApiData message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    SvrkitApiData.encode = function encode(message, writer) {\r\n        if (!writer)\r\n            writer = $Writer.create();\r\n        if (message.apiName != null && message.hasOwnProperty(\"apiName\"))\r\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.apiName);\r\n        if (message.reqData != null && message.hasOwnProperty(\"reqData\"))\r\n            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.reqData);\r\n        return writer;\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified SvrkitApiData message, length delimited. Does not implicitly {@link SvrkitApiData.verify|verify} messages.\r\n     * @function encodeDelimited\r\n     * @memberof SvrkitApiData\r\n     * @static\r\n     * @param {ISvrkitApiData} message SvrkitApiData message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    SvrkitApiData.encodeDelimited = function encodeDelimited(message, writer) {\r\n        return this.encode(message, writer).ldelim();\r\n    };\r\n\r\n    /**\r\n     * Decodes a SvrkitApiData message from the specified reader or buffer.\r\n     * @function decode\r\n     * @memberof SvrkitApiData\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @param {number} [length] Message length if known beforehand\r\n     * @returns {SvrkitApiData} SvrkitApiData\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    SvrkitApiData.decode = function decode(reader, length) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = $Reader.create(reader);\r\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SvrkitApiData();\r\n        while (reader.pos < end) {\r\n            var tag = reader.uint32();\r\n            switch (tag >>> 3) {\r\n            case 1:\r\n                message.apiName = reader.string();\r\n                break;\r\n            case 2:\r\n                message.reqData = reader.bytes();\r\n                break;\r\n            default:\r\n                reader.skipType(tag & 7);\r\n                break;\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Decodes a SvrkitApiData message from the specified reader or buffer, length delimited.\r\n     * @function decodeDelimited\r\n     * @memberof SvrkitApiData\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @returns {SvrkitApiData} SvrkitApiData\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    SvrkitApiData.decodeDelimited = function decodeDelimited(reader) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = new $Reader(reader);\r\n        return this.decode(reader, reader.uint32());\r\n    };\r\n\r\n    /**\r\n     * Verifies a SvrkitApiData message.\r\n     * @function verify\r\n     * @memberof SvrkitApiData\r\n     * @static\r\n     * @param {Object.<string,*>} message Plain object to verify\r\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n     */\r\n    SvrkitApiData.verify = function verify(message) {\r\n        if (typeof message !== \"object\" || message === null)\r\n            return \"object expected\";\r\n        if (message.apiName != null && message.hasOwnProperty(\"apiName\"))\r\n            if (!$util.isString(message.apiName))\r\n                return \"apiName: string expected\";\r\n        if (message.reqData != null && message.hasOwnProperty(\"reqData\"))\r\n            if (!(message.reqData && typeof message.reqData.length === \"number\" || $util.isString(message.reqData)))\r\n                return \"reqData: buffer expected\";\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Creates a SvrkitApiData message from a plain object. Also converts values to their respective internal types.\r\n     * @function fromObject\r\n     * @memberof SvrkitApiData\r\n     * @static\r\n     * @param {Object.<string,*>} object Plain object\r\n     * @returns {SvrkitApiData} SvrkitApiData\r\n     */\r\n    SvrkitApiData.fromObject = function fromObject(object) {\r\n        if (object instanceof $root.SvrkitApiData)\r\n            return object;\r\n        var message = new $root.SvrkitApiData();\r\n        if (object.apiName != null)\r\n            message.apiName = String(object.apiName);\r\n        if (object.reqData != null)\r\n            if (typeof object.reqData === \"string\")\r\n                $util.base64.decode(object.reqData, message.reqData = $util.newBuffer($util.base64.length(object.reqData)), 0);\r\n            else if (object.reqData.length)\r\n                message.reqData = object.reqData;\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Creates a plain object from a SvrkitApiData message. Also converts values to other types if specified.\r\n     * @function toObject\r\n     * @memberof SvrkitApiData\r\n     * @static\r\n     * @param {SvrkitApiData} message SvrkitApiData\r\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n     * @returns {Object.<string,*>} Plain object\r\n     */\r\n    SvrkitApiData.toObject = function toObject(message, options) {\r\n        if (!options)\r\n            options = {};\r\n        var object = {};\r\n        if (options.defaults) {\r\n            object.apiName = \"\";\r\n            if (options.bytes === String)\r\n                object.reqData = \"\";\r\n            else {\r\n                object.reqData = [];\r\n                if (options.bytes !== Array)\r\n                    object.reqData = $util.newBuffer(object.reqData);\r\n            }\r\n        }\r\n        if (message.apiName != null && message.hasOwnProperty(\"apiName\"))\r\n            object.apiName = message.apiName;\r\n        if (message.reqData != null && message.hasOwnProperty(\"reqData\"))\r\n            object.reqData = options.bytes === String ? $util.base64.encode(message.reqData, 0, message.reqData.length) : options.bytes === Array ? Array.prototype.slice.call(message.reqData) : message.reqData;\r\n        return object;\r\n    };\r\n\r\n    /**\r\n     * Converts this SvrkitApiData to JSON.\r\n     * @function toJSON\r\n     * @memberof SvrkitApiData\r\n     * @instance\r\n     * @returns {Object.<string,*>} JSON object\r\n     */\r\n    SvrkitApiData.prototype.toJSON = function toJSON() {\r\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n    };\r\n\r\n    return SvrkitApiData;\r\n})();\r\n\r\n/**\r\n * HTTP_METHODS enum.\r\n * @exports HTTP_METHODS\r\n * @enum {string}\r\n * @property {number} HTTP_GET=1 HTTP_GET value\r\n * @property {number} HTTP_POST=2 HTTP_POST value\r\n * @property {number} HTTP_PUT=3 HTTP_PUT value\r\n * @property {number} HTTP_DELETE=4 HTTP_DELETE value\r\n * @property {number} HTTP_HEAD=5 HTTP_HEAD value\r\n * @property {number} HTTP_PATCH=6 HTTP_PATCH value\r\n */\r\n$root.HTTP_METHODS = (function() {\r\n    var valuesById = {}, values = Object.create(valuesById);\r\n    values[valuesById[1] = \"HTTP_GET\"] = 1;\r\n    values[valuesById[2] = \"HTTP_POST\"] = 2;\r\n    values[valuesById[3] = \"HTTP_PUT\"] = 3;\r\n    values[valuesById[4] = \"HTTP_DELETE\"] = 4;\r\n    values[valuesById[5] = \"HTTP_HEAD\"] = 5;\r\n    values[valuesById[6] = \"HTTP_PATCH\"] = 6;\r\n    return values;\r\n})();\r\n\r\n$root.HttpHeader = (function() {\r\n\r\n    /**\r\n     * Properties of a HttpHeader.\r\n     * @exports IHttpHeader\r\n     * @interface IHttpHeader\r\n     * @property {string|null} [key] HttpHeader key\r\n     * @property {string|null} [value] HttpHeader value\r\n     */\r\n\r\n    /**\r\n     * Constructs a new HttpHeader.\r\n     * @exports HttpHeader\r\n     * @classdesc Represents a HttpHeader.\r\n     * @implements IHttpHeader\r\n     * @constructor\r\n     * @param {IHttpHeader=} [properties] Properties to set\r\n     */\r\n    function HttpHeader(properties) {\r\n        if (properties)\r\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                if (properties[keys[i]] != null)\r\n                    this[keys[i]] = properties[keys[i]];\r\n    }\r\n\r\n    /**\r\n     * HttpHeader key.\r\n     * @member {string} key\r\n     * @memberof HttpHeader\r\n     * @instance\r\n     */\r\n    HttpHeader.prototype.key = \"\";\r\n\r\n    /**\r\n     * HttpHeader value.\r\n     * @member {string} value\r\n     * @memberof HttpHeader\r\n     * @instance\r\n     */\r\n    HttpHeader.prototype.value = \"\";\r\n\r\n    /**\r\n     * Creates a new HttpHeader instance using the specified properties.\r\n     * @function create\r\n     * @memberof HttpHeader\r\n     * @static\r\n     * @param {IHttpHeader=} [properties] Properties to set\r\n     * @returns {HttpHeader} HttpHeader instance\r\n     */\r\n    HttpHeader.create = function create(properties) {\r\n        return new HttpHeader(properties);\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified HttpHeader message. Does not implicitly {@link HttpHeader.verify|verify} messages.\r\n     * @function encode\r\n     * @memberof HttpHeader\r\n     * @static\r\n     * @param {IHttpHeader} message HttpHeader message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    HttpHeader.encode = function encode(message, writer) {\r\n        if (!writer)\r\n            writer = $Writer.create();\r\n        if (message.key != null && message.hasOwnProperty(\"key\"))\r\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\r\n        if (message.value != null && message.hasOwnProperty(\"value\"))\r\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\r\n        return writer;\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified HttpHeader message, length delimited. Does not implicitly {@link HttpHeader.verify|verify} messages.\r\n     * @function encodeDelimited\r\n     * @memberof HttpHeader\r\n     * @static\r\n     * @param {IHttpHeader} message HttpHeader message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    HttpHeader.encodeDelimited = function encodeDelimited(message, writer) {\r\n        return this.encode(message, writer).ldelim();\r\n    };\r\n\r\n    /**\r\n     * Decodes a HttpHeader message from the specified reader or buffer.\r\n     * @function decode\r\n     * @memberof HttpHeader\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @param {number} [length] Message length if known beforehand\r\n     * @returns {HttpHeader} HttpHeader\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    HttpHeader.decode = function decode(reader, length) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = $Reader.create(reader);\r\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.HttpHeader();\r\n        while (reader.pos < end) {\r\n            var tag = reader.uint32();\r\n            switch (tag >>> 3) {\r\n            case 1:\r\n                message.key = reader.string();\r\n                break;\r\n            case 2:\r\n                message.value = reader.string();\r\n                break;\r\n            default:\r\n                reader.skipType(tag & 7);\r\n                break;\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Decodes a HttpHeader message from the specified reader or buffer, length delimited.\r\n     * @function decodeDelimited\r\n     * @memberof HttpHeader\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @returns {HttpHeader} HttpHeader\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    HttpHeader.decodeDelimited = function decodeDelimited(reader) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = new $Reader(reader);\r\n        return this.decode(reader, reader.uint32());\r\n    };\r\n\r\n    /**\r\n     * Verifies a HttpHeader message.\r\n     * @function verify\r\n     * @memberof HttpHeader\r\n     * @static\r\n     * @param {Object.<string,*>} message Plain object to verify\r\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n     */\r\n    HttpHeader.verify = function verify(message) {\r\n        if (typeof message !== \"object\" || message === null)\r\n            return \"object expected\";\r\n        if (message.key != null && message.hasOwnProperty(\"key\"))\r\n            if (!$util.isString(message.key))\r\n                return \"key: string expected\";\r\n        if (message.value != null && message.hasOwnProperty(\"value\"))\r\n            if (!$util.isString(message.value))\r\n                return \"value: string expected\";\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Creates a HttpHeader message from a plain object. Also converts values to their respective internal types.\r\n     * @function fromObject\r\n     * @memberof HttpHeader\r\n     * @static\r\n     * @param {Object.<string,*>} object Plain object\r\n     * @returns {HttpHeader} HttpHeader\r\n     */\r\n    HttpHeader.fromObject = function fromObject(object) {\r\n        if (object instanceof $root.HttpHeader)\r\n            return object;\r\n        var message = new $root.HttpHeader();\r\n        if (object.key != null)\r\n            message.key = String(object.key);\r\n        if (object.value != null)\r\n            message.value = String(object.value);\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Creates a plain object from a HttpHeader message. Also converts values to other types if specified.\r\n     * @function toObject\r\n     * @memberof HttpHeader\r\n     * @static\r\n     * @param {HttpHeader} message HttpHeader\r\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n     * @returns {Object.<string,*>} Plain object\r\n     */\r\n    HttpHeader.toObject = function toObject(message, options) {\r\n        if (!options)\r\n            options = {};\r\n        var object = {};\r\n        if (options.defaults) {\r\n            object.key = \"\";\r\n            object.value = \"\";\r\n        }\r\n        if (message.key != null && message.hasOwnProperty(\"key\"))\r\n            object.key = message.key;\r\n        if (message.value != null && message.hasOwnProperty(\"value\"))\r\n            object.value = message.value;\r\n        return object;\r\n    };\r\n\r\n    /**\r\n     * Converts this HttpHeader to JSON.\r\n     * @function toJSON\r\n     * @memberof HttpHeader\r\n     * @instance\r\n     * @returns {Object.<string,*>} JSON object\r\n     */\r\n    HttpHeader.prototype.toJSON = function toJSON() {\r\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n    };\r\n\r\n    return HttpHeader;\r\n})();\r\n\r\n$root.ApiGetOpenDataByCloudIdReq = (function() {\r\n\r\n    /**\r\n     * Properties of an ApiGetOpenDataByCloudIdReq.\r\n     * @exports IApiGetOpenDataByCloudIdReq\r\n     * @interface IApiGetOpenDataByCloudIdReq\r\n     * @property {Array.<string>|null} [cloudidList] ApiGetOpenDataByCloudIdReq cloudidList\r\n     */\r\n\r\n    /**\r\n     * Constructs a new ApiGetOpenDataByCloudIdReq.\r\n     * @exports ApiGetOpenDataByCloudIdReq\r\n     * @classdesc Represents an ApiGetOpenDataByCloudIdReq.\r\n     * @implements IApiGetOpenDataByCloudIdReq\r\n     * @constructor\r\n     * @param {IApiGetOpenDataByCloudIdReq=} [properties] Properties to set\r\n     */\r\n    function ApiGetOpenDataByCloudIdReq(properties) {\r\n        this.cloudidList = [];\r\n        if (properties)\r\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                if (properties[keys[i]] != null)\r\n                    this[keys[i]] = properties[keys[i]];\r\n    }\r\n\r\n    /**\r\n     * ApiGetOpenDataByCloudIdReq cloudidList.\r\n     * @member {Array.<string>} cloudidList\r\n     * @memberof ApiGetOpenDataByCloudIdReq\r\n     * @instance\r\n     */\r\n    ApiGetOpenDataByCloudIdReq.prototype.cloudidList = $util.emptyArray;\r\n\r\n    /**\r\n     * Creates a new ApiGetOpenDataByCloudIdReq instance using the specified properties.\r\n     * @function create\r\n     * @memberof ApiGetOpenDataByCloudIdReq\r\n     * @static\r\n     * @param {IApiGetOpenDataByCloudIdReq=} [properties] Properties to set\r\n     * @returns {ApiGetOpenDataByCloudIdReq} ApiGetOpenDataByCloudIdReq instance\r\n     */\r\n    ApiGetOpenDataByCloudIdReq.create = function create(properties) {\r\n        return new ApiGetOpenDataByCloudIdReq(properties);\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified ApiGetOpenDataByCloudIdReq message. Does not implicitly {@link ApiGetOpenDataByCloudIdReq.verify|verify} messages.\r\n     * @function encode\r\n     * @memberof ApiGetOpenDataByCloudIdReq\r\n     * @static\r\n     * @param {IApiGetOpenDataByCloudIdReq} message ApiGetOpenDataByCloudIdReq message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    ApiGetOpenDataByCloudIdReq.encode = function encode(message, writer) {\r\n        if (!writer)\r\n            writer = $Writer.create();\r\n        if (message.cloudidList != null && message.cloudidList.length)\r\n            for (var i = 0; i < message.cloudidList.length; ++i)\r\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.cloudidList[i]);\r\n        return writer;\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified ApiGetOpenDataByCloudIdReq message, length delimited. Does not implicitly {@link ApiGetOpenDataByCloudIdReq.verify|verify} messages.\r\n     * @function encodeDelimited\r\n     * @memberof ApiGetOpenDataByCloudIdReq\r\n     * @static\r\n     * @param {IApiGetOpenDataByCloudIdReq} message ApiGetOpenDataByCloudIdReq message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    ApiGetOpenDataByCloudIdReq.encodeDelimited = function encodeDelimited(message, writer) {\r\n        return this.encode(message, writer).ldelim();\r\n    };\r\n\r\n    /**\r\n     * Decodes an ApiGetOpenDataByCloudIdReq message from the specified reader or buffer.\r\n     * @function decode\r\n     * @memberof ApiGetOpenDataByCloudIdReq\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @param {number} [length] Message length if known beforehand\r\n     * @returns {ApiGetOpenDataByCloudIdReq} ApiGetOpenDataByCloudIdReq\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    ApiGetOpenDataByCloudIdReq.decode = function decode(reader, length) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = $Reader.create(reader);\r\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ApiGetOpenDataByCloudIdReq();\r\n        while (reader.pos < end) {\r\n            var tag = reader.uint32();\r\n            switch (tag >>> 3) {\r\n            case 2:\r\n                if (!(message.cloudidList && message.cloudidList.length))\r\n                    message.cloudidList = [];\r\n                message.cloudidList.push(reader.string());\r\n                break;\r\n            default:\r\n                reader.skipType(tag & 7);\r\n                break;\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Decodes an ApiGetOpenDataByCloudIdReq message from the specified reader or buffer, length delimited.\r\n     * @function decodeDelimited\r\n     * @memberof ApiGetOpenDataByCloudIdReq\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @returns {ApiGetOpenDataByCloudIdReq} ApiGetOpenDataByCloudIdReq\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    ApiGetOpenDataByCloudIdReq.decodeDelimited = function decodeDelimited(reader) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = new $Reader(reader);\r\n        return this.decode(reader, reader.uint32());\r\n    };\r\n\r\n    /**\r\n     * Verifies an ApiGetOpenDataByCloudIdReq message.\r\n     * @function verify\r\n     * @memberof ApiGetOpenDataByCloudIdReq\r\n     * @static\r\n     * @param {Object.<string,*>} message Plain object to verify\r\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n     */\r\n    ApiGetOpenDataByCloudIdReq.verify = function verify(message) {\r\n        if (typeof message !== \"object\" || message === null)\r\n            return \"object expected\";\r\n        if (message.cloudidList != null && message.hasOwnProperty(\"cloudidList\")) {\r\n            if (!Array.isArray(message.cloudidList))\r\n                return \"cloudidList: array expected\";\r\n            for (var i = 0; i < message.cloudidList.length; ++i)\r\n                if (!$util.isString(message.cloudidList[i]))\r\n                    return \"cloudidList: string[] expected\";\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Creates an ApiGetOpenDataByCloudIdReq message from a plain object. Also converts values to their respective internal types.\r\n     * @function fromObject\r\n     * @memberof ApiGetOpenDataByCloudIdReq\r\n     * @static\r\n     * @param {Object.<string,*>} object Plain object\r\n     * @returns {ApiGetOpenDataByCloudIdReq} ApiGetOpenDataByCloudIdReq\r\n     */\r\n    ApiGetOpenDataByCloudIdReq.fromObject = function fromObject(object) {\r\n        if (object instanceof $root.ApiGetOpenDataByCloudIdReq)\r\n            return object;\r\n        var message = new $root.ApiGetOpenDataByCloudIdReq();\r\n        if (object.cloudidList) {\r\n            if (!Array.isArray(object.cloudidList))\r\n                throw TypeError(\".ApiGetOpenDataByCloudIdReq.cloudidList: array expected\");\r\n            message.cloudidList = [];\r\n            for (var i = 0; i < object.cloudidList.length; ++i)\r\n                message.cloudidList[i] = String(object.cloudidList[i]);\r\n        }\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Creates a plain object from an ApiGetOpenDataByCloudIdReq message. Also converts values to other types if specified.\r\n     * @function toObject\r\n     * @memberof ApiGetOpenDataByCloudIdReq\r\n     * @static\r\n     * @param {ApiGetOpenDataByCloudIdReq} message ApiGetOpenDataByCloudIdReq\r\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n     * @returns {Object.<string,*>} Plain object\r\n     */\r\n    ApiGetOpenDataByCloudIdReq.toObject = function toObject(message, options) {\r\n        if (!options)\r\n            options = {};\r\n        var object = {};\r\n        if (options.arrays || options.defaults)\r\n            object.cloudidList = [];\r\n        if (message.cloudidList && message.cloudidList.length) {\r\n            object.cloudidList = [];\r\n            for (var j = 0; j < message.cloudidList.length; ++j)\r\n                object.cloudidList[j] = message.cloudidList[j];\r\n        }\r\n        return object;\r\n    };\r\n\r\n    /**\r\n     * Converts this ApiGetOpenDataByCloudIdReq to JSON.\r\n     * @function toJSON\r\n     * @memberof ApiGetOpenDataByCloudIdReq\r\n     * @instance\r\n     * @returns {Object.<string,*>} JSON object\r\n     */\r\n    ApiGetOpenDataByCloudIdReq.prototype.toJSON = function toJSON() {\r\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n    };\r\n\r\n    return ApiGetOpenDataByCloudIdReq;\r\n})();\r\n\r\n$root.ApiGetOpenDataByCloudIdResp = (function() {\r\n\r\n    /**\r\n     * Properties of an ApiGetOpenDataByCloudIdResp.\r\n     * @exports IApiGetOpenDataByCloudIdResp\r\n     * @interface IApiGetOpenDataByCloudIdResp\r\n     * @property {Array.<ApiGetOpenDataByCloudIdResp.IOpDataItem>|null} [dataList] ApiGetOpenDataByCloudIdResp dataList\r\n     */\r\n\r\n    /**\r\n     * Constructs a new ApiGetOpenDataByCloudIdResp.\r\n     * @exports ApiGetOpenDataByCloudIdResp\r\n     * @classdesc Represents an ApiGetOpenDataByCloudIdResp.\r\n     * @implements IApiGetOpenDataByCloudIdResp\r\n     * @constructor\r\n     * @param {IApiGetOpenDataByCloudIdResp=} [properties] Properties to set\r\n     */\r\n    function ApiGetOpenDataByCloudIdResp(properties) {\r\n        this.dataList = [];\r\n        if (properties)\r\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                if (properties[keys[i]] != null)\r\n                    this[keys[i]] = properties[keys[i]];\r\n    }\r\n\r\n    /**\r\n     * ApiGetOpenDataByCloudIdResp dataList.\r\n     * @member {Array.<ApiGetOpenDataByCloudIdResp.IOpDataItem>} dataList\r\n     * @memberof ApiGetOpenDataByCloudIdResp\r\n     * @instance\r\n     */\r\n    ApiGetOpenDataByCloudIdResp.prototype.dataList = $util.emptyArray;\r\n\r\n    /**\r\n     * Creates a new ApiGetOpenDataByCloudIdResp instance using the specified properties.\r\n     * @function create\r\n     * @memberof ApiGetOpenDataByCloudIdResp\r\n     * @static\r\n     * @param {IApiGetOpenDataByCloudIdResp=} [properties] Properties to set\r\n     * @returns {ApiGetOpenDataByCloudIdResp} ApiGetOpenDataByCloudIdResp instance\r\n     */\r\n    ApiGetOpenDataByCloudIdResp.create = function create(properties) {\r\n        return new ApiGetOpenDataByCloudIdResp(properties);\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified ApiGetOpenDataByCloudIdResp message. Does not implicitly {@link ApiGetOpenDataByCloudIdResp.verify|verify} messages.\r\n     * @function encode\r\n     * @memberof ApiGetOpenDataByCloudIdResp\r\n     * @static\r\n     * @param {IApiGetOpenDataByCloudIdResp} message ApiGetOpenDataByCloudIdResp message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    ApiGetOpenDataByCloudIdResp.encode = function encode(message, writer) {\r\n        if (!writer)\r\n            writer = $Writer.create();\r\n        if (message.dataList != null && message.dataList.length)\r\n            for (var i = 0; i < message.dataList.length; ++i)\r\n                $root.ApiGetOpenDataByCloudIdResp.OpDataItem.encode(message.dataList[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\r\n        return writer;\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified ApiGetOpenDataByCloudIdResp message, length delimited. Does not implicitly {@link ApiGetOpenDataByCloudIdResp.verify|verify} messages.\r\n     * @function encodeDelimited\r\n     * @memberof ApiGetOpenDataByCloudIdResp\r\n     * @static\r\n     * @param {IApiGetOpenDataByCloudIdResp} message ApiGetOpenDataByCloudIdResp message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    ApiGetOpenDataByCloudIdResp.encodeDelimited = function encodeDelimited(message, writer) {\r\n        return this.encode(message, writer).ldelim();\r\n    };\r\n\r\n    /**\r\n     * Decodes an ApiGetOpenDataByCloudIdResp message from the specified reader or buffer.\r\n     * @function decode\r\n     * @memberof ApiGetOpenDataByCloudIdResp\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @param {number} [length] Message length if known beforehand\r\n     * @returns {ApiGetOpenDataByCloudIdResp} ApiGetOpenDataByCloudIdResp\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    ApiGetOpenDataByCloudIdResp.decode = function decode(reader, length) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = $Reader.create(reader);\r\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ApiGetOpenDataByCloudIdResp();\r\n        while (reader.pos < end) {\r\n            var tag = reader.uint32();\r\n            switch (tag >>> 3) {\r\n            case 1:\r\n                if (!(message.dataList && message.dataList.length))\r\n                    message.dataList = [];\r\n                message.dataList.push($root.ApiGetOpenDataByCloudIdResp.OpDataItem.decode(reader, reader.uint32()));\r\n                break;\r\n            default:\r\n                reader.skipType(tag & 7);\r\n                break;\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Decodes an ApiGetOpenDataByCloudIdResp message from the specified reader or buffer, length delimited.\r\n     * @function decodeDelimited\r\n     * @memberof ApiGetOpenDataByCloudIdResp\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @returns {ApiGetOpenDataByCloudIdResp} ApiGetOpenDataByCloudIdResp\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    ApiGetOpenDataByCloudIdResp.decodeDelimited = function decodeDelimited(reader) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = new $Reader(reader);\r\n        return this.decode(reader, reader.uint32());\r\n    };\r\n\r\n    /**\r\n     * Verifies an ApiGetOpenDataByCloudIdResp message.\r\n     * @function verify\r\n     * @memberof ApiGetOpenDataByCloudIdResp\r\n     * @static\r\n     * @param {Object.<string,*>} message Plain object to verify\r\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n     */\r\n    ApiGetOpenDataByCloudIdResp.verify = function verify(message) {\r\n        if (typeof message !== \"object\" || message === null)\r\n            return \"object expected\";\r\n        if (message.dataList != null && message.hasOwnProperty(\"dataList\")) {\r\n            if (!Array.isArray(message.dataList))\r\n                return \"dataList: array expected\";\r\n            for (var i = 0; i < message.dataList.length; ++i) {\r\n                var error = $root.ApiGetOpenDataByCloudIdResp.OpDataItem.verify(message.dataList[i]);\r\n                if (error)\r\n                    return \"dataList.\" + error;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Creates an ApiGetOpenDataByCloudIdResp message from a plain object. Also converts values to their respective internal types.\r\n     * @function fromObject\r\n     * @memberof ApiGetOpenDataByCloudIdResp\r\n     * @static\r\n     * @param {Object.<string,*>} object Plain object\r\n     * @returns {ApiGetOpenDataByCloudIdResp} ApiGetOpenDataByCloudIdResp\r\n     */\r\n    ApiGetOpenDataByCloudIdResp.fromObject = function fromObject(object) {\r\n        if (object instanceof $root.ApiGetOpenDataByCloudIdResp)\r\n            return object;\r\n        var message = new $root.ApiGetOpenDataByCloudIdResp();\r\n        if (object.dataList) {\r\n            if (!Array.isArray(object.dataList))\r\n                throw TypeError(\".ApiGetOpenDataByCloudIdResp.dataList: array expected\");\r\n            message.dataList = [];\r\n            for (var i = 0; i < object.dataList.length; ++i) {\r\n                if (typeof object.dataList[i] !== \"object\")\r\n                    throw TypeError(\".ApiGetOpenDataByCloudIdResp.dataList: object expected\");\r\n                message.dataList[i] = $root.ApiGetOpenDataByCloudIdResp.OpDataItem.fromObject(object.dataList[i]);\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Creates a plain object from an ApiGetOpenDataByCloudIdResp message. Also converts values to other types if specified.\r\n     * @function toObject\r\n     * @memberof ApiGetOpenDataByCloudIdResp\r\n     * @static\r\n     * @param {ApiGetOpenDataByCloudIdResp} message ApiGetOpenDataByCloudIdResp\r\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n     * @returns {Object.<string,*>} Plain object\r\n     */\r\n    ApiGetOpenDataByCloudIdResp.toObject = function toObject(message, options) {\r\n        if (!options)\r\n            options = {};\r\n        var object = {};\r\n        if (options.arrays || options.defaults)\r\n            object.dataList = [];\r\n        if (message.dataList && message.dataList.length) {\r\n            object.dataList = [];\r\n            for (var j = 0; j < message.dataList.length; ++j)\r\n                object.dataList[j] = $root.ApiGetOpenDataByCloudIdResp.OpDataItem.toObject(message.dataList[j], options);\r\n        }\r\n        return object;\r\n    };\r\n\r\n    /**\r\n     * Converts this ApiGetOpenDataByCloudIdResp to JSON.\r\n     * @function toJSON\r\n     * @memberof ApiGetOpenDataByCloudIdResp\r\n     * @instance\r\n     * @returns {Object.<string,*>} JSON object\r\n     */\r\n    ApiGetOpenDataByCloudIdResp.prototype.toJSON = function toJSON() {\r\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n    };\r\n\r\n    ApiGetOpenDataByCloudIdResp.OpDataItem = (function() {\r\n\r\n        /**\r\n         * Properties of an OpDataItem.\r\n         * @memberof ApiGetOpenDataByCloudIdResp\r\n         * @interface IOpDataItem\r\n         * @property {string|null} [cloudId] OpDataItem cloudId\r\n         * @property {string|null} [json] OpDataItem json\r\n         */\r\n\r\n        /**\r\n         * Constructs a new OpDataItem.\r\n         * @memberof ApiGetOpenDataByCloudIdResp\r\n         * @classdesc Represents an OpDataItem.\r\n         * @implements IOpDataItem\r\n         * @constructor\r\n         * @param {ApiGetOpenDataByCloudIdResp.IOpDataItem=} [properties] Properties to set\r\n         */\r\n        function OpDataItem(properties) {\r\n            if (properties)\r\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * OpDataItem cloudId.\r\n         * @member {string} cloudId\r\n         * @memberof ApiGetOpenDataByCloudIdResp.OpDataItem\r\n         * @instance\r\n         */\r\n        OpDataItem.prototype.cloudId = \"\";\r\n\r\n        /**\r\n         * OpDataItem json.\r\n         * @member {string} json\r\n         * @memberof ApiGetOpenDataByCloudIdResp.OpDataItem\r\n         * @instance\r\n         */\r\n        OpDataItem.prototype.json = \"\";\r\n\r\n        /**\r\n         * Creates a new OpDataItem instance using the specified properties.\r\n         * @function create\r\n         * @memberof ApiGetOpenDataByCloudIdResp.OpDataItem\r\n         * @static\r\n         * @param {ApiGetOpenDataByCloudIdResp.IOpDataItem=} [properties] Properties to set\r\n         * @returns {ApiGetOpenDataByCloudIdResp.OpDataItem} OpDataItem instance\r\n         */\r\n        OpDataItem.create = function create(properties) {\r\n            return new OpDataItem(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified OpDataItem message. Does not implicitly {@link ApiGetOpenDataByCloudIdResp.OpDataItem.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof ApiGetOpenDataByCloudIdResp.OpDataItem\r\n         * @static\r\n         * @param {ApiGetOpenDataByCloudIdResp.IOpDataItem} message OpDataItem message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        OpDataItem.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            if (message.cloudId != null && message.hasOwnProperty(\"cloudId\"))\r\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.cloudId);\r\n            if (message.json != null && message.hasOwnProperty(\"json\"))\r\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.json);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified OpDataItem message, length delimited. Does not implicitly {@link ApiGetOpenDataByCloudIdResp.OpDataItem.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof ApiGetOpenDataByCloudIdResp.OpDataItem\r\n         * @static\r\n         * @param {ApiGetOpenDataByCloudIdResp.IOpDataItem} message OpDataItem message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        OpDataItem.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes an OpDataItem message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof ApiGetOpenDataByCloudIdResp.OpDataItem\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {ApiGetOpenDataByCloudIdResp.OpDataItem} OpDataItem\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        OpDataItem.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ApiGetOpenDataByCloudIdResp.OpDataItem();\r\n            while (reader.pos < end) {\r\n                var tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.cloudId = reader.string();\r\n                    break;\r\n                case 2:\r\n                    message.json = reader.string();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes an OpDataItem message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof ApiGetOpenDataByCloudIdResp.OpDataItem\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {ApiGetOpenDataByCloudIdResp.OpDataItem} OpDataItem\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        OpDataItem.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies an OpDataItem message.\r\n         * @function verify\r\n         * @memberof ApiGetOpenDataByCloudIdResp.OpDataItem\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        OpDataItem.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (message.cloudId != null && message.hasOwnProperty(\"cloudId\"))\r\n                if (!$util.isString(message.cloudId))\r\n                    return \"cloudId: string expected\";\r\n            if (message.json != null && message.hasOwnProperty(\"json\"))\r\n                if (!$util.isString(message.json))\r\n                    return \"json: string expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates an OpDataItem message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof ApiGetOpenDataByCloudIdResp.OpDataItem\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {ApiGetOpenDataByCloudIdResp.OpDataItem} OpDataItem\r\n         */\r\n        OpDataItem.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.ApiGetOpenDataByCloudIdResp.OpDataItem)\r\n                return object;\r\n            var message = new $root.ApiGetOpenDataByCloudIdResp.OpDataItem();\r\n            if (object.cloudId != null)\r\n                message.cloudId = String(object.cloudId);\r\n            if (object.json != null)\r\n                message.json = String(object.json);\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from an OpDataItem message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof ApiGetOpenDataByCloudIdResp.OpDataItem\r\n         * @static\r\n         * @param {ApiGetOpenDataByCloudIdResp.OpDataItem} message OpDataItem\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        OpDataItem.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            var object = {};\r\n            if (options.defaults) {\r\n                object.cloudId = \"\";\r\n                object.json = \"\";\r\n            }\r\n            if (message.cloudId != null && message.hasOwnProperty(\"cloudId\"))\r\n                object.cloudId = message.cloudId;\r\n            if (message.json != null && message.hasOwnProperty(\"json\"))\r\n                object.json = message.json;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this OpDataItem to JSON.\r\n         * @function toJSON\r\n         * @memberof ApiGetOpenDataByCloudIdResp.OpDataItem\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        OpDataItem.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return OpDataItem;\r\n    })();\r\n\r\n    return ApiGetOpenDataByCloudIdResp;\r\n})();\r\n\r\n$root.ApiVoipSignReq = (function() {\r\n\r\n    /**\r\n     * Properties of an ApiVoipSignReq.\r\n     * @exports IApiVoipSignReq\r\n     * @interface IApiVoipSignReq\r\n     * @property {string|null} [groupId] ApiVoipSignReq groupId\r\n     * @property {number|null} [timestamp] ApiVoipSignReq timestamp\r\n     * @property {string|null} [nonce] ApiVoipSignReq nonce\r\n     */\r\n\r\n    /**\r\n     * Constructs a new ApiVoipSignReq.\r\n     * @exports ApiVoipSignReq\r\n     * @classdesc Represents an ApiVoipSignReq.\r\n     * @implements IApiVoipSignReq\r\n     * @constructor\r\n     * @param {IApiVoipSignReq=} [properties] Properties to set\r\n     */\r\n    function ApiVoipSignReq(properties) {\r\n        if (properties)\r\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                if (properties[keys[i]] != null)\r\n                    this[keys[i]] = properties[keys[i]];\r\n    }\r\n\r\n    /**\r\n     * ApiVoipSignReq groupId.\r\n     * @member {string} groupId\r\n     * @memberof ApiVoipSignReq\r\n     * @instance\r\n     */\r\n    ApiVoipSignReq.prototype.groupId = \"\";\r\n\r\n    /**\r\n     * ApiVoipSignReq timestamp.\r\n     * @member {number} timestamp\r\n     * @memberof ApiVoipSignReq\r\n     * @instance\r\n     */\r\n    ApiVoipSignReq.prototype.timestamp = 0;\r\n\r\n    /**\r\n     * ApiVoipSignReq nonce.\r\n     * @member {string} nonce\r\n     * @memberof ApiVoipSignReq\r\n     * @instance\r\n     */\r\n    ApiVoipSignReq.prototype.nonce = \"\";\r\n\r\n    /**\r\n     * Creates a new ApiVoipSignReq instance using the specified properties.\r\n     * @function create\r\n     * @memberof ApiVoipSignReq\r\n     * @static\r\n     * @param {IApiVoipSignReq=} [properties] Properties to set\r\n     * @returns {ApiVoipSignReq} ApiVoipSignReq instance\r\n     */\r\n    ApiVoipSignReq.create = function create(properties) {\r\n        return new ApiVoipSignReq(properties);\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified ApiVoipSignReq message. Does not implicitly {@link ApiVoipSignReq.verify|verify} messages.\r\n     * @function encode\r\n     * @memberof ApiVoipSignReq\r\n     * @static\r\n     * @param {IApiVoipSignReq} message ApiVoipSignReq message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    ApiVoipSignReq.encode = function encode(message, writer) {\r\n        if (!writer)\r\n            writer = $Writer.create();\r\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\r\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.groupId);\r\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\r\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.timestamp);\r\n        if (message.nonce != null && message.hasOwnProperty(\"nonce\"))\r\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.nonce);\r\n        return writer;\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified ApiVoipSignReq message, length delimited. Does not implicitly {@link ApiVoipSignReq.verify|verify} messages.\r\n     * @function encodeDelimited\r\n     * @memberof ApiVoipSignReq\r\n     * @static\r\n     * @param {IApiVoipSignReq} message ApiVoipSignReq message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    ApiVoipSignReq.encodeDelimited = function encodeDelimited(message, writer) {\r\n        return this.encode(message, writer).ldelim();\r\n    };\r\n\r\n    /**\r\n     * Decodes an ApiVoipSignReq message from the specified reader or buffer.\r\n     * @function decode\r\n     * @memberof ApiVoipSignReq\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @param {number} [length] Message length if known beforehand\r\n     * @returns {ApiVoipSignReq} ApiVoipSignReq\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    ApiVoipSignReq.decode = function decode(reader, length) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = $Reader.create(reader);\r\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ApiVoipSignReq();\r\n        while (reader.pos < end) {\r\n            var tag = reader.uint32();\r\n            switch (tag >>> 3) {\r\n            case 2:\r\n                message.groupId = reader.string();\r\n                break;\r\n            case 3:\r\n                message.timestamp = reader.uint32();\r\n                break;\r\n            case 4:\r\n                message.nonce = reader.string();\r\n                break;\r\n            default:\r\n                reader.skipType(tag & 7);\r\n                break;\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Decodes an ApiVoipSignReq message from the specified reader or buffer, length delimited.\r\n     * @function decodeDelimited\r\n     * @memberof ApiVoipSignReq\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @returns {ApiVoipSignReq} ApiVoipSignReq\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    ApiVoipSignReq.decodeDelimited = function decodeDelimited(reader) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = new $Reader(reader);\r\n        return this.decode(reader, reader.uint32());\r\n    };\r\n\r\n    /**\r\n     * Verifies an ApiVoipSignReq message.\r\n     * @function verify\r\n     * @memberof ApiVoipSignReq\r\n     * @static\r\n     * @param {Object.<string,*>} message Plain object to verify\r\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n     */\r\n    ApiVoipSignReq.verify = function verify(message) {\r\n        if (typeof message !== \"object\" || message === null)\r\n            return \"object expected\";\r\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\r\n            if (!$util.isString(message.groupId))\r\n                return \"groupId: string expected\";\r\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\r\n            if (!$util.isInteger(message.timestamp))\r\n                return \"timestamp: integer expected\";\r\n        if (message.nonce != null && message.hasOwnProperty(\"nonce\"))\r\n            if (!$util.isString(message.nonce))\r\n                return \"nonce: string expected\";\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Creates an ApiVoipSignReq message from a plain object. Also converts values to their respective internal types.\r\n     * @function fromObject\r\n     * @memberof ApiVoipSignReq\r\n     * @static\r\n     * @param {Object.<string,*>} object Plain object\r\n     * @returns {ApiVoipSignReq} ApiVoipSignReq\r\n     */\r\n    ApiVoipSignReq.fromObject = function fromObject(object) {\r\n        if (object instanceof $root.ApiVoipSignReq)\r\n            return object;\r\n        var message = new $root.ApiVoipSignReq();\r\n        if (object.groupId != null)\r\n            message.groupId = String(object.groupId);\r\n        if (object.timestamp != null)\r\n            message.timestamp = object.timestamp >>> 0;\r\n        if (object.nonce != null)\r\n            message.nonce = String(object.nonce);\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Creates a plain object from an ApiVoipSignReq message. Also converts values to other types if specified.\r\n     * @function toObject\r\n     * @memberof ApiVoipSignReq\r\n     * @static\r\n     * @param {ApiVoipSignReq} message ApiVoipSignReq\r\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n     * @returns {Object.<string,*>} Plain object\r\n     */\r\n    ApiVoipSignReq.toObject = function toObject(message, options) {\r\n        if (!options)\r\n            options = {};\r\n        var object = {};\r\n        if (options.defaults) {\r\n            object.groupId = \"\";\r\n            object.timestamp = 0;\r\n            object.nonce = \"\";\r\n        }\r\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\r\n            object.groupId = message.groupId;\r\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\r\n            object.timestamp = message.timestamp;\r\n        if (message.nonce != null && message.hasOwnProperty(\"nonce\"))\r\n            object.nonce = message.nonce;\r\n        return object;\r\n    };\r\n\r\n    /**\r\n     * Converts this ApiVoipSignReq to JSON.\r\n     * @function toJSON\r\n     * @memberof ApiVoipSignReq\r\n     * @instance\r\n     * @returns {Object.<string,*>} JSON object\r\n     */\r\n    ApiVoipSignReq.prototype.toJSON = function toJSON() {\r\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n    };\r\n\r\n    return ApiVoipSignReq;\r\n})();\r\n\r\n$root.ApiVoipSignResp = (function() {\r\n\r\n    /**\r\n     * Properties of an ApiVoipSignResp.\r\n     * @exports IApiVoipSignResp\r\n     * @interface IApiVoipSignResp\r\n     * @property {string|null} [signature] ApiVoipSignResp signature\r\n     */\r\n\r\n    /**\r\n     * Constructs a new ApiVoipSignResp.\r\n     * @exports ApiVoipSignResp\r\n     * @classdesc Represents an ApiVoipSignResp.\r\n     * @implements IApiVoipSignResp\r\n     * @constructor\r\n     * @param {IApiVoipSignResp=} [properties] Properties to set\r\n     */\r\n    function ApiVoipSignResp(properties) {\r\n        if (properties)\r\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                if (properties[keys[i]] != null)\r\n                    this[keys[i]] = properties[keys[i]];\r\n    }\r\n\r\n    /**\r\n     * ApiVoipSignResp signature.\r\n     * @member {string} signature\r\n     * @memberof ApiVoipSignResp\r\n     * @instance\r\n     */\r\n    ApiVoipSignResp.prototype.signature = \"\";\r\n\r\n    /**\r\n     * Creates a new ApiVoipSignResp instance using the specified properties.\r\n     * @function create\r\n     * @memberof ApiVoipSignResp\r\n     * @static\r\n     * @param {IApiVoipSignResp=} [properties] Properties to set\r\n     * @returns {ApiVoipSignResp} ApiVoipSignResp instance\r\n     */\r\n    ApiVoipSignResp.create = function create(properties) {\r\n        return new ApiVoipSignResp(properties);\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified ApiVoipSignResp message. Does not implicitly {@link ApiVoipSignResp.verify|verify} messages.\r\n     * @function encode\r\n     * @memberof ApiVoipSignResp\r\n     * @static\r\n     * @param {IApiVoipSignResp} message ApiVoipSignResp message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    ApiVoipSignResp.encode = function encode(message, writer) {\r\n        if (!writer)\r\n            writer = $Writer.create();\r\n        if (message.signature != null && message.hasOwnProperty(\"signature\"))\r\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.signature);\r\n        return writer;\r\n    };\r\n\r\n    /**\r\n     * Encodes the specified ApiVoipSignResp message, length delimited. Does not implicitly {@link ApiVoipSignResp.verify|verify} messages.\r\n     * @function encodeDelimited\r\n     * @memberof ApiVoipSignResp\r\n     * @static\r\n     * @param {IApiVoipSignResp} message ApiVoipSignResp message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\r\n    ApiVoipSignResp.encodeDelimited = function encodeDelimited(message, writer) {\r\n        return this.encode(message, writer).ldelim();\r\n    };\r\n\r\n    /**\r\n     * Decodes an ApiVoipSignResp message from the specified reader or buffer.\r\n     * @function decode\r\n     * @memberof ApiVoipSignResp\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @param {number} [length] Message length if known beforehand\r\n     * @returns {ApiVoipSignResp} ApiVoipSignResp\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    ApiVoipSignResp.decode = function decode(reader, length) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = $Reader.create(reader);\r\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ApiVoipSignResp();\r\n        while (reader.pos < end) {\r\n            var tag = reader.uint32();\r\n            switch (tag >>> 3) {\r\n            case 1:\r\n                message.signature = reader.string();\r\n                break;\r\n            default:\r\n                reader.skipType(tag & 7);\r\n                break;\r\n            }\r\n        }\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Decodes an ApiVoipSignResp message from the specified reader or buffer, length delimited.\r\n     * @function decodeDelimited\r\n     * @memberof ApiVoipSignResp\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @returns {ApiVoipSignResp} ApiVoipSignResp\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\r\n    ApiVoipSignResp.decodeDelimited = function decodeDelimited(reader) {\r\n        if (!(reader instanceof $Reader))\r\n            reader = new $Reader(reader);\r\n        return this.decode(reader, reader.uint32());\r\n    };\r\n\r\n    /**\r\n     * Verifies an ApiVoipSignResp message.\r\n     * @function verify\r\n     * @memberof ApiVoipSignResp\r\n     * @static\r\n     * @param {Object.<string,*>} message Plain object to verify\r\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n     */\r\n    ApiVoipSignResp.verify = function verify(message) {\r\n        if (typeof message !== \"object\" || message === null)\r\n            return \"object expected\";\r\n        if (message.signature != null && message.hasOwnProperty(\"signature\"))\r\n            if (!$util.isString(message.signature))\r\n                return \"signature: string expected\";\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Creates an ApiVoipSignResp message from a plain object. Also converts values to their respective internal types.\r\n     * @function fromObject\r\n     * @memberof ApiVoipSignResp\r\n     * @static\r\n     * @param {Object.<string,*>} object Plain object\r\n     * @returns {ApiVoipSignResp} ApiVoipSignResp\r\n     */\r\n    ApiVoipSignResp.fromObject = function fromObject(object) {\r\n        if (object instanceof $root.ApiVoipSignResp)\r\n            return object;\r\n        var message = new $root.ApiVoipSignResp();\r\n        if (object.signature != null)\r\n            message.signature = String(object.signature);\r\n        return message;\r\n    };\r\n\r\n    /**\r\n     * Creates a plain object from an ApiVoipSignResp message. Also converts values to other types if specified.\r\n     * @function toObject\r\n     * @memberof ApiVoipSignResp\r\n     * @static\r\n     * @param {ApiVoipSignResp} message ApiVoipSignResp\r\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n     * @returns {Object.<string,*>} Plain object\r\n     */\r\n    ApiVoipSignResp.toObject = function toObject(message, options) {\r\n        if (!options)\r\n            options = {};\r\n        var object = {};\r\n        if (options.defaults)\r\n            object.signature = \"\";\r\n        if (message.signature != null && message.hasOwnProperty(\"signature\"))\r\n            object.signature = message.signature;\r\n        return object;\r\n    };\r\n\r\n    /**\r\n     * Converts this ApiVoipSignResp to JSON.\r\n     * @function toJSON\r\n     * @memberof ApiVoipSignResp\r\n     * @instance\r\n     * @returns {Object.<string,*>} JSON object\r\n     */\r\n    ApiVoipSignResp.prototype.toJSON = function toJSON() {\r\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n    };\r\n\r\n    return ApiVoipSignResp;\r\n})();\r\n\r\nmodule.exports = $root;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/utils/assert.ts\":\r\n/*!*****************************!*\\\r\n  !*** ./src/utils/assert.ts ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst type_1 = __webpack_require__(/*! ./type */ \"./src/utils/type.ts\");\r\nconst error_1 = __webpack_require__(/*! ./error */ \"./src/utils/error.ts\");\r\nconst error_config_1 = __webpack_require__(/*! config/error.config */ \"./src/config/error.config.ts\");\r\nfunction sameType(input, ref, name) {\r\n    function sameTypeImpl(input, ref, name) {\r\n        const inputType = type_1.getType(input);\r\n        const refType = type_1.getType(ref);\r\n        if (inputType !== refType) {\r\n            return `${name} should be ${refType} instead of ${inputType}; `;\r\n        }\r\n        let errors = '';\r\n        switch (inputType) {\r\n            case 'object': {\r\n                for (const key in ref) {\r\n                    errors += sameTypeImpl(input[key], ref[key], `${name}.${key}`);\r\n                }\r\n                break;\r\n            }\r\n            case 'array': {\r\n                for (let i = 0; i < ref.length; i++) {\r\n                    errors += sameTypeImpl(input[i], ref[i], `${name}[${i}]`);\r\n                }\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n        return errors;\r\n    }\r\n    const error = sameTypeImpl(input, ref, name);\r\n    return {\r\n        passed: !error,\r\n        reason: error,\r\n    };\r\n}\r\nexports.sameType = sameType;\r\nfunction validType(input, ref, name = 'parameter') {\r\n    function validTypeImpl(input, ref, name) {\r\n        const inputType = type_1.getType(input);\r\n        const refType = type_1.getType(ref);\r\n        if (refType === 'string') {\r\n            if (inputType !== ref) {\r\n                return `${name} should be ${ref} instead of ${inputType};`;\r\n            }\r\n            return '';\r\n        }\r\n        else {\r\n            if (inputType !== refType) {\r\n                return `${name} should be ${refType} instead of ${inputType}; `;\r\n            }\r\n            let errors = '';\r\n            switch (inputType) {\r\n                case 'object': {\r\n                    for (const key in ref) {\r\n                        errors += validTypeImpl(input[key], ref[key], `${name}.${key}`);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'array': {\r\n                    for (let i = 0; i < ref.length; i++) {\r\n                        errors += validTypeImpl(input[i], ref[i], `${name}[${i}]`);\r\n                    }\r\n                    break;\r\n                }\r\n                default: {\r\n                    break;\r\n                }\r\n            }\r\n            return errors;\r\n        }\r\n    }\r\n    const error = validTypeImpl(input, ref, name);\r\n    return {\r\n        passed: !error,\r\n        reason: error,\r\n    };\r\n}\r\nexports.validType = validType;\r\nfunction validObjectOptionalType(input, ref, name = 'parameter') {\r\n    function validImpl(input, ref, name) {\r\n        const inputType = type_1.getType(input);\r\n        const refType = type_1.getType(ref);\r\n        if (refType !== 'object')\r\n            return '';\r\n        if (inputType === 'object') {\r\n            for (const key in input) {\r\n                const val = input[key];\r\n                if (val === undefined || key === null) {\r\n                    continue;\r\n                }\r\n                const assertResult = validType(val, ref[key], `${name}.${key}`);\r\n                return assertResult.passed ? '' : assertResult.reason;\r\n            }\r\n        }\r\n        else {\r\n            return `${name} should be object instead of ${inputType}`;\r\n        }\r\n        return '';\r\n    }\r\n    const error = validImpl(input, ref, name);\r\n    return {\r\n        passed: !error,\r\n        reason: error,\r\n    };\r\n}\r\nexports.validObjectOptionalType = validObjectOptionalType;\r\nfunction assertType(param, ref, name = 'parameter', ErrorClass = error_1.CloudSDKError) {\r\n    // check param validity\r\n    let paramCheckResult = validType(param, ref, name);\r\n    if (!paramCheckResult.passed) {\r\n        throw new ErrorClass({\r\n            errMsg: paramCheckResult.reason,\r\n        });\r\n    }\r\n}\r\nexports.assertType = assertType;\r\nfunction assertObjectOptionalType(param, ref, name = 'parameter', ErrorClass = error_1.CloudSDKError) {\r\n    // check param validity\r\n    let paramCheckResult = validObjectOptionalType(param, ref, name);\r\n    if (!paramCheckResult.passed) {\r\n        throw new ErrorClass({\r\n            errMsg: paramCheckResult.reason,\r\n        });\r\n    }\r\n}\r\nexports.assertObjectOptionalType = assertObjectOptionalType;\r\nfunction assertRequiredParam(param, name, funcName, ErrorClass = error_1.CloudSDKError) {\r\n    if (param === undefined || param === null) {\r\n        throw new ErrorClass({\r\n            errMsg: `parameter ${name} of function ${funcName} must be provided`,\r\n        });\r\n    }\r\n}\r\nexports.assertRequiredParam = assertRequiredParam;\r\nfunction assertObjectNotEmpty({ target, name, ErrorClass = error_1.CloudSDKError }) {\r\n    if (Object.keys(target).length === 0) {\r\n        throw new ErrorClass({\r\n            errCode: error_config_1.ERR_CODE.SDK_API_PARAMETER_ERROR,\r\n            errMsg: `${name} must not be empty`\r\n        });\r\n    }\r\n}\r\nexports.assertObjectNotEmpty = assertObjectNotEmpty;\r\n/*\r\nexport function constructTypeRef(typeDef: any): any {\r\n\r\n  const type = getType(typeDef)\r\n\r\n  switch(type) {\r\n    case 'string': {\r\n      return ''\r\n    }\r\n    case 'number': {\r\n\r\n    }\r\n  }\r\n\r\n}\r\n*/ \r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/utils/error.ts\":\r\n/*!****************************!*\\\r\n  !*** ./src/utils/error.ts ***!\r\n  \\****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst type_1 = __webpack_require__(/*! ./type */ \"./src/utils/type.ts\");\r\nconst msg_1 = __webpack_require__(/*! ./msg */ \"./src/utils/msg.ts\");\r\nconst error_config_1 = __webpack_require__(/*! config/error.config */ \"./src/config/error.config.ts\");\r\nclass CloudSDKError extends Error {\r\n    constructor(options) {\r\n        super(options.errMsg);\r\n        this.errCode = -1;\r\n        Object.defineProperties(this, {\r\n            message: {\r\n                get() {\r\n                    return `errCode: ${this.errCode} ${error_config_1.ERR_CODE[this.errCode] || ''} | errMsg: ` + this.errMsg;\r\n                },\r\n                set(msg) {\r\n                    this.errMsg = msg;\r\n                }\r\n            }\r\n        });\r\n        this.errCode = options.errCode || -1;\r\n        this.errMsg = options.errMsg;\r\n    }\r\n    get message() {\r\n        return `errCode: ${this.errCode} | errMsg: ` + this.errMsg;\r\n    }\r\n    set message(msg) {\r\n        this.errMsg = msg;\r\n    }\r\n}\r\nexports.CloudSDKError = CloudSDKError;\r\nfunction createError({ errCode = 1, errMsg = '', errClass = CloudSDKError, } = {}) {\r\n    return new errClass({\r\n        errCode,\r\n        errMsg,\r\n    });\r\n}\r\nexports.createError = createError;\r\nfunction isSDKError(error) {\r\n    return error && (error instanceof Error) && type_1.isString(error.errMsg);\r\n}\r\nexports.isSDKError = isSDKError;\r\nfunction returnAsCloudSDKError(err, appendMsg = '') {\r\n    if (err) {\r\n        if (isSDKError(err)) {\r\n            if (appendMsg) {\r\n                err.errMsg += '; ' + appendMsg;\r\n            }\r\n            return err;\r\n        }\r\n        const errCode = err ? err.errCode : undefined;\r\n        const errMsg = (err && err.errMsg || err.toString() || 'unknown error') + '; ' + appendMsg;\r\n        return new CloudSDKError({\r\n            errCode,\r\n            errMsg,\r\n        });\r\n    }\r\n    return new CloudSDKError({\r\n        errMsg: appendMsg\r\n    });\r\n}\r\nexports.returnAsCloudSDKError = returnAsCloudSDKError;\r\nfunction returnAsFinalCloudSDKError(err, apiName) {\r\n    if (err && isSDKError(err)) {\r\n        return err;\r\n    }\r\n    const e = returnAsCloudSDKError(err, `at ${apiName} api; `);\r\n    e.errMsg = msg_1.apiFailMsg(apiName, e.errMsg);\r\n    return e;\r\n}\r\nexports.returnAsFinalCloudSDKError = returnAsFinalCloudSDKError;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/utils/generic-fn.ts\":\r\n/*!*********************************!*\\\r\n  !*** ./src/utils/generic-fn.ts ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.functionIntrinsicProperties = new Set(Object.getOwnPropertyNames(Function.prototype));\r\nexports.getCallableObject = (options) => {\r\n    const f = function () { };\r\n    return new Proxy(f, {\r\n        get(target, prop) {\r\n            if (exports.functionIntrinsicProperties.has(prop)) {\r\n                // @ts-ignore\r\n                return options.callable[prop];\r\n            }\r\n            else {\r\n                return exports.getCallableObject(Object.assign(Object.assign({}, options), { paths: [...options.paths, prop] }));\r\n            }\r\n        },\r\n        apply(target, thisArg, args) {\r\n            return options.callable.call(thisArg, options, ...args);\r\n        },\r\n    });\r\n};\r\nexports.getProxyObject = (options) => {\r\n    const o = {};\r\n    return new Proxy(o, {\r\n        get(target, prop) {\r\n            return exports.getCallableObject(Object.assign(Object.assign({}, options), { paths: [prop] }));\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/utils/mimetype.ts\":\r\n/*!*******************************!*\\\r\n  !*** ./src/utils/mimetype.ts ***!\r\n  \\*******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst mimeDB = __webpack_require__(/*! mime-db */ \"mime-db\");\r\nexports.mimeTypeToFileExtension = (mimeType, defaultExtension) => {\r\n    const mime = mimeDB[mimeType];\r\n    if (mime && mime.extensions && mime.extensions.length) {\r\n        return mime.extensions[0];\r\n    }\r\n    else {\r\n        return defaultExtension;\r\n    }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/utils/msg.ts\":\r\n/*!**************************!*\\\r\n  !*** ./src/utils/msg.ts ***!\r\n  \\**************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction apiSuccessMsg(apiName) {\r\n    return `${apiName}:ok`;\r\n}\r\nexports.apiSuccessMsg = apiSuccessMsg;\r\nfunction apiCancelMsg(apiName, msg) {\r\n    return `${apiName}:cancel ${msg}`;\r\n}\r\nexports.apiCancelMsg = apiCancelMsg;\r\nfunction apiFailMsg(apiName, msg) {\r\n    return `${apiName}:fail ${msg}`;\r\n}\r\nexports.apiFailMsg = apiFailMsg;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/utils/symbol.ts\":\r\n/*!*****************************!*\\\r\n  !*** ./src/utils/symbol.ts ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst _symbols = [];\r\nconst __internalMark__ = {};\r\nclass HiddenSymbol {\r\n    constructor(target) {\r\n        Object.defineProperties(this, {\r\n            target: {\r\n                enumerable: false,\r\n                writable: false,\r\n                configurable: false,\r\n                value: target,\r\n            },\r\n        });\r\n    }\r\n}\r\nclass InternalSymbol extends HiddenSymbol {\r\n    constructor(target, __mark__) {\r\n        if (__mark__ !== __internalMark__) {\r\n            throw new TypeError('InternalSymbol cannot be constructed with new operator');\r\n        }\r\n        super(target);\r\n    }\r\n    static for(target) {\r\n        for (let i = 0, len = _symbols.length; i < len; i++) {\r\n            if (_symbols[i].target === target) {\r\n                return _symbols[i].instance;\r\n            }\r\n        }\r\n        const symbol = new InternalSymbol(target, __internalMark__);\r\n        _symbols.push({\r\n            target,\r\n            instance: symbol,\r\n        });\r\n        return symbol;\r\n    }\r\n}\r\nexports.InternalSymbol = InternalSymbol;\r\nexports.default = InternalSymbol;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/utils/type.ts\":\r\n/*!***************************!*\\\r\n  !*** ./src/utils/type.ts ***!\r\n  \\***************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst symbol_1 = __webpack_require__(/*! ./symbol */ \"./src/utils/symbol.ts\");\r\nexports.getType = (x) => Object.prototype.toString.call(x).slice(8, -1).toLowerCase();\r\nexports.isObject = (x) => exports.getType(x) === 'object';\r\nexports.isString = (x) => exports.getType(x) === 'string';\r\nexports.isNumber = (x) => exports.getType(x) === 'number';\r\nexports.isPromise = (x) => exports.getType(x) === 'promise';\r\nexports.isFunction = (x) => typeof x === 'function';\r\nexports.isArray = (x) => Array.isArray(x);\r\nexports.isDate = (x) => exports.getType(x) === 'date';\r\nexports.isBuffer = (x) => Buffer.isBuffer(x);\r\nexports.isInternalObject = (x) => x && (x._internalType instanceof symbol_1.InternalSymbol);\r\nexports.isPlainObject = (obj) => {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return false;\r\n    let proto = obj;\r\n    while (Object.getPrototypeOf(proto) !== null) {\r\n        proto = Object.getPrototypeOf(proto);\r\n    }\r\n    return Object.getPrototypeOf(obj) === proto;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/utils/utils.ts\":\r\n/*!****************************!*\\\r\n  !*** ./src/utils/utils.ts ***!\r\n  \\****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst type_1 = __webpack_require__(/*! ./type */ \"./src/utils/type.ts\");\r\nexports.convertCase = (input, options) => {\r\n    const { from, to, recursive } = options;\r\n    if (type_1.isString(input)) {\r\n        if (from === 'camelcase' && to === 'snakecase') {\r\n            return input.replace(/[A-Z]/g, (match, ind) => `${ind ? '_' : ''}${match.toLowerCase()}`);\r\n        }\r\n        else if (from === 'snakecase' && to === 'camelcase') {\r\n            return input.replace(/_[a-z]/g, (match, ind) => `${match[1].toUpperCase()}`);\r\n        }\r\n    }\r\n    else if (type_1.isObject(input)) {\r\n        return convertObject(input);\r\n    }\r\n    else if (type_1.isArray(input)) {\r\n        const array = [];\r\n        for (const item of input) {\r\n            if (type_1.isObject(item)) {\r\n                array.push(convertObject(item));\r\n            }\r\n            else if (type_1.isArray(item)) {\r\n                if (options.recursive) {\r\n                    array.push(exports.convertCase(item, options));\r\n                }\r\n                else {\r\n                    array.push(item);\r\n                }\r\n            }\r\n            else {\r\n                array.push(item);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n    else\r\n        return input;\r\n    function convertObject(input) {\r\n        const data = Object.assign({}, input);\r\n        for (const key in data) {\r\n            const val = recursive && (type_1.isObject(data[key]) || type_1.isArray(data[key])) ? exports.convertCase(data[key], options) : data[key];\r\n            const convertedKey = exports.convertCase(key, options);\r\n            data[convertedKey] = val;\r\n            if (convertedKey !== key) {\r\n                delete data[key];\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n};\r\nexports.isSCFEnvReady = () => Boolean(process.env.TCB_ENV);\r\nexports.getEnvFromCloudConfig = (config, serviceName = 'default') => {\r\n    const env = config.env[serviceName] || config.env.default;\r\n    return env;\r\n};\r\nexports.getEnvFromAPIConfig = (apiConfig, cloudConfig, serviceName = 'default') => {\r\n    if (apiConfig && apiConfig.env) {\r\n        return apiConfig.env;\r\n    }\r\n    return exports.getEnvFromCloudConfig(cloudConfig, serviceName);\r\n};\r\nexports.getServiceConfigFromDefaultConfig = (defaultConfig, serviceName = 'default') => {\r\n    return Object.assign(Object.assign({}, defaultConfig), { env: exports.getEnvFromCloudConfig(defaultConfig, serviceName) });\r\n};\r\nexports.getMergedAPIConfig = (defaultConfig, newConfig, serviceName = 'default') => {\r\n    const merged = Object.assign(Object.assign({}, defaultConfig), newConfig);\r\n    if (newConfig && newConfig.env) {\r\n        merged.env = newConfig.env;\r\n    }\r\n    else {\r\n        merged.env = exports.getEnvFromCloudConfig(defaultConfig, serviceName);\r\n    }\r\n    return merged;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"@cloudbase/node-sdk\":\r\n/*!**************************************!*\\\r\n  !*** external \"@cloudbase/node-sdk\" ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = require(\"@cloudbase/node-sdk\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"mime-db\":\r\n/*!**************************!*\\\r\n  !*** external \"mime-db\" ***!\r\n  \\**************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = require(\"mime-db\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"protobufjs/minimal\":\r\n/*!*************************************!*\\\r\n  !*** external \"protobufjs/minimal\" ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = require(\"protobufjs/minimal\");\r\n\r\n/***/ })\r\n\r\n/******/ });","module.exports = {\r\n  \"_from\": \"wx-server-sdk@latest\",\r\n  \"_id\": \"wx-server-sdk@2.0.4\",\r\n  \"_inBundle\": false,\r\n  \"_integrity\": \"sha512-2DDBfz/Xjavi6ta6kHlTVLomkBPMUDJS6itN8wonljuy1PvzlU+be9KjqXw4mJ3n0d0bJjDsWohdg4sWfXZoPQ==\",\r\n  \"_location\": \"/wx-server-sdk\",\r\n  \"_phantomChildren\": {},\r\n  \"_requested\": {\r\n    \"type\": \"tag\",\r\n    \"registry\": true,\r\n    \"raw\": \"wx-server-sdk@latest\",\r\n    \"name\": \"wx-server-sdk\",\r\n    \"escapedName\": \"wx-server-sdk\",\r\n    \"rawSpec\": \"latest\",\r\n    \"saveSpec\": null,\r\n    \"fetchSpec\": \"latest\"\r\n  },\r\n  \"_requiredBy\": [\r\n    \"#USER\",\r\n    \"/\"\r\n  ],\r\n  \"_resolved\": \"https://registry.npmjs.org/wx-server-sdk/-/wx-server-sdk-2.0.4.tgz\",\r\n  \"_shasum\": \"89cac9a1966687b1625c3f7fc9c5df509f137e8b\",\r\n  \"_spec\": \"wx-server-sdk@latest\",\r\n  \"_where\": \"C:\\\\Users\\\\a\\\\learngit\\\\HappyToClass\\\\miniprogram\",\r\n  \"author\": {\r\n    \"name\": \"wechat mini program team\"\r\n  },\r\n  \"bundleDependencies\": false,\r\n  \"dependencies\": {\r\n    \"@cloudbase/node-sdk\": \"2.0.0-beta.6\",\r\n    \"protobufjs\": \"6.8.8\",\r\n    \"tcb-admin-node\": \"1.23.0\",\r\n    \"tslib\": \"^1.9.3\"\r\n  },\r\n  \"deprecated\": false,\r\n  \"description\": \"mini program cloud server sdk\",\r\n  \"homepage\": \"https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/getting-started.html\",\r\n  \"license\": \"MIT\",\r\n  \"main\": \"index.js\",\r\n  \"name\": \"wx-server-sdk\",\r\n  \"types\": \"index.d.ts\",\r\n  \"version\": \"2.0.4\"\r\n}\r\n"]}